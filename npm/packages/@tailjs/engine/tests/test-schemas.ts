import { SchemaDefinition } from "@tailjs/types";

export const SessionInfoSchema: SchemaDefinition = {
  namespace: "urn:tailjs:core",

  types: {
    ScopeInfo: {
      abstract: true,
      readonly: false,
      visibility: "trusted-only",
      classification: "anonymous",
      purposes: {},
      extends: [],
      properties: {
        id: {
          readonly: false,
          visibility: "trusted-write",
          classification: "anonymous",
          purposes: {},
          primitive: "string",
          required: true,
        },
        firstSeen: {
          readonly: false,
          visibility: "trusted-write",
          classification: "anonymous",
          purposes: {},
          primitive: "timestamp",
          required: true,
        },
        lastSeen: {
          readonly: false,
          visibility: "trusted-write",
          classification: "anonymous",
          purposes: {},
          primitive: "timestamp",
          required: true,
        },
        views: {
          readonly: false,
          visibility: "trusted-write",
          classification: "anonymous",
          purposes: {},
          primitive: "number",
          required: true,
        },
        isNew: {
          readonly: false,
          visibility: "trusted-write",
          classification: "anonymous",
          purposes: {},
          primitive: "boolean",
          required: false,
        },
      },
    },
    SessionInfo: {
      abstract: false,
      readonly: false,
      visibility: "trusted-only",
      classification: "anonymous",
      purposes: {},
      extends: ["urn:tailjs:core#ScopeInfo"],
      properties: {
        id: {
          readonly: false,
          visibility: "trusted-only",
          classification: "anonymous",
          purposes: {},
          primitive: "string",
          required: true,
        },
        deviceSessionId: {
          readonly: false,
          visibility: "trusted-write",
          classification: "anonymous",
          purposes: {},
          primitive: "string",
          required: false,
        },
        deviceId: {
          readonly: false,
          visibility: "trusted-write",
          classification: "anonymous",
          purposes: {},
          primitive: "string",
          required: false,
        },
        userId: {
          readonly: false,
          visibility: "trusted-write",
          classification: "anonymous",
          purposes: {},
          primitive: "string",
          required: false,
        },
        previousSession: {
          readonly: false,
          visibility: "trusted-write",
          classification: "anonymous",
          purposes: {},
          primitive: "timestamp",
          required: false,
        },
        hasUserAgent: {
          readonly: false,
          visibility: "trusted-write",
          classification: "anonymous",
          purposes: {},
          primitive: "boolean",
          required: false,
        },
        tabs: {
          description: "The total number of tabs opened during the session.",
          readonly: false,
          visibility: "trusted-write",
          classification: "anonymous",
          purposes: {},
          primitive: "number",
          required: false,
        },
      },
    },
  },
  variables: {
    session: {
      "@info": {
        readonly: false,
        visibility: "trusted-write",
        classification: "anonymous",
        purposes: {},
        dynamic: false,
        reference: "SessionInfo",
      },
    },
  },
};
