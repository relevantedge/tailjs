{"version":3,"file":"TrackerExtension.js","sourceRoot":"","sources":["TrackerExtension.ts"],"names":[],"mappings":"","sourcesContent":["import { TrackedEvent } from \"@tailjs/types\";\nimport { TrackerCommand, Tracker } from \"..\";\n\nexport type TrackerExtension = {\n  /**\n   * Optionally adds extra properties to events before they are posted.\n   * If this returns false the event is skipped, and extensions after this one will not see the event.\n   */\n  decorate?(eventData: TrackedEvent): void | boolean;\n\n  /**\n   * Optionally implements custom logic in response to a command.\n   * Returning `true` indcates that the extension handled the command.\n   *\n   * If no extensions processed the command, an error occurs.\n   */\n  processCommand?(command: TrackerCommand): boolean;\n};\n\nexport type TrackerExtensionFactory = {\n  readonly id: string;\n  setup(tracker: Tracker): TrackerExtension | void;\n};\n"]}