{"version":3,"file":"EngineHost.js","sourceRoot":"","sources":["EngineHost.ts"],"names":[],"mappings":"","sourcesContent":["import { ChangeHandler, HostResponse, HttpRequest, LogMessage } from \"./shared\";\n\nexport interface ResourceEntry {\n  path: string;\n  name: string;\n  type: \"file\" | \"dir\";\n  created?: number;\n  modified?: number;\n}\n\nexport interface EngineHost {\n  compress(data: string, algorithm: string): Promise<Uint8Array | null>;\n  log<T extends string | Record<string, any>>(message: LogMessage<T>): void;\n\n  ls(path: string, rercursively?: boolean): Promise<ResourceEntry[] | null>;\n\n  readText(\n    path: string,\n    changeHandler?: ChangeHandler<string>\n  ): Promise<string | null>;\n  read(\n    path: string,\n    changeHandler?: ChangeHandler<Uint8Array>\n  ): Promise<Uint8Array | null>;\n\n  request<Binary extends boolean = false>(\n    request: HttpRequest<Binary>\n  ): Promise<HostResponse<Binary extends true ? Uint8Array : string>>;\n}\n"]}