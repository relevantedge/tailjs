{"version":3,"file":"test-schemas.js","sourceRoot":"","sources":["test-schemas.ts"],"names":[],"mappings":"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","sourcesContent":["import { clone } from \"@tailjs/util\";\r\n\r\nexport const schemaHeader = {\r\n  $schema: \"https://json-schema.org/draft/2020-12/schema\",\r\n  $id: \"urn:tailjs:core\",\r\n  \"x-privacy-class\": \"anonymous\",\r\n  \"x-privacy-purposes\": \"necessary\",\r\n};\r\n\r\nexport const systemEvents = {\r\n  TrackedEvent: {\r\n    $id: \"urn:tailjs:core:event\",\r\n    type: \"object\",\r\n    properties: {\r\n      type: {\r\n        \"x-privacy-censor\": \"ignore\",\r\n        type: \"string\",\r\n      },\r\n    },\r\n    required: [\"type\"],\r\n  },\r\n};\r\n\r\nexport type CompositionTest1 = {\r\n  test?: string;\r\n  test2?: string;\r\n  test3?: number;\r\n};\r\n\r\nexport const compositionSchema = {\r\n  ...schemaHeader,\r\n  $defs: {\r\n    Test1: {\r\n      oneOf: [\r\n        {\r\n          type: \"object\",\r\n          properties: {\r\n            test: { type: \"string\" },\r\n            test3: { type: \"number\" },\r\n          },\r\n          required: [\"test\"],\r\n        },\r\n        {\r\n          type: \"object\",\r\n          properties: {\r\n            test2: { type: \"string\" },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\nexport interface PolyBase {\r\n  $type: string;\r\n  baseProperty?: string;\r\n}\r\nexport interface PolyType1 extends PolyBase {\r\n  $type: \"type1\";\r\n  sub1?: string;\r\n}\r\n\r\nexport interface PolyType2 extends PolyBase {\r\n  $type: \"type2\";\r\n  sub2?: number;\r\n}\r\n\r\nexport interface PolyType3 extends PolyBase {\r\n  sub2?: string;\r\n  sub3?: string;\r\n}\r\n\r\nexport interface PolyType31 extends PolyBase {\r\n  $type: \"type31\";\r\n}\r\n\r\nexport interface PolyTest1 {\r\n  reference?: PolyBase;\r\n}\r\n\r\nexport const invalidPolymorphicSchema = {\r\n  ...schemaHeader,\r\n  $defs: {\r\n    BaseType: {\r\n      type: \"object\",\r\n      properties: {\r\n        $type: { type: \"string\" },\r\n        baseProperty: {\r\n          type: \"string\",\r\n        },\r\n      },\r\n      required: [\"$type\"],\r\n    },\r\n    SubType1: {\r\n      $ref: \"urn:tailjs:core#/$defs/BaseType\",\r\n      properties: {\r\n        sub1: { type: \"string\" },\r\n      },\r\n    },\r\n    SubType2: {\r\n      type: \"object\",\r\n      allOf: [{ $ref: \"urn:tailjs:core#/$defs/BaseType\" }],\r\n      properties: {\r\n        sub2: { type: \"number\" },\r\n      },\r\n    },\r\n    SubType3: {\r\n      type: \"object\",\r\n      $ref: \"urn:tailjs:core#/$defs/BaseType\",\r\n      properties: {\r\n        sub2: { type: \"string\" },\r\n      },\r\n    },\r\n    SubType31: {\r\n      type: \"object\",\r\n      $ref: \"urn:tailjs:core#/$defs/SubType3\",\r\n      properties: {\r\n        $type: { const: \"type31\" },\r\n      },\r\n    },\r\n    Test1: {\r\n      type: \"object\",\r\n      properties: {\r\n        reference: { $ref: \"#/$defs/BaseType\" },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const polymorphicSchema = clone(invalidPolymorphicSchema) as any;\r\npolymorphicSchema.$defs.SubType1.properties.$type = { const: \"type1\" };\r\npolymorphicSchema.$defs.SubType2.properties.$type = { const: \"type2\" };\r\n\r\nexport type TestEventBase = {\r\n  type: string;\r\n};\r\n\r\nexport type TestType1 = {\r\n  testNumber: number;\r\n  testNumber2?: number;\r\n  testReference?: TestType2;\r\n  testArray?: TestType3[];\r\n};\r\n\r\nexport type TestType2 = {\r\n  nestedNumber?: number;\r\n  nestedReference?: TestType1;\r\n};\r\n\r\nexport type TestType3 = {\r\n  testDate?: string;\r\n  anonymousString?: string;\r\n\r\n  testMap?: Record<string, string>;\r\n};\r\n\r\nexport type TestEvent1 = TestEventBase & {\r\n  type: \"test_event_1\";\r\n};\r\n\r\nexport type TestEvent2 = TestEventBase & {\r\n  sharedNumber: number;\r\n  sharedItems?: { n?: number }[];\r\n};\r\n\r\nexport type TestEvent3 = TestEvent2 & {\r\n  type: \"current_name\";\r\n};\r\n\r\nexport type TestEvent4 = TestEventBase & {\r\n  type: \"test_event4\";\r\n  name: string;\r\n};\r\n\r\nexport const bigSchema = {\r\n  ...schemaHeader,\r\n  $defs: {\r\n    ...systemEvents,\r\n    TestEvent1: {\r\n      allOf: [\r\n        {\r\n          $ref: \"urn:tailjs:core:event\",\r\n        },\r\n        {\r\n          type: \"object\",\r\n          properties: {\r\n            type: {\r\n              const: \"test_event_1\",\r\n            },\r\n          },\r\n        },\r\n      ],\r\n\r\n      //rel: \"testing\",\r\n    },\r\n\r\n    Type1: {\r\n      type: \"object\",\r\n\r\n      properties: {\r\n        testNumber: {\r\n          \"x-privacy-class\": \"anonymous\",\r\n          type: \"number\",\r\n        },\r\n        testNumber2: {\r\n          description: \"   @privacy direct\",\r\n          type: \"number\",\r\n        },\r\n        testReference: {\r\n          \"x-privacy-class\": \"indirect\",\r\n          $ref: \"urn:acme:other#/$defs/Type2\",\r\n        },\r\n        // hello: {\r\n        //   $ref: \"https://www.lasse.com#/$defs/hello\",\r\n        // },\r\n        testArray: {\r\n          type: \"array\",\r\n          items: {\r\n            $ref: \"#/$defs/Type3\",\r\n          },\r\n        },\r\n      },\r\n      required: [\"testNumber\"],\r\n    },\r\n    Type3: {\r\n      type: \"object\",\r\n      \"x-privacy-class\": \"sensitive\",\r\n\r\n      properties: {\r\n        testDate: {\r\n          type: \"string\",\r\n          format: \"date-time\",\r\n        },\r\n        anonymousString: {\r\n          \"x-privacy-class\": \"anonymous\",\r\n          type: \"string\",\r\n        },\r\n\r\n        testMap: {\r\n          type: \"object\",\r\n\r\n          additionalProperties: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    session: {\r\n      type: \"object\",\r\n      properties: {\r\n        test: {\r\n          \"x-privacy-class\": \"indirect\",\r\n          type: \"number\",\r\n        },\r\n        test2: {\r\n          type: \"string\",\r\n        },\r\n      },\r\n    },\r\n\r\n    \"urn:acme:other\": {\r\n      $schema: \"https://json-schema.org/draft/2020-12/schema\",\r\n      $id: \"urn:acme:other\",\r\n      \"x-privacy-purposes\": \"functionality\",\r\n\r\n      $defs: {\r\n        TestEvent2: {\r\n          allOf: [\r\n            {\r\n              type: \"object\",\r\n              $ref: \"urn:tailjs:core:event\",\r\n            },\r\n          ],\r\n          type: \"object\",\r\n          properties: {\r\n            sharedNumber: {\r\n              type: \"number\",\r\n            },\r\n            sharedItems: {\r\n              type: \"array\",\r\n              items: {\r\n                type: \"object\",\r\n                properties: {\r\n                  n: {\r\n                    type: \"number\",\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n          required: [\"sharedNumber\"],\r\n        },\r\n        TestEvent3: {\r\n          allOf: [\r\n            {\r\n              $ref: \"urn:acme:other#/$defs/TestEvent2\",\r\n            },\r\n          ],\r\n          type: \"object\",\r\n          properties: {\r\n            type: { type: \"string\", enum: [\"current_name\", \"old_name\"] },\r\n          },\r\n        },\r\n        TestEvent4: {\r\n          description:\r\n            \"Used to validate that the base event's `type` property gets ignored during censored.\",\r\n\r\n          allOf: [\r\n            {\r\n              $ref: \"urn:tailjs:core:event\",\r\n            },\r\n          ],\r\n\r\n          properties: {\r\n            type: { const: \"test_event4\" },\r\n            name: {\r\n              \"x-privacy-class\": \"direct\",\r\n              type: \"string\",\r\n            },\r\n          },\r\n        },\r\n        Type2: {\r\n          \"x-privacy-class\": \"indirect\",\r\n          type: \"object\",\r\n          properties: {\r\n            nestedNumber: {\r\n              \"x-privacy-class\": \"anonymous\",\r\n              type: \"number\",\r\n            },\r\n            nestedReference: {\r\n              \"x-privacy-class\": \"direct\",\r\n              $ref: \"urn:tailjs:core#/$defs/Type1\",\r\n            },\r\n          },\r\n        },\r\n        session: {\r\n          type: \"object\",\r\n          properties: {\r\n            test: {\r\n              \"x-privacy-class\": \"indirect\",\r\n              type: \"number\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n"]}