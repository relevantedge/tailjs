{"version":3,"file":"EventLogger.js","sourceRoot":"","sources":["EventLogger.ts"],"names":[],"mappings":"AAQA,MAAM,OAAO,WAAW;IAGM;IAFZ,EAAE,GAAG,cAAc,CAAC;IAEpC,YAA4B,aAAgC;QAAhC,kBAAa,GAAb,aAAa,CAAmB;IAAG,CAAC;IAEhE,KAAK,CAAC,IAAI,CAAC,MAAyB,EAAE,OAAgB;QACpD,KAAK,MAAM,EAAE,IAAI,MAAM,CAAC,GAAG,EAAE,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE;gBACpB,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK;gBAC/B,KAAK,EAAE,MAAM;gBACb,MAAM,EAAE,IAAI,CAAC,EAAE;gBACf,OAAO,EAAE,EAAE;aACZ,CAAC,CAAC;QACL,CAAC;IACH,CAAC;CACF","sourcesContent":["import { TrackedEvent } from \"@tailjs/types\";\nimport type {\n  TrackedEventBatch,\n  Tracker,\n  TrackerEnvironment,\n  TrackerExtension,\n} from \"../shared\";\n\nexport class EventLogger implements TrackerExtension {\n  public readonly id = \"event-logger\";\n\n  constructor(public readonly configuration: { group: string }) {}\n\n  async post(events: TrackedEventBatch, tracker: Tracker): Promise<void> {\n    for (const ev of events.add) {\n      tracker.env.log(this, {\n        group: this.configuration.group,\n        level: \"info\",\n        source: this.id,\n        message: ev,\n      });\n    }\n  }\n}\n"]}