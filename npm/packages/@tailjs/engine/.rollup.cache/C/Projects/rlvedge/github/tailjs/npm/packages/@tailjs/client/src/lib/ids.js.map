{"version":3,"file":"ids.js","sourceRoot":"","sources":["ids.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,GAAG,CAAC;AAIhD,MAAM,UAAU,GAAG,KAAK,CAAC;AAEzB,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,EAAU,EAAE,EAAE,CAAC,GAAG,UAAU,GAAG,EAAE,EAAE,CAAC;AAEhE,MAAM,YAAY,GAAG,CAAC,GAAQ,EAAE,EAAE,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;AAC/D,MAAM,CAAC,MAAM,MAAM,GAAG,GAAS,EAAE,CAC/B,OAAO,CACJ,CAAC,GAAG,CAAS,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,EAC3C,QAAQ,EACR,CAAC,CAAM,EAAE,EAAE,CAAC,CACV,CAAC,CAAC,IAAI,CAAC,CAAC;IACR,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAC1E,CACF,CAAC;AAEJ,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,GAAiB,EAAE,EAAE,CAAC,CAClD,YAAY,CAAC,CAAC,GAAG,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,6EAA6E;IAC7E,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CACrC,CAAC;AAEF,MAAM,aAAa,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;AACzC,MAAM,CAAC,MAAM,MAAM,GAAG,GAAY,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAE/E,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,EAAS,EAAE,KAAY,EAAE,EAAE,CACvD,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;AAEjD,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,EAAS,EAAE,GAAG,KAAc,EAAE,EAAE,CAC1D,KAAK,CAAC,MAAM,KAAK,CAAC;IAChB,CAAC,CAAC,EAAE;IACJ,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC;QACpB,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7B,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,aAAa,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;AAE7D,MAAM,CAAC,MAAM,MAAM,GAAG,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,aAAa,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC;AAE9E,IAAI,UAA0C,CAAC;AAC/C,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,KAAK,GAAG,MAAM,EAAE,EAAE,CAAC,CAC7C,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,EAAE,GAAG,CAAQ,CAAC;IACvC,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,UAAU,CAAC,CAAC,CAAC,GAAG,CAC5E,CAAC","sourcesContent":["import type { LocalID, UUID } from \"@tailjs/types\";\nimport { now, reduce, replace, split } from \".\";\n\nexport type TabId = string;\n\nconst KEY_PREFIX = \"(t~\";\n\nexport const mapSharedId = (id: string) => `${KEY_PREFIX}${id}`;\n\nconst randomValues = (arg: any) => crypto.getRandomValues(arg);\nexport const uuidv4 = (): UUID =>\n  replace(\n    ([1e7] as any) + -1e3 + -4e3 + -8e3 + -1e11,\n    /[018]/g,\n    (c: any) => (\n      (c *= 1),\n      (c ^ (randomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))).toString(16)\n    )\n  );\n\nexport const randomSafeInt = (arr?: Uint32Array) => (\n  randomValues((arr = new Uint32Array(2))),\n  // keep all 32 bits of the the first, top 20 of the second for 52 random bits\n  arr[0] * (1 << 20) + (arr[1] >>> 12)\n);\n\nconst localIdBuffer = new Uint32Array(2);\nexport const nextId = (): LocalID => randomSafeInt(localIdBuffer).toString(36);\n\nexport const compareTabIds = (id: TabId, other: TabId) =>\n  id.localeCompare(other, \"en\") < 0 ? id : other;\n\nexport const getMinTabId = (id: TabId, ...other: TabId[]) =>\n  other.length === 0\n    ? id\n    : other.length === 1\n    ? compareTabIds(id, other[0])\n    : reduce(other, (min, id) => compareTabIds(id, min), id);\n\nexport const TAB_ID = `${now().toString(36)}-${randomSafeInt().toString(36)}`;\n\nlet tabIdParts: [date: string, random: string];\nexport const formatTabId = (tabId = TAB_ID) => (\n  (tabIdParts = split(tabId, \"-\") as any),\n  `${new Date(parseInt(tabIdParts[0], 36)).toISOString()} (${tabIdParts[1]})`\n);\n"]}