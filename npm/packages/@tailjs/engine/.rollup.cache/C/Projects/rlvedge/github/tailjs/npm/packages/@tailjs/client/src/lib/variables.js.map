{"version":3,"file":"variables.js","sourceRoot":"","sources":["variables.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  array,\n  entries,\n  err,\n  ERR_ARGUMENT_ERROR,\n  F,\n  item,\n  map,\n  obj,\n  push,\n  T,\n  tryCatch,\n  undefined,\n} from \".\";\nimport { GetCallback, Tracker } from \"..\";\n\nexport type Variables = [\n  get: {\n    (): Record<string, any>;\n    (values: Record<string, GetCallback>, timeout?: number): void;\n  },\n  set: {\n    (key: string, value: any, passive?: boolean): void;\n    (values: Record<string, any>, passive?: boolean): void;\n    (values: [string, any][], passive: boolean): void;\n  }\n];\n\nexport const variables = (\n  tracker: Tracker,\n  listen?: (values: [key: string, value: any][]) => void\n): Variables => {\n  const data: Record<string, any> = {};\n\n  const callbacks: Record<string, GetCallback[]> = {};\n\n  const getCallbacks = (\n    key: string,\n    reset: boolean\n  ): [previous: GetCallback[], current: GetCallback[]] => [\n    (callbacks[key] ??= []),\n    reset ? (callbacks[key] = []) : callbacks[key],\n  ];\n\n  const set = (...args: any[]) => {\n    const passive = item(args, -1) === T;\n    const kvs = array(args[0])\n      ? args[0]\n      : obj(args[0])\n      ? entries(args[0])\n      : [[args[0], args[1]]];\n    map(kvs, ([key, value]) => {\n      key = \"\" + key;\n      data[key] = value;\n      const [callbacks, next] = getCallbacks(key, T);\n      map(\n        callbacks,\n        (callback) =>\n          callback(value, key, F, tracker) === T && push(next, callback)\n      );\n    });\n\n    !passive && listen?.(kvs);\n  };\n\n  const get: Variables[0] = (\n    values?: Record<string, GetCallback>,\n    timeout?: number\n  ): any => {\n    if (!values) return data;\n\n    map(entries(values), ([key, callback]) => {\n      if (!callback) return err(ERR_ARGUMENT_ERROR, key);\n      let inner = callback;\n\n      const [queue] = getCallbacks(key, F);\n\n      let triggered = F;\n      callback = (value, key, current) => {\n        triggered = T;\n        return tryCatch(() => inner(value, key, current, tracker));\n      };\n\n      if (data[key] === undefined && timeout !== 0) {\n        push(queue, callback);\n\n        timeout &&\n          timeout > 0 &&\n          setTimeout(\n            () =>\n              !triggered && // The callback has not yet been triggered, timeout happened.\n              callback(undefined, key, T, tracker) !== T &&\n              (inner = () => {}), // Neutralize the inner callback so it is not invoked again if a value arrives after the timeout.\n            timeout\n          );\n      } else {\n        callback(data[key], key, T, tracker) === T && push(queue, callback);\n      }\n    });\n  };\n  return [get, set];\n};\n"]}