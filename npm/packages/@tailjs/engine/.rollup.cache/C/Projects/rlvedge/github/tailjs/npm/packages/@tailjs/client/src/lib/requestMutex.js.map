{"version":3,"file":"requestMutex.js","sourceRoot":"","sources":["requestMutex.ts"],"names":[],"mappings":"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","sourcesContent":["import { MUTEX_REQUEST_COOKIE, MUTEX_RESPONSE_COOKIE } from \"@constants\";\nimport { EncodableObject } from \"@tailjs/util/transport\";\nimport {\n  F,\n  T,\n  createChannel,\n  debug,\n  decompose,\n  eventSet,\n  formatDuration,\n  isForegroundTab,\n  nil,\n  now,\n  promise,\n  registerStartupHandler,\n  // cookies,\n  secureCookies,\n  timeout,\n  trackerConfig,\n  tryCatch,\n} from \".\";\n\nconst cookies = secureCookies;\n\n// If a post has not completed within this threshold concurrent posting may happen.\nconst ACTIVE_REQUEST_POLL = 25;\nconst PASSIVE_REQUEST_POLL = 500;\n\nconst [addResponseListener, callResponseHandlers] =\n  eventSet<[affinity: string, variables: EncodableObject]>();\n\nexport { addResponseListener };\n\nconst responseChannel = createChannel<true | { error: any }>(\"req\");\n\nconst checkResponseCookie = () => {\n  return (\n    tryCatch(() =>\n      decompose(\n        cookies<\n          [string, [string, number], string | undefined, EncodableObject]\n        >(MUTEX_RESPONSE_COOKIE),\n        (affinity, source, error, variables) => (\n          cookies(MUTEX_RESPONSE_COOKIE, nil),\n          debug(\n            `Got response for ${source?.[0]} after ${\n              source?.[1] ? formatDuration(now() - source[1]) : \"(unknown)\"\n            }.`\n          ),\n          callResponseHandlers(affinity, variables),\n          error\n            ? (responseChannel({ error }), debug(`Response error: ${error}`))\n            : responseChannel(T),\n          T\n        )\n      )\n    ) || F\n  );\n};\n\nconst responseTimeout = timeout();\n\nconst pollResponseCookie = () => (\n  isForegroundTab() && checkResponseCookie(),\n  responseTimeout(\n    pollResponseCookie,\n    cookies(MUTEX_REQUEST_COOKIE) ? ACTIVE_REQUEST_POLL : PASSIVE_REQUEST_POLL\n  )\n);\n\nregisterStartupHandler(() => pollResponseCookie());\n\nexport const tryAcquireRequestLock = async (\n  force: boolean,\n  source: string,\n  action: (forced: boolean) => boolean | any\n): Promise<boolean> => {\n  const sourceLabel = `(${source ?? \"(unknown)\"})`;\n  checkResponseCookie();\n  let forced = !!cookies(MUTEX_REQUEST_COOKIE);\n  if (!force && forced) {\n    debug(`Another request is currently in progress - request cancelled.`);\n    return F;\n  }\n  let t0 = now();\n  const cookieValue = [sourceLabel, t0];\n  cookies(MUTEX_REQUEST_COOKIE, cookieValue, trackerConfig.requestTimeout);\n  cookies(MUTEX_RESPONSE_COOKIE, nil);\n  if (action(forced) === F) {\n    cookies(MUTEX_REQUEST_COOKIE, nil);\n    return T;\n  }\n\n  return await promise<boolean>((resolve) =>\n    responseChannel((response) => (resolve(response === T), F), T)\n  );\n};\n"]}