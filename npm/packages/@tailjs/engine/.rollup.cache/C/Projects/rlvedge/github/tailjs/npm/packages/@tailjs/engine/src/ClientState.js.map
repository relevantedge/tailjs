{"version":3,"file":"ClientState.js","sourceRoot":"","sources":["ClientState.ts"],"names":[],"mappings":"AAAA,+DAA+D;AAC/D,8CAA8C;AAC9C,sDAAsD;AACtD,uEAAuE;AAEvE,8CAA8C;AAE9C,iCAAiC;AACjC,gBAAgB;AAChB,mBAAmB;AACnB,IAAI;AAEJ,iDAAiD;AACjD,oBAAoB;AACpB,wBAAwB;AACxB,kCAAkC;AAClC,qBAAqB;AACrB,kCAAkC;AAElC,4BAA4B;AAC5B,IAAI;AAEJ,gDAAgD;AAChD,4BAA4B;AAC5B,sBAAsB;AACtB,IAAI;AAEJ,iCAAiC;AACjC,0CAA0C;AAC1C,yCAAyC;AACzC,KAAK;AAEL,iCAAiC;AACjC,4BAA4B;AAC5B,qBAAqB;AACrB,wBAAwB;AACxB,sDAAsD;AACtD,KAAK;AAEL,6BAA6B;AAC7B,qCAAqC;AACrC,sCAAsC;AACtC,0BAA0B;AAC1B,2BAA2B;AAC3B,KAAK;AAEL,qEAAqE;AAErE,4BAA4B;AAC5B,qCAAqC;AACrC,2BAA2B;AAC3B,iCAAiC;AACjC,8CAA8C;AAC9C,oDAAoD;AACpD,0CAA0C;AAC1C,KAAK;AAEL,qCAAqC;AACrC,iCAAiC;AACjC,qFAAqF;AACrF,uCAAuC;AACvC,KAAK;AAEL,gEAAgE;AAEhE,iCAAiC;AACjC,oCAAoC;AACpC,0CAA0C;AAC1C,KAAK;AAEL,8BAA8B;AAC9B,uBAAuB;AACvB,kDAAkD;AAClD,gDAAgD;AAChD,sDAAsD;AACtD,mDAAmD;AACnD,KAAK;AAEL,qBAAqB;AACrB,cAAc;AACd,iBAAiB;AACjB,aAAa;AACb,IAAI;AAEJ,kCAAkC;AAClC,QAAQ;AACR,kCAAkC;AAClC,QAAQ;AACR,0BAA0B;AAE1B,QAAQ;AACR,0EAA0E;AAC1E,OAAO;AACP,kBAAkB;AAClB,OAAO;AACP,QAAQ;AACR,wBAAwB;AAExB,QAAQ;AACR,iCAAiC;AACjC,QAAQ;AACR,sBAAsB;AACtB,KAAK;AAEL,0DAA0D;AAC1D,2GAA2G;AAC3G,2BAA2B;AAC3B,+BAA+B;AAE/B,yEAAyE;AACzE,kDAAkD;AAClD,4BAA4B;AAC5B,+CAA+C;AAC/C,mBAAmB;AACnB,kFAAkF;AAClF,YAAY;AACZ,mBAAmB;AACnB,QAAQ;AAER,0BAA0B;AAC1B,2CAA2C;AAC3C,iCAAiC;AACjC,8BAA8B;AAC9B,4CAA4C;AAC5C,8CAA8C;AAE9C,yBAAyB;AACzB,eAAe;AACf,wBAAwB;AACxB,sDAAsD;AACtD,mEAAmE;AACnE,oCAAoC;AACpC,QAAQ;AACR,gBAAgB;AAChB,0BAA0B;AAC1B,qEAAqE;AACrE,SAAS;AACT,+CAA+C;AAC/C,KAAK;AAEL,4BAA4B;AAC5B,6CAA6C;AAC7C,4CAA4C;AAC5C,0BAA0B;AAC1B,uBAAuB;AACvB,OAAO;AACP,0BAA0B;AAC1B,aAAa;AACb,wBAAwB;AACxB,gBAAgB;AAChB,sCAAsC;AACtC,4BAA4B;AAC5B,0EAA0E;AAC1E,UAAU;AACV,OAAO;AAEP,6BAA6B;AAC7B,mEAAmE;AAEnE,8CAA8C;AAC9C,wCAAwC;AACxC,gCAAgC;AAChC,wEAAwE;AAExE,qCAAqC;AACrC,2CAA2C;AAE3C,qBAAqB;AACrB,oEAAoE;AACpE,qBAAqB;AACrB,OAAO;AACP,2BAA2B;AAC3B,mCAAmC;AACnC,8BAA8B;AAC9B,6BAA6B;AAC7B,yCAAyC;AAEzC,uDAAuD;AAEvD,4BAA4B;AAC5B,6BAA6B;AAC7B,MAAM;AAEN,oDAAoD;AACpD,2EAA2E;AAC3E,iEAAiE;AACjE,MAAM;AAEN,uBAAuB;AACvB,oCAAoC;AACpC,qCAAqC;AAErC,iEAAiE;AACjE,kFAAkF;AAClF,SAAS;AAET,+DAA+D;AAC/D,iCAAiC;AACjC,qBAAqB;AACrB,uBAAuB;AACvB,wBAAwB;AACxB,6BAA6B;AAC7B,WAAW;AACX,kFAAkF;AAClF,uBAAuB;AACvB,SAAS;AAET,mEAAmE;AACnE,oDAAoD;AACpD,SAAS;AACT,kCAAkC;AAClC,sCAAsC;AACtC,QAAQ;AACR,iEAAiE;AACjE,mDAAmD;AACnD,sDAAsD;AACtD,SAAS;AACT,wDAAwD;AACxD,qCAAqC;AACrC,QAAQ;AAER,8DAA8D;AAC9D,wBAAwB;AACxB,gCAAgC;AAChC,eAAe;AACf,qCAAqC;AACrC,mBAAmB;AACnB,6DAA6D;AAC7D,SAAS;AAET,0DAA0D;AAC1D,wBAAwB;AACxB,gCAAgC;AAChC,eAAe;AACf,qCAAqC;AACrC,mBAAmB;AACnB,yDAAyD;AACzD,SAAS;AAET,kEAAkE;AAClE,wBAAwB;AACxB,gCAAgC;AAChC,0BAA0B;AAC1B,eAAe;AACf,oCAAoC;AACpC,mBAAmB;AACnB,4DAA4D;AAC5D,SAAS;AAET,8DAA8D;AAC9D,wBAAwB;AACxB,gCAAgC;AAChC,0BAA0B;AAC1B,eAAe;AACf,oCAAoC;AACpC,mBAAmB;AACnB,wDAAwD;AACxD,SAAS;AAET,yBAAyB;AACzB,mBAAmB;AACnB,uEAAuE;AACvE,6BAA6B;AAC7B,mEAAmE;AACnE,yBAAyB;AACzB,+BAA+B;AAE/B,uBAAuB;AACvB,mFAAmF;AACnF,MAAM;AAEN,iDAAiD;AACjD,+DAA+D;AAC/D,MAAM;AAEN,kCAAkC;AAClC,8BAA8B;AAC9B,sCAAsC;AACtC,0CAA0C;AAC1C,gEAAgE;AAChE,UAAU;AACV,SAAS;AACT,qCAAqC;AACrC,MAAM;AAEN,qDAAqD;AACrD,cAAc;AACd,oDAAoD;AACpD,uBAAuB;AACvB,yEAAyE;AACzE,wBAAwB;AACxB,cAAc;AACd,yBAAyB;AACzB,MAAM;AAEN,6BAA6B;AAC7B,yBAAyB;AACzB,oBAAoB;AACpB,wBAAwB;AACxB,6BAA6B;AAC7B,0BAA0B;AAC1B,eAAe;AACf,uEAAuE;AACvE,uBAAuB;AACvB,6BAA6B;AAC7B,0BAA0B;AAC1B,gCAAgC;AAChC,+BAA+B;AAC/B,qBAAqB;AACrB,yBAAyB;AACzB,sCAAsC;AACtC,WAAW;AACX,SAAS;AACT,MAAM;AAEN,4BAA4B;AAC5B,yBAAyB;AACzB,yBAAyB;AACzB,mCAAmC;AACnC,+BAA+B;AAC/B,eAAe;AACf,mBAAmB;AACnB,iBAAiB;AACjB,oBAAoB;AACpB,uDAAuD;AACvD,SAAS;AACT,MAAM;AAEN,8BAA8B;AAC9B,yBAAyB;AACzB,qBAAqB;AACrB,mCAAmC;AACnC,2BAA2B;AAC3B,eAAe;AACf,gEAAgE;AAChE,uBAAuB;AACvB,sBAAsB;AACtB,wBAAwB;AACxB,SAAS;AACT,MAAM;AAEN,0EAA0E;AAC1E,mCAAmC;AAEnC,uBAAuB;AACvB,8EAA8E;AAC9E,6DAA6D;AAC7D,0BAA0B;AAC1B,QAAQ;AACR,sDAAsD;AACtD,MAAM;AAEN,iCAAiC;AACjC,uDAAuD;AACvD,yBAAyB;AACzB,+EAA+E;AAC/E,eAAe;AACf,2EAA2E;AAC3E,qCAAqC;AACrC,wCAAwC;AACxC,8CAA8C;AAC9C,SAAS;AACT,MAAM;AAEN,kCAAkC;AAClC,yBAAyB;AACzB,yFAAyF;AACzF,0DAA0D;AAC1D,4BAA4B;AAC5B,0BAA0B;AAC1B,uCAAuC;AACvC,kCAAkC;AAClC,sCAAsC;AACtC,iCAAiC;AACjC,iEAAiE;AACjE,eAAe;AACf,YAAY;AACZ,8BAA8B;AAC9B,2CAA2C;AAC3C,wDAAwD;AACxD,cAAc;AACd,sCAAsC;AAEtC,eAAe;AACf,uDAAuD;AACvD,kBAAkB;AAClB,gDAAgD;AAChD,uCAAuC;AACvC,6BAA6B;AAC7B,kCAAkC;AAClC,0CAA0C;AAC1C,8CAA8C;AAC9C,oDAAoD;AACpD,cAAc;AACd,aAAa;AACb,8DAA8D;AAC9D,iDAAiD;AACjD,WAAW;AACX,SAAS;AACT,MAAM;AAEN,kCAAkC;AAClC,iEAAiE;AACjE,8DAA8D;AAC9D,2EAA2E;AAC3E,QAAQ;AAER,oCAAoC;AACpC,qCAAqC;AACrC,sBAAsB;AAEtB,gDAAgD;AAChD,kEAAkE;AAClE,QAAQ;AAER,mKAAmK;AACnK,mEAAmE;AAEnE,iFAAiF;AACjF,mEAAmE;AACnE,SAAS;AAET,yEAAyE;AACzE,+DAA+D;AAC/D,mDAAmD;AAEnD,WAAW;AACX,uBAAuB;AACvB,uBAAuB;AACvB,sEAAsE;AACtE,UAAU;AACV,mDAAmD;AACnD,gCAAgC;AAChC,iCAAiC;AACjC,2CAA2C;AAC3C,yBAAyB;AACzB,kBAAkB;AAClB,wHAAwH;AACxH,aAAa;AACb,YAAY;AACZ,wCAAwC;AACxC,yCAAyC;AACzC,QAAQ;AAER,4DAA4D;AAE5D,+EAA+E;AAC/E,uEAAuE;AACvE,SAAS;AACT,uEAAuE;AACvE,mEAAmE;AACnE,SAAS;AAET,WAAW;AACX,uBAAuB;AACvB,uBAAuB;AACvB,oEAAoE;AACpE,UAAU;AACV,kDAAkD;AAClD,uCAAuC;AACvC,mCAAmC;AACnC,QAAQ;AAER,wDAAwD;AACxD,6BAA6B;AAC7B,oCAAoC;AACpC,8CAA8C;AAC9C,4BAA4B;AAC5B,kCAAkC;AAClC,eAAe;AACf,sCAAsC;AACtC,QAAQ;AAER,iFAAiF;AACjF,+DAA+D;AAE/D,8EAA8E;AAC9E,gDAAgD;AAChD,mBAAmB;AACnB,8BAA8B;AAC9B,0BAA0B;AAC1B,cAAc;AACd,SAAS;AAET,uBAAuB;AACvB,mBAAmB;AACnB,0BAA0B;AAC1B,qCAAqC;AACrC,cAAc;AACd,SAAS;AACT,sDAAsD;AACtD,mBAAmB;AACnB,8BAA8B;AAC9B,8BAA8B;AAC9B,aAAa;AACb,SAAS;AAET,oDAAoD;AACpD,gEAAgE;AAChE,gDAAgD;AAChD,iCAAiC;AACjC,+DAA+D;AAC/D,0CAA0C;AAC1C,2BAA2B;AAC3B,qBAAqB;AACrB,6CAA6C;AAE7C,sCAAsC;AACtC,wDAAwD;AACxD,SAAS;AAET,sBAAsB;AACtB,MAAM;AAEN,oDAAoD;AACpD,0BAA0B;AAC1B,oCAAoC;AACpC,yEAAyE;AACzE,qCAAqC;AACrC,sBAAsB;AACtB,+BAA+B;AAC/B,sDAAsD;AACtD,6BAA6B;AAC7B,WAAW;AACX,oDAAoD;AACpD,0BAA0B;AAC1B,+EAA+E;AAC/E,WAAW;AACX,QAAQ;AACR,sBAAsB;AACtB,MAAM;AACN,IAAI","sourcesContent":["// import { ConsentLevel, VariableScope } from \"@tailjs/types\";\n// import { any, clone, equals } from \"./lib\";\n// import { RequestHandler, Tracker } from \"./shared\";\n// import { Encodable, EncodableObject } from \"@tailjs/util/transport\";\n\n// export const CLIENT_STATE_DATA_VERSION = 2;\n\n// export interface ClientScope {\n//   id: string;\n//   views: number;\n// }\n\n// export interface Session extends ClientScope {\n//   isNew: boolean;\n//   persisted: boolean;\n//   previous: number | undefined;\n//   started: number;\n//   lastSeen: number | undefined;\n\n//   reset(): Promise<void>;\n// }\n\n// export interface Device extends ClientScope {\n//   deviceSessions: number;\n//   sessions: number;\n// }\n\n// type TrackerVariableLayout = [\n//   server?: EncodableObject | undefined,\n//   client?: EncodableObject | undefined\n// ];\n\n// type ClientScopeDataLayout = [\n//   timestamp: number, // 0\n//   id: string, // 1\n//   views: number, // 2\n//   essential: TrackerVariableLayout | undefined // 3\n// ];\n\n// type SessionDataLayout = [\n//   ...scope: ClientScopeDataLayout,\n//   previous: number | undefined, //4\n//   started: number, // 5\n//   persisted: boolean //6\n// ];\n\n// type EssentialSessionDataLayout = [...session: SessionDataLayout];\n\n// type DeviceDataLayout = [\n//   ...scope: ClientScopeDataLayout,\n//   sessions: number, // 4\n//   deviceSessions: number, // 5\n//   previousSession: number | undefined, // 6\n//   previousDeviceSession: number | undefined, // 7\n//   deviceSession: SessionDataLayout // 8\n// ];\n\n// type EssentialDeviceDataLayout = [\n//   ...device: DeviceDataLayout,\n//   consent: [timestamp: number | undefined, level: ConsentLevel] | undefined, // 9,\n//   username: string | undefined // 10\n// ];\n\n// type OptInSessionDataLayout = [data?: TrackerVariableLayout];\n\n// type OptInDeviceDataLayout = [\n//   device?: TrackerVariableLayout,\n//   deviceSession?: TrackerVariableLayout\n// ];\n\n// type AffinityDataLayout = [\n//   timestamp: number,\n//   essentialSession: EssentialSessionDataLayout,\n//   essentialDevice: EssentialDeviceDataLayout,\n//   optInSession: OptInSessionDataLayout | undefined,\n//   optInDevice: OptInDeviceDataLayout | undefined\n// ];\n\n// const enum Purge {\n//   None = 0,\n//   Session = 1,\n//   All = 2,\n// }\n\n// export type TrackerVariable = {\n//   /**\n//    * The scope of the variable.\n//    */\n//   scope: VariableScope;\n\n//   /**\n//    * If the variable is essential (e.g. can be stored without consent).\n//    *\n//    * Be afraid.\n//    *\n//    */\n//   essential: boolean;\n\n//   /**\n//    * The value of the variable\n//    */\n//   value: Encodable;\n// };\n\n// // const getVariableIndex = (value: TrackerVariable) =>\n// //   (value.scope === VariableScope.Session ? 0 : value.scope === VariableScope.DeviceSession ? 2 : 4) +\n// //   +!value.essential +\n// //   (value.client ? 6 : 0);\n\n// // const splitVariables = (vars: Record<string, TrackerVariable>) => {\n// //   const set = [] as any as RequestVariables;\n// //   Object.entries(vars)\n// //     .filter(([_, value]) => value.client)\n// //     .forEach(\n// //       ([key, value]) => ((set[getVariableIndex(value)] ??= {})[key] = value)\n// //     );\n// //   return set;\n// // };\n\n// const packVariables = (\n//   vars: Record<string, TrackerVariable>,\n//   scope: VariableScope | null,\n//   essential: boolean | null\n// ): TrackerVariableLayout | undefined => {\n//   const layout: TrackerVariableLayout = [];\n\n//   Object.entries(vars)\n//     .filter(\n//       ([_, value]) =>\n//         (scope == null || value.scope === scope) &&\n//         (essential == null || !!value.essential == essential) &&\n//         value.value !== undefined\n//     )\n//     .forEach(\n//       ([key, value]) =>\n//         ((layout[value.client ? 1 : 0] ??= {})[key] = value.value)\n//     );\n//   return layout.length ? layout : undefined;\n// };\n\n// const unpackVariables = (\n//   target: Record<string, TrackerVariable>,\n//   set: TrackerVariableLayout | undefined,\n//   scope: VariableScope,\n//   essential: boolean\n// ) =>\n//   Array.isArray(set) &&\n//   set.map(\n//     (vars, client) =>\n//       vars &&\n//       Object.entries(vars).forEach(\n//         ([key, value]) =>\n//           (target[key] = { scope, essential, client: !!client, value })\n//       )\n//   );\n\n// export class ClientState {\n//   private readonly _cookieNames: RequestHandler[\"_cookieNames\"];\n\n//   private _affinity: Encodable | undefined;\n//   private _purge: Purge = Purge.None;\n//   private _timestamp: number;\n//   private _initialVariables: Record<string, Encodable> | null = null;\n\n//   public readonly timeout: number;\n//   public readonly deviceTimeout: number;\n\n//   /** @internal */\n//   public consent: { timestamp?: number; level: ConsentLevel } = {\n//     level: \"none\",\n//   };\n//   public device: Device;\n//   public deviceSession: Session;\n//   public persisted = false;\n//   public session: Session;\n//   public username: string | undefined;\n\n//   public vars: Record<string, TrackerVariable> = {};\n\n//   public get affinity() {\n//     return this._affinity;\n//   }\n\n//   public constructor(private _tracker: Tracker) {\n//     this.timeout = _tracker._requestHandler._sessionTimeout * 60 * 1000;\n//     this._cookieNames = _tracker._requestHandler._cookieNames;\n//   }\n\n//   public persist() {\n//     const timestamp = Date.now();\n//     const tracker = this._tracker;\n\n//     const essentialSessionData: EssentialSessionDataLayout = [\n//       ...this._packSessionData(timestamp, this.session, VariableScope.Session),\n//     ];\n\n//     const essentialDeviceData: EssentialDeviceDataLayout = [\n//       ...this._packDeviceData(\n//         timestamp,\n//         this.device,\n//         this.session,\n//         this.deviceSession\n//       ),\n//       this.consent ? [this.consent.timestamp, this.consent.active] : undefined,\n//       this.username,\n//     ];\n\n//     let optInSessionData: OptInSessionDataLayout | undefined = [\n//       packVariables(this.vars, \"session\", false),\n//     ];\n//     if (!optInSessionData[0]) {\n//       optInSessionData = undefined;\n//     }\n//     let optInDeviceData: OptInDeviceDataLayout | undefined = [\n//       packVariables(this.vars, \"device\", false),\n//       packVariables(this.vars, \"device-se\", false),\n//     ];\n//     if (!optInDeviceData[0] && !optInDeviceData[1]) {\n//       optInDeviceData = undefined;\n//     }\n\n//     tracker.cookies[this._cookieNames.essentialSession] = {\n//       httpOnly: true,\n//       sameSitePolicy: \"None\",\n//       value:\n//         this._purge !== Purge.None\n//           ? null\n//           : this._formatCookieValue(essentialSessionData),\n//     };\n\n//     tracker.cookies[this._cookieNames.optInSession] = {\n//       httpOnly: true,\n//       sameSitePolicy: \"None\",\n//       value:\n//         this._purge !== Purge.None\n//           ? null\n//           : this._formatCookieValue(optInSessionData),\n//     };\n\n//     tracker.cookies[this._cookieNames.essentialIdentifiers] = {\n//       httpOnly: true,\n//       sameSitePolicy: \"None\",\n//       maxAge: 34560000,\n//       value:\n//         this._purge === Purge.All\n//           ? null\n//           : this._formatCookieValue(essentialDeviceData),\n//     };\n\n//     tracker.cookies[this._cookieNames.optInIdentifiers] = {\n//       httpOnly: true,\n//       sameSitePolicy: \"None\",\n//       maxAge: 34560000,\n//       value:\n//         this._purge === Purge.All\n//           ? null\n//           : this._formatCookieValue(optInDeviceData),\n//     };\n\n//     const affinity = [\n//       timestamp,\n//       this._purge !== Purge.None ? undefined : essentialSessionData,\n//       essentialDeviceData,\n//       this._purge !== Purge.None ? undefined : optInSessionData,\n//       optInDeviceData,\n//     ] as AffinityDataLayout;\n\n//     this._affinity =\n//       this._purge === Purge.All ? undefined : tracker.env.httpEncrypt(affinity);\n//   }\n\n//   public purgeCookies(includeDevice = false) {\n//     this._purge = includeDevice ? Purge.All : Purge.Session;\n//   }\n\n//   public async resetSession() {\n//     const now = Date.now();\n//     this.vars = Object.fromEntries(\n//       Object.entries(this.vars).filter(\n//         ([_, value]) => value.scope !== VariableScope.Session\n//       )\n//     );\n//     this._unpackSession(now, now);\n//   }\n\n//   private _formatCookieValue<T extends Encodable>(\n//     data: T\n//   ): T extends null | undefined ? null : string {\n//     return any(data)\n//       ? `${CLIENT_STATE_DATA_VERSION}!${this._tracker.env.httpEncrypt(\n//           data as any\n//         )}`\n//       : (null as any);\n//   }\n\n//   private _packDeviceData(\n//     timestamp: number,\n//     data: Device,\n//     session: Session,\n//     deviceSession: Session\n//   ): DeviceDataLayout {\n//     return [\n//       ...this._packScopeData(timestamp, data, VariableScope.Device),\n//       data.sessions,\n//       data.deviceSessions,\n//       session.previous,\n//       deviceSession.previous,\n//       this._packSessionData(\n//         timestamp,\n//         deviceSession,\n//         VariableScope.DeviceSession\n//       ),\n//     ];\n//   }\n\n//   private _packScopeData(\n//     timestamp: number,\n//     data: ClientScope,\n//     variableScope: VariableScope\n//   ): ClientScopeDataLayout {\n//     return [\n//       timestamp,\n//       data.id,\n//       data.views,\n//       packVariables(this.vars, variableScope, true),\n//     ];\n//   }\n\n//   private _packSessionData(\n//     timestamp: number,\n//     data: Session,\n//     variableScope: VariableScope\n//   ): SessionDataLayout {\n//     return [\n//       ...this._packScopeData(timestamp, data, variableScope),\n//       data.previous,\n//       data.started,\n//       data.persisted,\n//     ];\n//   }\n\n//   private _parseCookieValue<T = any>(data: string | null | undefined) {\n//     if (!data) return undefined;\n\n//     let version = 0;\n//     const value = data.replace(/^(.*?)!/, (_, m1) => ((version = m1), \"\"));\n//     if (!version || version < CLIENT_STATE_DATA_VERSION) {\n//       return undefined;\n//     }\n//     return this._tracker.env.httpDecrypt<T>(value);\n//   }\n\n//   private async _unpackDevice(\n//     deviceData?: [...DeviceDataLayout, ...unknown[]]\n//   ): Promise<Device> {\n//     unpackVariables(this.vars, deviceData?.[3], VariableScope.Device, true);\n//     return {\n//       id: deviceData?.[1] ?? (await this._tracker.env.nextId(\"device\")),\n//       views: deviceData?.[2] ?? 0,\n//       sessions: deviceData?.[4] ?? 0,\n//       deviceSessions: deviceData?.[5] ?? 0,\n//     };\n//   }\n\n//   private async _unpackSession(\n//     timestamp: number,\n//     lastSeen: number | undefined, // When new use the last timestamp from device data.\n//     sessionData?: [...SessionDataLayout, ...unknown[]],\n//     deviceSession = false\n//   ): Promise<Session> {\n//     const isNew = !sessionData?.[1];\n//     const scope = deviceSession\n//       ? VariableScope.DeviceSession\n//       : VariableScope.Session;\n//     unpackVariables(this.vars, sessionData?.[3], scope, true);\n//     return {\n//       id:\n//         sessionData?.[1] ??\n//         (await this._tracker.env.nextId(\n//           deviceSession ? \"deviceSession\" : \"session\"\n//         )),\n//       views: sessionData?.[2] ?? 0,\n\n//       isNew,\n//       previous: isNew ? lastSeen : sessionData?.[4],\n//       lastSeen,\n//       started: sessionData?.[5] ?? timestamp,\n//       persisted: !!sessionData?.[6],\n//       reset: async () => {\n//         const now = Date.now();\n//         this.vars = Object.fromEntries(\n//           Object.entries(this.vars).filter(\n//             ([_, value]) => value.scope !== scope\n//           )\n//         );\n//         this[deviceSession ? \"deviceSession\" : \"session\"] =\n//           await this._unpackSession(now, now);\n//       },\n//     };\n//   }\n\n//   private _initialized = false;\n//   public async initialize(clientAffinity?: Encodable | null) {\n//     if (this._initialized === (this._initialized = true)) {\n//       throw new Error(\"The client state has already been initialized.\");\n//     }\n\n//     const timestamp = Date.now();\n//     const tracker = this._tracker;\n//     this.vars = {};\n\n//     if (typeof clientAffinity === \"string\") {\n//       clientAffinity = tracker.env.httpDecrypt(clientAffinity);\n//     }\n\n//     // [...transient, ...permanent, opIn.session, optin, optInDevice and permanent together as a fallback if the client for some reason didn't send its cookies.\n//     let affinity = (clientAffinity ?? []) as AffinityDataLayout;\n\n//     let essentialSession = this._parseCookieValue<EssentialSessionDataLayout>(\n//       tracker.cookies[this._cookieNames.essentialSession]?.value\n//     );\n\n//     let optInSession = this._parseCookieValue<OptInSessionDataLayout>(\n//       tracker.cookies[this._cookieNames.optInSession]?.value\n//     )?.[0] as TrackerVariableLayout | undefined;\n\n//     if (\n//       affinity[0] &&\n//       affinity[1] &&\n//       (!essentialSession?.[0] || affinity[0] > essentialSession[0])\n//     ) {\n//       // Session cookie is unavailable or stale.\n//       this._tracker.env.log({\n//         group: \"client-state\",\n//         source: this._tracker.requestId,\n//         level: \"warn\",\n//         data: [\n//           `Affinity is newer than cookie, using session ID ${affinity[1]?.[1]} instead of ${essentialSession?.[1]}.`,\n//         ],\n//       });\n//       essentialSession = affinity[1];\n//       optInSession = affinity[3]?.[0];\n//     }\n\n//     this._timestamp = essentialSession?.[0] ?? timestamp;\n\n//     let essentialDevice = this._parseCookieValue<EssentialDeviceDataLayout>(\n//       tracker.cookies[this._cookieNames.essentialIdentifiers]?.value\n//     );\n//     let optInDevice = this._parseCookieValue<OptInDeviceDataLayout>(\n//       tracker.cookies[this._cookieNames.optInIdentifiers]?.value\n//     );\n\n//     if (\n//       affinity[0] &&\n//       affinity[2] &&\n//       (!essentialDevice?.[0] || affinity[0] > essentialDevice[0])\n//     ) {\n//       // Device cookie is unavailable or stale.\n//       essentialDevice = affinity[2];\n//       optInDevice = affinity[4];\n//     }\n\n//     if (timestamp - this._timestamp > this.timeout) {\n//       // tracker.env.log({\n//       //   group: \"client-state\",\n//       //   source: this._tracker.requestId,\n//       //   level: \"info\",\n//       //   data: \"new session\",\n//       // });\n//       essentialSession = [] as any;\n//     }\n\n//     unpackVariables(this.vars, optInDevice?.[0], VariableScope.Device, false);\n//     this.device = await this._unpackDevice(essentialDevice);\n\n//     unpackVariables(this.vars, optInSession, VariableScope.Session, false);\n//     this.session = await this._unpackSession(\n//       timestamp,\n//       essentialDevice?.[0],\n//       essentialSession,\n//       false\n//     );\n\n//     unpackVariables(\n//       this.vars,\n//       optInDevice?.[1],\n//       VariableScope.DeviceSession,\n//       false\n//     );\n//     this.deviceSession = await this._unpackSession(\n//       timestamp,\n//       essentialDevice?.[0],\n//       essentialDevice?.[8],\n//       true\n//     );\n\n//     this.session.isNew && ++this.device.sessions;\n//     this.deviceSession.isNew && ++this.device.deviceSessions;\n//     const consentData = essentialDevice?.[9];\n//     this.consent = consentData\n//       ? { timestamp: consentData[0], level: consentData[1] }\n//       : !tracker.env.hasManagedConsents\n//       ? { active: true }\n//       : undefined;\n//     this.username = essentialDevice?.[10];\n\n//     this._initialVariables = clone(\n//       packVariables(this.vars, null, null)?.[1] ?? {}\n//     );\n\n//     this.persist();\n//   }\n\n//   public getChangedVariables(): EncodableObject {\n//     const changes = {};\n//     if (this._initialVariables) {\n//       const current = packVariables(this.vars, null, null)?.[1] ?? {};\n//       Object.entries(current).map(\n//         ([k, v]) =>\n//           !(k in changes) &&\n//           !equals(v, this._initialVariables![k]) &&\n//           (changes[k] = v)\n//       );\n//       Object.entries(this._initialVariables).map(\n//         ([k, value]) =>\n//           value !== undefined && !(k in current) && (changes[k] = undefined)\n//       );\n//     }\n//     return changes;\n//   }\n// }\n"]}