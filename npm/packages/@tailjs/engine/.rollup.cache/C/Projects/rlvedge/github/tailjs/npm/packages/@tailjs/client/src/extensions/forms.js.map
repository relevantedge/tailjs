{"version":3,"file":"forms.js","sourceRoot":"","sources":["forms.ts"],"names":[],"mappings":"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","sourcesContent":["import { FormEvent, FormField, Timestamp, cast } from \"@tailjs/types\";\nimport type { Nullish } from \"@tailjs/util\";\nimport {\n  TrackerExtensionFactory,\n  addViewChangedListener,\n  getComponentContext,\n  getVisibleDuration,\n  onFrame,\n} from \"..\";\nimport {\n  NodeWithParentElement,\n  T,\n  addTerminationListener,\n  attr,\n  document,\n  entries,\n  get,\n  getOrSet,\n  getRect,\n  item,\n  listen,\n  map,\n  nil,\n  now,\n  push,\n  replace,\n  scopeAttr,\n  timeout,\n  trackerFlag,\n  trackerPropertyName,\n  undefined,\n  uuidv4,\n} from \"../lib\";\n\ntype FormElement = HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\n\nconst enum FormFillState {\n  None = 0,\n  Submitted = 1,\n  Pending = 2,\n  Submitting = 3,\n}\n\ntype FormState = [\n  event: FormEvent,\n  fields: WeakMap<Element, FormFieldState>,\n  element: HTMLFormElement,\n  fillState: FormFillState,\n  started: Timestamp,\n  nextFillOrder: number\n];\n\nconst currentValue = Symbol();\ntype FormFieldState = FormField & {\n  [currentValue]: string;\n};\n\nexport const forms: TrackerExtensionFactory = {\n  id: \"forms\",\n  setup(tracker) {\n    const formEvents = new Map<HTMLFormElement, FormState>();\n\n    const getFormFieldValue = (element: any): string =>\n      element.selectedOptions\n        ? [...element.selectedOptions].map((option) => option.value).join(\",\")\n        : element.type === \"checkbox\"\n        ? element.checked\n          ? \"yes\"\n          : \"no\"\n        : element.value;\n\n    const getFormState = (\n      el: FormElement\n    ): [input: FormElement, state: FormState] | undefined => {\n      const formElement = el.form;\n      if (!formElement) return; // Don't care if we started with an element that didn't map to a field.\n\n      const refName =\n        scopeAttr(formElement, trackerPropertyName(\"ref\")) || \"track_ref\";\n\n      const parseElements = () => {\n        map(\n          formElement.querySelectorAll(\n            \"INPUT,SELECT,TEXTAREA\"\n          ) as NodeListOf<FormElement>,\n          (el, i) => {\n            if (!el.name || el.type === \"hidden\") {\n              if (\n                el.type === \"hidden\" &&\n                (el.name === refName || trackerFlag(el, \"ref\"))\n              ) {\n                !el.value && (el.value = uuidv4());\n                state[0].ref = el.value;\n              }\n              return;\n            }\n\n            const name = el.name;\n            const field = (state[0].fields![name] ??= {\n              id: el.id || name,\n              name,\n              label: replace(\n                item(el.labels, 0)?.innerText ?? el.name,\n                /^\\s*(.*?)\\s*\\*?\\s*$/g,\n                \"$1\"\n              ),\n              activeTime: 0,\n              type: el.type ?? \"unknown\",\n              [currentValue as any]: getFormFieldValue(el),\n            }) as FormFieldState;\n\n            state[0].fields![field.name] = field;\n            state[1].set(el, field);\n          }\n        );\n      };\n\n      let capturedContext: ReturnType<typeof getComponentContext>;\n\n      const isFormVisible = () =>\n        formElement.isConnected && getRect(formElement).width;\n\n      const state = getOrSet(formEvents, formElement, () => {\n        const fieldMap = new Map<Element, FormFieldState>();\n        const ev: FormEvent = {\n          type: \"FORM\",\n          name:\n            scopeAttr(formElement, trackerPropertyName(\"form-name\")) ||\n            attr(formElement, \"name\") ||\n            formElement.id ||\n            undefined,\n          activeTime: 0,\n          totalTime: 0,\n          fields: {},\n        };\n\n        let state: FormState;\n        const commitEvent = () => {\n          handleLostFocus(); // focusout or change events may not be called when the user leaves the page while a field has focus.\n\n          // If the form has disappeared it is heuristically assumed it was submitted successfully.\n          state[3] >= FormFillState.Pending &&\n            (ev.completed =\n              state[3] === FormFillState.Submitting || !isFormVisible());\n          push(\n            tracker,\n            cast<FormEvent>({\n              ...capturedContext,\n              ...ev,\n              totalTime: now(T) - state[4],\n            })\n          );\n          state[3] = FormFillState.Submitted;\n        };\n\n        addViewChangedListener(commitEvent);\n        addTerminationListener(commitEvent);\n\n        const commitTimeout = timeout();\n\n        listen(formElement, \"submit\", () => {\n          capturedContext = getComponentContext(formElement);\n          state[3] = FormFillState.Submitting;\n\n          commitTimeout(() => {\n            // If the form disappears within 750 ms but no navigation happens it is assumed that it was \"submitted\" somehow, e.g. via AJAX.\n            // This heurtistic may result in false positives if the user clicks submit, gets vaildation errors and then leaves the site instantly.\n            //\n            // If the server is aggressively slow to respond to a post and the for goes back into pending state,\n            // it is undefined whether the submit happened or not, if the user leaves the site before the server responds.\n            // In this case it will count as abandondment.\n\n            if (formElement.isConnected && getRect(formElement).width > 0) {\n              state[3] = FormFillState.Pending;\n              commitTimeout();\n            } else {\n              commitEvent();\n            }\n          }, 750);\n        });\n\n        return (state = [\n          ev,\n          fieldMap,\n          formElement,\n          FormFillState.None,\n          now(T),\n          1,\n        ]);\n      });\n      if (!get(state[1], el)) {\n        // This will also be the case if a new field was added to the DOM.\n        parseElements();\n      }\n      return [el!, state];\n    };\n\n    const getFieldInfo = (\n      el: NodeWithParentElement,\n      [formElement, state] = getFormState(el as any) ?? [],\n      field = state?.[1].get(formElement as Element)\n    ) => field && ([state![0], field, formElement!, state!] as const);\n\n    let currentField: ReturnType<typeof getFieldInfo> | null = nil;\n    const handleLostFocus = () => {\n      if (!currentField) return;\n\n      const [form, field, el, state] = currentField;\n      const active = -(tv0 - (tv0 = getVisibleDuration()));\n      const total = -(t0 - (t0 = now(T)));\n\n      const previousValue = field[currentValue];\n      const newValue = (field[currentValue] = getFormFieldValue(el));\n\n      if (newValue !== previousValue) {\n        field.fillOrder ??= state[5]++;\n        if (field.filled) {\n          field.corrections = (field.corrections ?? 0) + 1;\n        }\n        field.filled = T;\n\n        state[3] = FormFillState.Pending;\n        entries(\n          form.fields!,\n          ([name, value]) =>\n            (value.lastField = name === field.name || undefined)\n        );\n      }\n\n      field.activeTime! += active;\n      field.totalTime! += total;\n      form.activeTime! += active;\n      currentField = nil;\n    };\n\n    let tv0 = 0;\n    let t0 = 0;\n    const wireFormFields = (document: Document | Nullish) => {\n      document &&\n        listen(\n          document,\n          [\"focusin\", \"focusout\", \"change\"],\n          (ev, _, current = getFieldInfo(ev.target)) => {\n            current &&\n              ((currentField = current),\n              ev.type === \"focusin\"\n                ? ((t0 = now(T)), (tv0 = getVisibleDuration()))\n                : handleLostFocus());\n          }\n        );\n    };\n\n    wireFormFields(document);\n    onFrame((frame) => frame.contentDocument && wireFormFields);\n  },\n};\n"]}