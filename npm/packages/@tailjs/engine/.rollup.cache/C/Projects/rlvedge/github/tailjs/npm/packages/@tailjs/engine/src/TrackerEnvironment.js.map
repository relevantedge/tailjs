{"version":3,"file":"TrackerEnvironment.js","sourceRoot":"","sources":["TrackerEnvironment.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Encodable,\n  hash,\n  httpDecode,\n  httpEncode,\n} from \"@tailjs/util/transport\";\nimport ShortUniqueId from \"short-unique-id\";\n\nimport { Nulls, isString } from \"@tailjs/util\";\nimport { formatError, params } from \"./lib\";\nimport {\n  LogLevel,\n  type ChangeHandler,\n  type Cookie,\n  type CryptoProvider,\n  type EngineHost,\n  type HttpRequest,\n  type HttpResponse,\n  type LogMessage,\n  type ModelMetadata,\n  VariableStorage,\n} from \"./shared\";\n\nconst SAME_SITE = { strict: \"Strict\", lax: \"Lax\", none: \"None\" };\n\nconst uuid = new ShortUniqueId();\n\nconst getDefaultLogSourceName = (source: any): string => {\n  if (!source) return \"\";\n  if (isString(source)) return source;\n\n  let logName = source.logName?.();\n  if (!logName) {\n    logName = source?.constructor?.name;\n    if (logName === \"Object\" || logName === \"Function\") {\n      logName = \"\" + source;\n    }\n\n    return logName;\n  }\n\n  return source?.logId?.() || source?.constructor.name || \"\" + source;\n};\n\nexport class TrackerEnvironment {\n  private readonly _crypto: CryptoProvider;\n  private readonly _host: EngineHost;\n  private readonly _logGroups = new Map<\n    any,\n    { group: string; name?: string }\n  >();\n\n  public readonly metadata: ModelMetadata;\n  public readonly tags?: string[];\n  public readonly hasManagedConsents: boolean;\n  public readonly cookieVersion: string;\n  public readonly storage: VariableStorage;\n\n  constructor(\n    host: EngineHost,\n    crypto: CryptoProvider,\n    metadata: ModelMetadata,\n    hasManagedConsents: boolean,\n    storage: VariableStorage,\n    tags?: string[],\n    cookieVersion = \"C\"\n  ) {\n    this._host = host;\n    this._crypto = crypto;\n    this.metadata = metadata;\n    this.tags = tags;\n    this.cookieVersion = cookieVersion;\n    this.hasManagedConsents = hasManagedConsents;\n    this.storage = storage;\n  }\n\n  /** @internal */\n  public _setLogInfo(\n    ...sources: { source: any; group: string; name: string }[]\n  ) {\n    sources.forEach((source) =>\n      this._logGroups.set(source, {\n        group: source.group,\n        name: source.name ?? getDefaultLogSourceName(source),\n      })\n    );\n  }\n\n  public httpEncrypt(value: Encodable) {\n    return this._crypto.encrypt(value);\n  }\n\n  public httpEncode(value: Encodable) {\n    return httpEncode(value);\n  }\n\n  public httpDecode<T = any>(encoded: string): T;\n  public httpDecode<T = any>(encoded: string | null | undefined): T | null;\n  public httpDecode(encoded: string): any {\n    return httpDecode(encoded);\n  }\n\n  public httpDecrypt<T = any>(encoded: string): T;\n  public httpDecrypt<T = any>(encoded: string | null | undefined): T | null;\n  public httpDecrypt(encoded: string): any {\n    if (encoded == null) return encoded as any;\n    return this._crypto.decrypt(encoded);\n  }\n\n  public hash<T extends string | null | undefined, B extends boolean>(\n    source: T,\n    numeric: B,\n    secure?: boolean\n  ): B extends true ? number : T & Nulls<T>;\n  public hash<T extends string | null | undefined>(\n    source: T,\n    bits?: 32 | 64 | 128,\n    secure?: boolean\n  ): string & Nulls<T>;\n  public hash(value: any, numericOrBits: any, secure = false): any {\n    return value == null\n      ? (value as any)\n      : secure\n      ? this._crypto.hash(value, numericOrBits)\n      : hash(value, numericOrBits);\n  }\n\n  public log(source: any, message: LogMessage): void;\n  public log(\n    source: any,\n    message: string | null | undefined,\n    logLevel?: LogLevel,\n    error?: Error\n  ): void;\n  public log(\n    source: any,\n    arg: LogMessage | string | null | undefined,\n    level?: LogLevel,\n    error?: Error\n  ): void {\n    const message: Partial<LogMessage> | null =\n      error instanceof Error\n        ? {\n            message: arg ? `${arg}: ${formatError(error)}` : formatError(error),\n            level: level ?? \"error\",\n          }\n        : isString(arg)\n        ? {\n            message: arg,\n            level: level ?? \"info\",\n          }\n        : arg\n        ? arg\n        : null;\n    if (!message) {\n      return;\n    }\n\n    const { group, name } = this._logGroups.get(source) ?? {\n      group: \"\",\n      source: getDefaultLogSourceName(source),\n    };\n\n    message.group ??= group;\n    message.source ??= name;\n\n    this._host.log(message as LogMessage);\n  }\n\n  public async nextId(scope?: string) {\n    return uuid.rnd();\n  }\n\n  readText(\n    path: string,\n    changeHandler?: ChangeHandler<string>\n  ): Promise<string | null> {\n    return this._host.readText(path, changeHandler);\n  }\n  read(\n    path: string,\n    changeHandler?: ChangeHandler<Uint8Array>\n  ): Promise<Uint8Array | null> {\n    return this._host.read(path, changeHandler);\n  }\n\n  public async request<Binary extends boolean = false>(\n    request: HttpRequest<Binary>\n  ): Promise<HttpResponse<Binary>> {\n    request.method ??= request.body ? \"POST\" : \"GET\";\n    request.headers ??= {};\n    delete request.headers[\"host\"];\n    delete request.headers[\"accept-encoding\"];\n\n    const response = await this._host.request({\n      url: request.url,\n      binary: request.binary,\n      method: request.method,\n      body: request.body,\n      headers: request.headers ?? {},\n      x509: request.x509,\n    });\n\n    const responseHeaders = Object.fromEntries(\n      Object.entries(response.headers).map(([name, value]) => [\n        name.toLowerCase(),\n        value,\n      ])\n    );\n\n    const cookies: Record<string, Cookie> = {};\n\n    for (const cookie of response.cookies) {\n      const ps = params(cookie);\n\n      if (!ps[0]) continue;\n      const [name, value] = ps[0];\n      const rest = Object.fromEntries(\n        ps.slice(1).map(([k, v]) => [k.toLowerCase(), v])\n      );\n\n      cookies[name] = {\n        value,\n        httpOnly: \"httponly\" in rest,\n        sameSitePolicy: SAME_SITE[rest[\"samesite\"]] ?? \"Lax\",\n        maxAge: rest[\"max-age\"] ? parseInt(rest[\"max-age\"]) : undefined,\n      };\n    }\n\n    responseHeaders[\"content-type\"] ??= \"text/plain\";\n\n    return {\n      request,\n      status: response.status,\n      headers: responseHeaders,\n      cookies,\n      body: response.body,\n    };\n  }\n\n  // #region LogShortcuts\n\n  public warn(source: any, message: string, error?: Error): void;\n  public warn(\n    source: any,\n    message: string | null | undefined,\n    error: Error\n  ): void;\n  public warn(source: any, message: string, error?: Error) {\n    this.log(source, message, \"warn\", error);\n  }\n\n  public error(source: any, message: string, error?: Error): void;\n  public error(\n    source: any,\n    message: string | null | undefined,\n    error: Error\n  ): void;\n  public error(source: any, message: string, error?: Error) {\n    this.log(source, message, \"warn\", error);\n  }\n  // #endregion\n}\n"]}