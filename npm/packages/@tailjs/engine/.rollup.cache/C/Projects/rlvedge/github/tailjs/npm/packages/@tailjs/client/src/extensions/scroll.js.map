{"version":3,"file":"scroll.js","sourceRoot":"","sources":["scroll.ts"],"names":[],"mappings":"AAAA,OAAO,EAAe,IAAI,EAAE,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,sBAAsB,EAAgC,MAAM,IAAI,CAAC;AAC1E,OAAO,EACL,CAAC,EACD,KAAK,EACL,MAAM,EACN,GAAG,EACH,IAAI,EACJ,iBAAiB,EACjB,SAAS,EACT,MAAM,GACP,MAAM,QAAQ,CAAC;AAEhB,MAAM,CAAC,MAAM,MAAM,GAA4B;IAC7C,EAAE,EAAE,QAAQ;IACZ,KAAK,CAAC,OAAO;QACX,IAAI,OAAO,GACT,EAAE,CAAC;QACL,IAAI,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAEjC,sBAAsB,CAAC,GAAG,EAAE,CAC1B,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC,EAAE,CAAC,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CACnE,CAAC;QAEF,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE;YAC5B,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;YAC3B,MAAM,MAAM,GAAG,iBAAiB,EAAE,CAAC;YAEnC,IAAI,MAAM,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC;gBAChC,MAAM,KAAK,GAA6B,EAAE,CAAC;gBAE3C,CAAC,OAAO,CAAC,MAAM,CAAC;oBACd,MAAM,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,GAAG,GAAG;oBACjC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAE9C,CAAC,OAAO,CAAC,aAAa,CAAC;oBACrB,MAAM,CAAC,CAAC,IAAI,GAAG;oBACf,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBAE5D,CAAC,OAAO,CAAC,UAAU,CAAC;oBAClB,MAAM,CAAC,CAAC,IAAI,IAAI;oBAChB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBAEtD,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,EAAE,CACvC,IAAI,CAAc;oBAChB,IAAI,EAAE,QAAQ;oBACd,UAAU;oBACV,MAAM;iBACP,CAAC,CACH,CAAC;gBAEF,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YACzC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF,CAAC","sourcesContent":["import { ScrollEvent, cast } from \"@tailjs/types\";\nimport { addViewChangedListener, type TrackerExtensionFactory } from \"..\";\nimport {\n  T,\n  defer,\n  listen,\n  map,\n  push,\n  relativeScrollPos,\n  scrollPos,\n  window,\n} from \"../lib\";\n\nexport const scroll: TrackerExtensionFactory = {\n  id: \"scroll\",\n  setup(tracker) {\n    let emitted: Partial<Record<Required<ScrollEvent>[\"scrollType\"], boolean>> =\n      {};\n    let initialScroll = scrollPos(T);\n\n    addViewChangedListener(() =>\n      defer(() => ((emitted = {}), (initialScroll = scrollPos(T))), 250)\n    );\n\n    listen(window, \"scroll\", () => {\n      const scroll = scrollPos();\n      const offset = relativeScrollPos();\n\n      if (scroll.y >= initialScroll.y) {\n        const types: (keyof typeof emitted)[] = [];\n\n        !emitted[\"fold\"] &&\n          scroll.y >= initialScroll.y + 200 &&\n          ((emitted[\"fold\"] = T), types.push(\"fold\"));\n\n        !emitted[\"page-middle\"] &&\n          offset.y >= 0.5 &&\n          ((emitted[\"page-middle\"] = T), types.push(\"page-middle\"));\n\n        !emitted[\"page-end\"] &&\n          offset.y >= 0.99 &&\n          ((emitted[\"page-end\"] = T), types.push(\"page-end\"));\n\n        const mapped = map(types, (scrollType) =>\n          cast<ScrollEvent>({\n            type: \"SCROLL\",\n            scrollType,\n            offset,\n          })\n        );\n\n        mapped.length && push(tracker, mapped);\n      }\n    });\n  },\n};\n"]}