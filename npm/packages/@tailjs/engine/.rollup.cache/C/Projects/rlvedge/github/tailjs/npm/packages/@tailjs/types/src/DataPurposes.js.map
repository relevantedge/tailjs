{"version":3,"file":"DataPurposes.js","sourceRoot":"","sources":["DataPurposes.ts"],"names":[],"mappings":"AAAA,OAAO,EAGL,kBAAkB,GACnB,MAAM,cAAc,CAAC;AAiEtB,MAAM,QAAQ,GAAG;IACf;;OAEG;IACH,SAAS,gCAAwB;IACjC,aAAa,oCAA4B;IACzC,WAAW,kCAA0B;IACrC,SAAS,gCAAwB;IACjC,QAAQ,gCAAuB;IAC/B,cAAc,sCAA6B;CACnC,CAAC;AAEX,MAAM,CAAC,MAAM,YAAY,GAAG,kBAAkB,CAAC,QAAQ,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC;AAC/E,MAAM,CAAC,MAAM,WAAW,GAAG,kBAAkB,CAAC,QAAQ,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC","sourcesContent":["import {\r\n  ParsableEnumValue,\r\n  PrettifyIntersection,\r\n  createEnumAccessor,\r\n} from \"@tailjs/util\";\r\n\r\nexport const enum DataPurposes {\r\n  /**\r\n   * Data stored for this purpose is vital for the system, website or app to function.\r\n   */\r\n  Necessary = 1 << 0,\r\n\r\n  /**\r\n   * Data stored for this purpose is used for personalization or otherwise adjust the appearance of a website or app\r\n   * according to a user's preferences.\r\n   *\r\n   * DO NOT use this category if the data may be shared with third parties or otherwise used for targeted marketing outside the scope\r\n   * of the website or app. Use {@link DataPurposes.Targeting} instead.\r\n   *\r\n   * It may be okay if the data is only used for different website and apps that relate to the same product or service.\r\n   * This would be the case if a user is able to use an app and website interchangably for the same service. Different areas of a brand may\r\n   * also be distributed across multiple domain names.\r\n   *\r\n   */\r\n  Functionality = 1 << 1,\r\n\r\n  /**\r\n   * Data stored for this purpose is used to gain insights on how users interact with a website or app optionally including\r\n   * demographics and similar traits with the purpose of optimizing the website or app.\r\n   *\r\n   * DO NOT use this category if the data may be shared with third parties or otherwise used for targeted marketing outside the scope\r\n   * of the website or app. Use {@link DataPurposes.Targeting} instead.\r\n   *\r\n   * It may be okay if the data is only used for different website and apps that relate to the same product or service.\r\n   * This would be the case if a user is able to use an app and website interchangably for the same service. Different areas of a brand may\r\n   * also be distributed across multiple domain names.\r\n   *\r\n   */\r\n  Performance = 1 << 2,\r\n\r\n  /**\r\n   * Data stored for this purpose may be similar to both functionality and performance data, however it may be shared with third parties\r\n   * or otherwise used to perform marketing outside the scope of the specific website or app.\r\n   *\r\n   * If the data is only used for different website and apps that relate to the same product or service, it might not be necessary\r\n   * to use this category.\r\n   * This would be the case if a user is able to use an app and website interchangably for the same service. Different areas of a brand may\r\n   * also be distributed across multiple domain names.\r\n   */\r\n  Targeting = 1 << 3,\r\n\r\n  /**\r\n   * Data stored for this purpose is used for security purposes. As examples, this can both be data related to securing an authenticated user's session,\r\n   * or for a website to guard itself against various kinds of attacks.\r\n   */\r\n  Security = 1 << 4,\r\n\r\n  /**\r\n   * Data stored for this purpose may be similar to the performance category, however it is specifically\r\n   * only used for things such as health monitoring, system performance and error logging and unrelated to user behavior.\r\n   */\r\n  Infrastructure = 1 << 5,\r\n\r\n  /**\r\n   * Any purpose.\r\n   */\r\n  Any = ~0,\r\n}\r\n\r\nconst purposes = {\r\n  /**\r\n   * {@link DataPurposes.Necessary}\r\n   */\r\n  necessary: DataPurposes.Necessary,\r\n  functionality: DataPurposes.Functionality,\r\n  performance: DataPurposes.Performance,\r\n  targeting: DataPurposes.Targeting,\r\n  security: DataPurposes.Security,\r\n  infrastructure: DataPurposes.Infrastructure,\r\n} as const;\r\n\r\nexport const dataPurposes = createEnumAccessor(purposes, true, \"data purpose\");\r\nexport const dataPurpose = createEnumAccessor(purposes, false, \"data purpose\");\r\n\r\nexport type DataPurposeValue<Numeric extends boolean | undefined = boolean> =\r\n  ParsableEnumValue<\r\n    typeof purposes,\r\n    Numeric,\r\n    true,\r\n    DataPurposes\r\n  > extends infer T\r\n    ? T\r\n    : never;\r\n\r\nexport type SingleDataPurposeValue<\r\n  Numeric extends boolean | undefined = boolean\r\n> = ParsableEnumValue<typeof purposes, Numeric, false> extends infer T\r\n  ? T\r\n  : never;\r\n"]}