{"version":3,"file":"iterators.js","sourceRoot":"","sources":["iterators.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  add,\n  ConstToNormal,\n  GeneralizeContstants,\n  get,\n  hasMethod,\n  IsAny,\n  isArray,\n  isDefined,\n  isFalsish,\n  isFunction,\n  isObject,\n  isSet,\n  isTruish,\n  IterableOrArrayLike,\n  KeyValuePairsToObject,\n  MAX_SAFE_INTEGER,\n  Minus,\n  NotFunction,\n  RecordType,\n  symbolIterator,\n  toArray,\n  undefined,\n} from \".\";\n\nexport const UTF16MAX = 0xffff;\n\nlet stopInvoked = false;\nexport const stop = (yieldValue?: any) => ((stopInvoked = true), yieldValue);\n\nexport const toCharCodes = (s: string) =>\n  [...new Array(s.length)].map((_, i) => s.charCodeAt(i));\nexport const codePoint = (string: string, index: number = 0) =>\n  string.codePointAt(index)!;\n\nexport type IteratorSource =\n  | any\n  | null\n  | undefined\n  | number\n  | Iterable<any>\n  | NotFunction\n  | NavigatingIteratorStep;\n\nexport type IteratorSourceOf<T> =\n  | (T extends number ? number : never)\n  | Iterable<T>\n  | (T extends readonly [infer K, infer V]\n      ? K extends keyof any\n        ? { [P in K]: V }\n        : never\n      : never)\n  | NavigatingIteratorStep<T>;\n\ntype IteratorItem<S extends IteratorSource> = IsAny<S> extends true\n  ? any\n  : S extends number\n  ? number\n  : S extends RecordType\n  ? [keyof S, S[keyof S]]\n  : S extends (...args: any) => infer T | undefined\n  ? T\n  : S extends Iterable<infer T>\n  ? T\n  : never;\n\nexport type IteratorItems<S extends IteratorSource[]> = S extends readonly [\n  infer S\n]\n  ? IteratorItem<S>\n  : S extends readonly [infer S, ...infer Rest]\n  ? IteratorItem<S> | IteratorItems<Rest>\n  : S extends (infer S)[]\n  ? IteratorItem<S>\n  : never;\n\nexport interface IteratorControl<S extends IteratorSource> {\n  source: S;\n  prev: IteratorItem<S> | undefined;\n  skip(): void;\n  end(): void;\n  end<P>(value: P): P;\n}\n\nexport type IteratorAction<\n  S extends IteratorSource = IteratorSource,\n  Projection = IteratorItem<S>,\n  Value = IteratorItem<S>\n> = (\n  value: Value,\n  index: number\n) => Projection | typeof stop | undefined | void;\n\ntype IteratorProjection<\n  S extends IteratorSource,\n  Projection\n> = unknown extends Projection ? IteratorItem<S> : ConstToNormal<Projection>;\n\ntype StartEndArgs<S extends IteratorSource> =\n  | []\n  | (S extends number\n      ? [offset?: number]\n      : S extends NavigatingIteratorStep<infer T>\n      ? [offset?: T, maxIterations?: number]\n      : [start?: number, end?: number]);\n\nexport type NavigatingIteratorStep<T = any> = (\n  current: T | undefined\n) => T | undefined;\n\ntype FlatIteratorItem<T, D extends number = 1, O = false> = T extends\n  | undefined\n  | void\n  ? never\n  : D extends 0\n  ? T\n  : T extends Iterable<any> | (O extends true ? Record<keyof any, any> : never)\n  ? D extends 1\n    ? IteratorItem<T>\n    : FlatIteratorItem<IteratorItem<T>, Minus<D, 1>, O>\n  : T;\n\ntype UndefinedIfUndefined<S, T> = S extends null | void | undefined\n  ? undefined\n  : T;\n\ntype ProjectedItem<P> = Exclude<P, undefined | void | typeof stop>;\n\nfunction* createFilteringIterator<\n  S extends IteratorSource,\n  P = IteratorItem<S>\n>(source: S, action?: IteratorAction<S, P>): Iterable<ProjectedItem<P>> {\n  if (!source) return;\n\n  let i = 0;\n  for (let item of source as any) {\n    action && (item = action(item, i++));\n    if (item !== undefined) {\n      yield item;\n    }\n    if (stopInvoked) {\n      stopInvoked = false;\n      break;\n    }\n  }\n}\n\nfunction* createObjectIterator<\n  S extends Record<keyof any, any>,\n  P = IteratorItem<S>\n>(source: S, action?: IteratorAction<S, P>): Iterable<P> {\n  let i = 0;\n  for (const key in source) {\n    let value = [key, source[key]] as any;\n    action && (value = action(value, i++));\n\n    if (value !== undefined) {\n      yield value;\n    }\n    if (stopInvoked) {\n      stopInvoked = false;\n      break;\n    }\n  }\n}\n\nfunction* createRangeIterator(length = 0, offset = 0): Iterable<number> {\n  while (length--) yield offset++;\n}\n\nexport function* createStringIterator(\n  input: string,\n  start: number,\n  end: number\n): Iterable<[char: string, codePoint: number]> {\n  while (start < end) {\n    const codePoint = input.codePointAt(start)!;\n    let p = input[start++];\n    if (codePoint > UTF16MAX) {\n      start++;\n      p = String.fromCodePoint(codePoint);\n    }\n    yield [p, codePoint];\n  }\n}\n\nexport function* createNavigatingIterator<T>(\n  step: NavigatingIteratorStep<T>,\n  start?: T | undefined,\n  maxIterations = Number.MAX_SAFE_INTEGER\n): Iterator<T> {\n  if (isDefined(start)) yield start;\n  while (maxIterations-- && isDefined((start = step(start)))) {\n    yield start;\n  }\n}\n\nconst sliceAction = <\n  S extends IteratorSource,\n  A extends IteratorAction<S, any> | undefined\n>(\n  action: A,\n  start: any,\n  end: any\n): A =>\n  (start ?? end) !== undefined\n    ? ((start ??= 0),\n      (end ??= MAX_SAFE_INTEGER),\n      (value, index) =>\n        start--\n          ? undefined\n          : end!--\n          ? action\n            ? action(value, index)\n            : value\n          : end)\n    : (action as any);\n\nexport type Filter<S extends IteratorSource> = (\n  value: IteratorItem<S>,\n  index: number\n) => any;\n\nconst createIterator = <S extends IteratorSource, P = IteratorItem<S>>(\n  source: S,\n  action?: IteratorAction<S, P>,\n  start?: any,\n  end?: any\n): Iterable<P> =>\n  source == null\n    ? ([] as any)\n    : source[symbolIterator]\n    ? createFilteringIterator(\n        source,\n        start === undefined ? action : sliceAction(action, start as any, end)\n      )\n    : typeof source === \"object\"\n    ? createObjectIterator(\n        source as any,\n        sliceAction(action, start as any, end)\n      )\n    : createIterator(\n        isFunction(source)\n          ? createNavigatingIterator(source, start, end)\n          : (createRangeIterator(source as number, start as any) as any),\n        action\n      );\n\nconst mapToArray = <T, M>(\n  projected: Iterable<T>,\n  map: M\n): true extends M ? T[] : Iterable<T> =>\n  map && !isArray(projected) ? [...projected] : (projected as any);\n\ntype ProjectFunction = {\n  <S extends IteratorSource, R>(\n    source: S,\n    projection?: IteratorAction<S, R> | null,\n    ...rest: StartEndArgs<S>\n  ): Iterable<IteratorProjection<S, R>>;\n  <S extends IteratorSource>(source: S, ...rest: StartEndArgs<S>): Iterable<\n    IteratorItem<S>\n  >;\n};\n\ntype MapFunction = {\n  <S extends IteratorSource, R>(\n    source: S,\n    projection?: IteratorAction<S, R> | null,\n    ...rest: StartEndArgs<S>\n  ): S extends undefined ? undefined : IteratorProjection<S, R>[];\n  <S extends IteratorSource>(\n    source: S,\n    ...rest: StartEndArgs<S>\n  ): S extends undefined ? undefined : IteratorItem<S>[];\n};\n\ntype FlatProjectFunction = <\n  S extends IteratorSource,\n  D extends number = 1,\n  R = IteratorItem<S>,\n  O extends boolean = false\n>(\n  source: S,\n  projection?: FlatIteratorAction<S, R, D, O>,\n  depth?: D,\n  expandObjects?: O,\n  ...rest: StartEndArgs<S>\n) => FlatIteratorItem<Iterable<R>, D>;\n\nexport const project: ProjectFunction = ((\n  source: any,\n  projection: any,\n  start: any,\n  end: any\n) =>\n  projection != null && !isFunction(projection)\n    ? // The second argument is the value of `start`.\n      createIterator(source, undefined, projection, start)\n    : createIterator(source, projection, start, end)) as any;\n\nexport const flatProject: FlatProjectFunction = function (\n  source,\n  projection?,\n  depth = 1 as any,\n  expandObjects: any = false,\n  start?: any,\n  end?: any\n) {\n  return createIterator(\n    flatten(\n      createIterator(source, undefined, start, end),\n      depth + 1,\n      expandObjects,\n      false\n    ),\n    projection\n  ) as any;\n\n  function* flatten(\n    value: any,\n    depth: number,\n    expandObjects: boolean,\n    nested: boolean\n  ) {\n    if (value != null) {\n      if (\n        value?.[symbolIterator] ||\n        (expandObjects && value && typeof value === \"object\")\n      ) {\n        for (const item of nested ? createIterator(value) : value) {\n          if (depth > 1 || depth <= 0) {\n            yield* flatten(item, depth - 1, expandObjects, true);\n          } else {\n            yield item;\n          }\n        }\n      } else {\n        yield value;\n      }\n    }\n  }\n};\n\nexport const map: MapFunction = (\n  source: any,\n  projection?: any,\n  start: any = undefined,\n  end?: any\n) => {\n  if (start === undefined && isArray(source)) {\n    let i = 0;\n    const mapped: any[] = [];\n    for (let j = 0, n = source.length; j < n && !stopInvoked; j++) {\n      let value = source[j];\n      if (projection && value !== undefined) {\n        value = projection(value, i++);\n      }\n      if (value !== undefined) {\n        mapped.push(value);\n      }\n    }\n    stopInvoked = false;\n    return mapped;\n  }\n  return source !== undefined\n    ? toArray(project(source, projection, start, end))\n    : undefined;\n};\n\nexport const zip = <Lhs extends IteratorSource, Rhs extends IteratorSource>(\n  lhs: Lhs,\n  rhs: Rhs\n): Iterable<[IteratorItem<Lhs>, IteratorItem<Rhs> | undefined]> => {\n  const it2 = createIterator(rhs)[Symbol.iterator]();\n  return createIterator(lhs, (lhs) => [lhs, it2.next()?.value] as [any, any]);\n};\n\nexport const distinct: {\n  <S extends IteratorSource, R>(\n    source: S,\n    projection?: IteratorAction<S, R> | null,\n    ...rest: StartEndArgs<S>\n  ): S extends undefined ? undefined : Set<IteratorProjection<S, R>>;\n  <S extends IteratorSource>(\n    source: S,\n    ...rest: StartEndArgs<S>\n  ): S extends undefined ? undefined : Set<IteratorItem<S>>;\n} = (source: any, projection?: any, start?: any, end?: any) =>\n  isDefined(source)\n    ? new Set<any>([...project(source, projection, start, end)])\n    : undefined;\n\nexport const single: {\n  <S extends IteratorSource, R>(\n    source: S,\n    projection?: IteratorAction<S, R> | null,\n    ...rest: StartEndArgs<S>\n  ): S extends undefined ? undefined : IteratorProjection<S, R> | undefined;\n  <S extends IteratorSource>(\n    source: S,\n    ...rest: StartEndArgs<S>\n  ): S extends undefined ? undefined : IteratorItem<S> | undefined;\n} = (source: any, projection?: any, start?: any, end?: any) =>\n  !source\n    ? undefined\n    : (source = mapDistinct(source, projection, start, end) as any).length > 1\n    ? undefined\n    : source[0];\n\nexport const mapDistinct: MapFunction = (\n  source: any,\n  projection?: any,\n  start?: any,\n  end?: any\n) =>\n  isDefined(source)\n    ? [...(distinct as any)(source, projection, start, end)]\n    : source;\n\nexport function* concatIterators<S extends IteratorSource[]>(\n  ...iterators: S\n): Iterable<IteratorItems<S>> {\n  for (const iterator of iterators) {\n    if (!iterator) continue;\n    yield* createIterator(iterator);\n  }\n}\n\ntype AllCanBeUndefined<T extends any[]> = T extends readonly [infer S]\n  ? undefined extends S\n    ? true\n    : false\n  : T extends readonly [infer S, ...infer Rest]\n  ? AllCanBeUndefined<Rest> extends false\n    ? false\n    : undefined extends S\n    ? true\n    : false\n  : true;\n\nexport const concat = <S extends (IterableOrArrayLike<any> | undefined)[]>(\n  ...iterators: S\n):\n  | (AllCanBeUndefined<S> extends true ? undefined : never)\n  | IteratorItems<S>[] =>\n  iterators.reduce(\n    (r: undefined | any[], it) => (it ? (r ?? []).concat(toArray(it)) : r),\n    undefined\n  ) as any;\n\nexport const intersection = <\n  T,\n  A extends Iterable<T> | undefined,\n  B extends Iterable<T> | undefined,\n  MapToArray extends boolean = A extends any[]\n    ? true\n    : B extends any[]\n    ? true\n    : false\n>(\n  a: A,\n  b: B,\n  mapToArray?: MapToArray\n): MapToArray extends true ? T[] : Iterable<T> => {\n  if (!a || !b) return [];\n  isSet(b) && ([b, a] = [a, b] as any);\n  const lookup = isSet(a) ? a : new Set(a);\n  return filter(b, (value) => lookup.has(value), mapToArray) as any;\n};\n\nexport const intersects = (\n  a: Iterable<any> | undefined,\n  b: Iterable<any> | undefined\n) => !!count(intersection(a, b));\n\ntype FlatIteratorAction<\n  S extends IteratorSource,\n  R = FlatIteratorItem<S>,\n  D extends number = 1,\n  O = false\n> = IteratorAction<S, R, FlatIteratorItem<S, D, O>>;\n\nexport const flatMap = <\n  S extends IteratorSource,\n  D extends number = 1,\n  O extends boolean = false,\n  R = IteratorItem<S>\n>(\n  source: S,\n  action: FlatIteratorAction<S, R, D, O> = (item) => item as any,\n  depth: D = 1 as any,\n  expandObjects: O = false as any,\n  ...rest: StartEndArgs<S>\n): FlatIteratorItem<R, D>[] =>\n  map(flatProject(source, action, depth, expandObjects, ...rest)) as any;\n\nconst traverseInternal = <T>(\n  root: T | T[] | undefined,\n  selector: (current: T) => Iterable<T> | undefined,\n  include: boolean,\n  results: T[],\n  seen: Set<T>\n) => {\n  if (isArray(root)) {\n    forEachInternal(root, (item) =>\n      traverseInternal(item, selector, include, results, seen)\n    );\n    return results;\n  }\n  if (!root || !add(seen, root)) {\n    return undefined;\n  }\n  include && results.push(root);\n  forEachInternal(selector(root), (item) =>\n    traverseInternal(item, selector, true, results, seen)\n  );\n\n  return results;\n};\n\ntype JoinResult<T> = T extends readonly []\n  ? never\n  : T extends readonly [infer Item, ...infer Rest]\n  ?\n      | Exclude<Item extends Iterable<infer T> ? T : Item, undefined>\n      | JoinResult<Rest>\n  : never;\n\nexport const join = <T extends readonly any[]>(...items: T): JoinResult<T>[] =>\n  items.flatMap((item) => toArray(item) ?? []).filter(isDefined) as any;\n\nexport const expand = <T>(\n  root: T | T[],\n  selector: (\n    current: Exclude<T, undefined>\n  ) => Iterable<T | undefined> | undefined,\n  includeSelf = true\n): T extends undefined ? undefined : Exclude<T, undefined>[] =>\n  traverseInternal(root, selector, includeSelf, [], new Set()) as any;\n\nconst forEachArray = (source: readonly any[], action: any) => {\n  let returnValue: any;\n  let i = 0;\n  for (let j = 0, n = source.length; j < n; j++) {\n    if (\n      source[j] !== undefined &&\n      ((returnValue = action(source[j], i++) ?? returnValue), stopInvoked)\n    ) {\n      stopInvoked = false;\n      break;\n    }\n  }\n  return returnValue;\n};\n\nconst forEachItereable = (source: Iterable<any>, action: any) => {\n  let returnValue: any;\n  let i = 0;\n  for (let value of source as any) {\n    if (\n      value !== undefined &&\n      ((returnValue = action(value, i++) ?? returnValue), stopInvoked)\n    ) {\n      stopInvoked = false;\n      break;\n    }\n  }\n  return returnValue;\n};\n\nconst forEachObject = (source: any, action: any) => {\n  let returnValue: any;\n  let i = 0;\n  for (let key in source) {\n    if (\n      ((returnValue = action([key, source[key]], i++) ?? returnValue),\n      stopInvoked)\n    ) {\n      stopInvoked = false;\n      break;\n    }\n  }\n  return returnValue;\n};\n\nconst forEachInternal: <S extends IteratorSource, R>(\n  source: S,\n  action: IteratorAction<S, R>,\n  start?: any,\n  end?: any\n) => R | undefined = (source, action, start = undefined, end?: any) => {\n  if (source == null) return;\n\n  let returnValue: any;\n  if (start === undefined) {\n    if (isArray(source)) return forEachArray(source, action);\n    if (source[symbolIterator]) return forEachItereable(source as any, action);\n    if (typeof source === \"object\") return forEachObject(source, action);\n  }\n\n  for (const value of createIterator(source, action, start, end)) {\n    returnValue = (value as any) ?? returnValue;\n  }\n\n  return returnValue;\n};\n\nexport const forEach = forEachInternal as <S extends IteratorSource, R>(\n  source: S,\n  action: IteratorAction<S, R>,\n  ...rest: StartEndArgs<S>\n) => R | undefined;\n\nexport const flatForEach = <\n  S extends IteratorSource,\n  R,\n  Depth extends number,\n  O extends boolean = false\n>(\n  source: S,\n  action: FlatIteratorAction<S, R, Depth, O>,\n  depth: Depth = 1 as any,\n  expandObjects: O = false as any,\n  ...rest: StartEndArgs<S>\n): R | undefined =>\n  forEachInternal(\n    flatProject(source, undefined, depth, expandObjects, ...(rest as any)),\n    action as any\n  ) as any;\n\nexport const obj: {\n  <S extends IteratorSource, P extends readonly [keyof any, any]>(\n    source: S,\n    selector: IteratorAction<S, P>,\n    ...rest: StartEndArgs<S>\n  ): KeyValuePairsToObject<P[]>;\n  <S extends IteratorSourceOf<readonly [keyof any, any]>>(\n    source: S,\n    ...rest: StartEndArgs<S>\n  ): KeyValuePairsToObject<S>;\n} = ((source: any, selector: any, ...rest: any[]) =>\n  Object.fromEntries((map as any)(source, selector, ...rest))) as any;\n\nexport const groupReduce: <\n  S extends IteratorSource,\n  Key,\n  Accumulator = unknown\n>(\n  source: S,\n  keySelector: (item: IteratorItem<S>, index: number) => Key,\n  reducer: (\n    accumulator: GeneralizeContstants<Accumulator>,\n    ...rest: Parameters<IteratorAction<S, Accumulator>>\n  ) => Accumulator,\n  seed?: Accumulator | (() => Accumulator),\n  ...reset: StartEndArgs<S>\n) => Map<Key, Accumulator> = (\n  source,\n  keySelector,\n  reducer,\n  seed,\n  start?: any,\n  end?: any\n) => {\n  const groups = new Map<any, any>();\n  const seedFactory = () => (isFunction(seed) ? seed() : seed);\n  const action: IteratorAction<any, any> = (item, index) => {\n    const key = keySelector(item, index);\n    let acc = groups.get(key) ?? seedFactory();\n    const value = reducer(acc, item, index);\n    if (isDefined(value)) {\n      groups.set(key, value);\n    }\n  };\n  forEachInternal(source, action, start, end);\n  return groups as any;\n};\n\nexport const group: <S extends IteratorSource, Key, R = IteratorItem<S>>(\n  source: S,\n  keySelector: (item: IteratorItem<S>, index: number) => Key,\n  valueSelector?: (item: IteratorItem<S>, index: number) => R,\n  ...rest: StartEndArgs<S>\n) => S extends undefined ? undefined : Map<Key, R[]> = (\n  source,\n  keySelector,\n  valueSelector = (item: any) => item,\n  start?: any,\n  end?: any\n) => {\n  if (source == null) return undefined as any;\n  const groups = new Map<any, any[]>();\n  (forEachInternal as any)(\n    source,\n    (item: any, index: number) => {\n      const key = keySelector(item, index);\n      const value = valueSelector(item, index);\n      get(groups, key as any, () => []).push(value);\n    },\n    start,\n    end\n  );\n  return groups as any;\n};\n\nexport const reduce: <\n  S extends IteratorSource,\n  Reducer extends (\n    ...args: [\n      accumulator: unknown extends Accumulator\n        ? any\n        : GeneralizeContstants<Accumulator>,\n      ...rest: Parameters<IteratorAction<S, Accumulator>>\n    ]\n  ) => GeneralizeContstants<Accumulator>,\n  Accumulator\n>(\n  source: S,\n  reducer: Reducer,\n  seed?: Accumulator | (() => Accumulator),\n  ...rest: StartEndArgs<S>\n) => Reducer extends (...args: any) => infer R\n  ? R | (unknown extends Accumulator ? undefined : never)\n  : never = (source, reducer, seed, start?: any, end?: any) => {\n  const seedFactory = () => (isFunction(seed) ? seed() : seed);\n  return (\n    forEachInternal(\n      source,\n      (value, index) =>\n        (seed =\n          ((reducer as any)(seed as any, value, index) as any) ??\n          seedFactory()),\n      start,\n      end\n    ) ?? (seedFactory() as any)\n  );\n};\n\ntype FilterItem<S extends IteratorSource, F> = F extends (\n  value: any,\n  ...args: any\n) => value is infer T\n  ? T\n  : IteratorItem<S>;\n\nexport const filter: {\n  <\n    S extends IteratorSource,\n    MapToArray extends boolean = S extends any[] ? true : false,\n    P extends Filter<S> = Filter<S>\n  >(\n    source: S,\n    predicate?: P,\n    map?: MapToArray,\n    ...rest: StartEndArgs<S>\n  ): MapToArray extends true\n    ? UndefinedIfUndefined<S, FilterItem<S, P>[]>\n    : Iterable<FilterItem<S, P>>;\n} = (\n  source: IteratorSource,\n  predicate: Filter<any> = (item: any) => item != null,\n  map = isArray(source) as any,\n  start?: any,\n  end?: any\n) =>\n  mapToArray(\n    createIterator(\n      source,\n      (item, index) => (predicate(item, index) ? item : undefined),\n      start,\n      end\n    ),\n    map\n  ) as any;\n\nlet filterInternal = filter;\n\nexport const count: <S>(\n  source: S,\n  predicate?: Filter<S>,\n  ...rest: StartEndArgs<S>\n) => UndefinedIfUndefined<S, number> = (\n  source: IteratorSource,\n  filter?: Filter<IteratorSource>,\n  start?: any,\n  end?: any\n) => {\n  if (!source) return undefined as any;\n\n  let n: number;\n  if (filter) {\n    source = filterInternal(source, filter, false, start, end) as any;\n  } else {\n    if (isDefined((n = source![\"length\"] ?? source![\"size\"]))) {\n      return n;\n    }\n    if (!source[symbolIterator]) {\n      return Object.keys(source).length;\n    }\n  }\n  n = 0;\n  return forEachInternal(source, () => ++n) as any;\n};\n\nexport const sum: {\n  <S extends IteratorSourceOf<number>>(\n    source: S,\n    selector?: IteratorAction<S, number>,\n    ...rest: StartEndArgs<S>\n  ): number;\n  <S extends IteratorSource>(\n    source: S,\n    selector: IteratorAction<S, number>,\n    ...rest: StartEndArgs<S>\n  ): number;\n} = (\n  source: any,\n  selector: any = (item: any) => item,\n  start?: any,\n  end?: any\n) =>\n  reduce(\n    source,\n    (sum, value, index) => sum + (selector(value, index) ?? 0),\n    0,\n    start,\n    end\n  );\n\nexport const values: <S extends IteratorSource>(\n  source: S,\n  ...rest: StartEndArgs<S>\n) => UndefinedIfUndefined<\n  S,\n  IteratorItem<S> extends readonly [any, infer Item] ? Item : IteratorItem<S>\n> = (source, start?: any, end?: any) =>\n  (map as any)(\n    source,\n    isObject(source) ? (item: any) => item[1] : (item: any) => item,\n    start,\n    end\n  );\n\nexport const keys: <S extends IteratorSource>(\n  source: S,\n  ...rest: StartEndArgs<S>\n) => UndefinedIfUndefined<\n  S,\n  IteratorItem<S> extends readonly [infer Key, any] ? Key : number\n> = (source, start?: any, end?: any) =>\n  (map as any)(\n    source,\n    isObject(source) ? (item: any) => item[0] : (_item: any, i: number) => i,\n    start,\n    end\n  );\n\nexport const first: <S extends IteratorSource>(\n  source: S,\n  predicate?: Filter<S>,\n  ...rest: StartEndArgs<S>\n) => IteratorItem<S> | undefined = (\n  source,\n  predicate?: Filter<any>,\n  start?: any,\n  end?: any\n) =>\n  !source || isArray(source)\n    ? source?.[0]\n    : forEachInternal(\n        source,\n        (value, i) =>\n          !predicate || predicate(value, i) ? stop(value) : undefined,\n        start,\n        end\n      );\n\nexport const last: <S extends IteratorSource>(\n  source: S,\n  predicate?: Filter<S>,\n  ...rest: StartEndArgs<S>\n) => IteratorItem<S> | undefined = (\n  source,\n  predicate?: any,\n  start?: any,\n  end?: any\n) =>\n  !source\n    ? undefined\n    : isArray(source)\n    ? source[source.length - 1]\n    : forEachInternal(\n        source,\n        (item, i) => (!predicate || predicate(item, i) ? item : undefined),\n        start,\n        end\n      );\n\nexport const find = <S extends IteratorSource>(\n  source: S,\n  predicate: Filter<S>,\n  ...rest: StartEndArgs<S>\n): UndefinedIfUndefined<S, IteratorItem<S>> =>\n  !source\n    ? undefined\n    : (source as any).find\n    ? (source as any).find(predicate)\n    : first(filterInternal(source as any, predicate, false, ...rest));\n\nexport const some: <S extends IteratorSource>(\n  source: S,\n  predicate?: Filter<S>,\n  ...rest: StartEndArgs<S>\n) => UndefinedIfUndefined<S, boolean> = (\n  source,\n  predicate,\n  start?: any,\n  rangeEnd?: any\n) =>\n  source === undefined\n    ? undefined\n    : hasMethod(source, \"some\")\n    ? source.some(predicate ?? isTruish)\n    : forEachInternal<any, boolean>(\n        source,\n        predicate\n          ? (item, index) => (predicate(item, index) ? stop(true) : false)\n          : () => stop(true),\n        start,\n        rangeEnd\n      ) ?? false;\n\nexport const every = <S extends IteratorSource>(\n  source: S,\n  predicate?: Filter<S>,\n  ...rest: StartEndArgs<S>\n): UndefinedIfUndefined<S, boolean> =>\n  !source\n    ? undefined\n    : (!some(\n        source,\n        predicate ? (item, index) => !predicate(item, index) : isFalsish,\n        ...rest\n      ) as any);\n\nexport const binarySearch: {\n  (arr: Array<number>, find: number): number;\n  <T = number>(arr: Array<T>, find: T, compare: (x: T, y: T) => number): number;\n} = <T = number>(\n  arr: Array<T>,\n  find: T,\n  compare: (x: T, y: T) => number = ((x: any, y: any) => x - y) as any\n) => {\n  let m = 0;\n  let n = arr.length - 1;\n  let cmp: number;\n  let k: number;\n  while (m <= n) {\n    k = (n + m) >> 1;\n    cmp = compare(find, arr[k]);\n    if (cmp > 0) {\n      m = k + 1;\n    } else if (cmp < 0) {\n      n = k - 1;\n    } else {\n      return k;\n    }\n  }\n  return ~m;\n};\n"]}