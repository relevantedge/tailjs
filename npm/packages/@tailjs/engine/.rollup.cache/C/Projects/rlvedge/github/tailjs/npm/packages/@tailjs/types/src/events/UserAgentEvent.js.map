{"version":3,"file":"UserAgentEvent.js","sourceRoot":"","sources":["UserAgentEvent.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AA4F7C,MAAM,CAAC,MAAM,gBAAgB,GAAG,QAAQ,CAAiB,YAAY,CAAC,CAAC","sourcesContent":["import type { Float, Integer, SessionScoped, TrackedEvent } from \"..\";\nimport { typeTest } from \"../util/type-test\";\n\nexport interface UserAgentLanguage {\n  /**\n   * The full language tag as specified by (RFC 5646/BCP 47)[https://datatracker.ietf.org/doc/html/rfc5646]\n   */\n  id: string;\n\n  /**\n   * The language name (ISO 639).\n   */\n  language: string;\n\n  /**\n   * Dialect (ISO 3166 region).\n   */\n  region?: string;\n\n  /**\n   * If it is the users primary preference.\n   */\n  primary: boolean;\n\n  /**\n   * The user's preference of the language (1 is highest).\n   */\n  preference: Integer;\n}\n\nexport interface UserAgentEvent extends TrackedEvent, SessionScoped {\n  type: \"USER_AGENT\";\n\n  /**\n   *  Has touch\n   */\n  hasTouch?: boolean;\n\n  /**\n   * The device type (inferred from screen size).\n   * The assumption is:\n   *   - anything width a logical device pixel width less than 480 is a phone,\n   *   - anything with a logical device pixel width less than or equal to 1024 (iPad Pro12.9\") is a tablet,\n   *   - the rest are desktops.\n   *\n   * Device width is the physical width of the device regardless of its orientation.\n   */\n  deviceType?: \"mobile\" | \"tablet\" | \"desktop\";\n\n  /**\n   * User agent string\n   */\n  userAgent: string;\n\n  /**\n   * The user's language preferences as configured in the user's device.\n   */\n  languages?: UserAgentLanguage[];\n\n  timezone: {\n    iana: string;\n    /**\n     * The offset from GMT in hours.\n     */\n    offset: Float;\n  };\n\n  /**\n   * Screen\n   */\n  screen?: {\n    /**\n     * Device pixel ratio (i.e. how many physical pixels per logical CSS pixel)\n     */\n    dpr: Float;\n\n    /**\n     * Device width.\n     */\n    width: Float;\n\n    /**\n     * Device height.\n     */\n    height: Float;\n\n    /** Whether the device is held in landscape mode.\n     * @default false\n     */\n    landscape?: boolean;\n  };\n}\n\nexport const isUserAgentEvent = typeTest<UserAgentEvent>(\"USER_AGENT\");\n"]}