{"version":3,"file":"UserInteractionEvent.js","sourceRoot":"","sources":["UserInteractionEvent.ts"],"names":[],"mappings":"","sourcesContent":["import type {\n  ActivatedComponent,\n  ScreenPosition,\n  TrackedEvent,\n  ViewTimingEvent,\n  Viewport,\n} from \"..\";\n\nexport interface UserInteractionEvent extends TrackedEvent, ViewTimingEvent {\n  /**\n   * Relevant components and content in the scope of the activated element.\n   */\n  components?: ActivatedComponent[];\n\n  /**\n   * The position where the user clicked / activation occurred relative to the document top as a percentage of the entire document height (not visible viewport if scrolled).\n   */\n  pos?: ScreenPosition;\n\n  /**\n   * The viewport of the user's browser when the event happened.\n   */\n  viewport?: Viewport;\n\n  /**\n   * An optional name of the area of the page (i.e. in the DOM) where the component is rendered. By convention this should the path of nested content areas separated by a slash.\n   */\n  area?: string;\n\n  /** Information about the activated element, if any. */\n  element?: {\n    /** The tag name of the activated element.  */\n    tagName?: string;\n\n    /** The textual content of the element that was clicked (e.g. the label on a button, or the alt text of an image) */\n    text?: string;\n  };\n}\n"]}