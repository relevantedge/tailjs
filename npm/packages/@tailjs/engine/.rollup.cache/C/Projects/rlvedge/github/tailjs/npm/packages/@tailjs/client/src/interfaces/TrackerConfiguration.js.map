{"version":3,"file":"TrackerConfiguration.js","sourceRoot":"","sources":["TrackerConfiguration.ts"],"names":[],"mappings":"","sourcesContent":["import type { ActivationTracking } from \"@tailjs/types\";\nimport type { IterableOrSelf, Nullish } from \"@tailjs/util\";\nimport type { ParsableRegExp } from \"../lib\";\nimport type { Tracker } from \".\";\n\n/**\n * Defines a mapping from HTML element attributes to tags based on their names.\n *\n * Use `selector` to limit the scope.\n * This could be if you have included some external HTML with the interesting attribute `data-uuid` but don't want to bloat events because data-uuid is generally used for something uninteresting.\n * Not that this comes with a performance overhead, if you have many of these.\n *\n * Use `prefix` if you want a different tag prefix than the attribute name.\n *\n * The reason why it is a object with keys, is to organize rules by their purpose. It also allows disabling rules by setting a known rule ID to `false` or `undefined`.\n */\n\nexport type TagMappings = Record<\n  string,\n  IterableOrSelf<\n    | ParsableRegExp\n    | { selector?: string; prefix?: string; match: ParsableRegExp }\n  >\n>;\n\n/**\n * Tracker configuration.\n */\nexport interface TrackerConfiguration {\n  /**\n   * The name of the global variable used for tracking.\n   *\n   * @default tail\n   */\n  name?: string;\n\n  /**\n   * Flag to disable all tracking.\n   */\n  disabled?: boolean;\n\n  /**\n   * The URL to the tracker script\n   */\n  src: string;\n\n  /**\n   * If false events will be triggered but not posted.\n   * This especially makes sense in a staging/preview environment where events can be debugged but does not affect analytics reporting.\n   * @default true\n   */\n  postEvents?: boolean;\n\n  /**\n   * How often queued events should be posted (ms).\n   *\n   * @default 2000\n   */\n  postFrequency?: number;\n\n  /**\n   * How long time to wait before a request is considered timed out (ms).\n   * This influences the global request mutex that prevents multiple requests to happen at the same time.\n   *\n   * @default 5000\n   */\n  requestTimeout?: number;\n\n  /**\n   * The frequency (ms) for \"heart beat\" events to be sent to indicate that the client is active when no other events has been sent.\n   * Can be used to show live activity or estimate missing VIEW_ENDED event if the user's browser crashed.\n   *\n   * Since it adds a considerable amount of extra data this should only be enabled for specific use cases.\n   *\n   * @default 0\n   */\n  heartbeatFrequency?: number;\n\n  /**\n   * The minimum duration (ms) a component needs to be visible before it counts as an impression.\n   *\n   * @default 1000\n   */\n  impressionThreshold?: number;\n\n  /**\n   * The default level for activation tracking.\n   *\n   * @deprecated\n   * @default 'direct`\n   */\n  defaultActivationTracking?: ActivationTracking;\n\n  /**\n   * Whether tabs opened via the right-click context menu should be tracked.\n   * Be aware this will rewrite the links if the user picks \"copy\" from said menu (they will still work though).\n   *\n   * @default true\n   */\n  captureContextMenu?: boolean;\n\n  /**\n   * Log events to the browser's developer console.\n   */\n  debug?: boolean;\n\n  /**\n   * All inter-tab communication will be encrypted using this key.\n   * The same applies to cookies used to communicate with the server.\n   */\n  clientKey: string | Nullish;\n\n  /**\n   * A key that locks down the tracker API from external access.\n   *\n   * When specified, it must be passed as the first argument to {@link Tracker.push}.\n   */\n  apiKey: string | Nullish;\n\n  /**\n   * Defines which `data-*` attributes in the surrounding DOM that gets mapped to tags (in addition to `track-tags`).\n   *\n   * Rules without at least an include or exclude rule are ignored, and\n   * rules with selectors are evaluated first.\n   *\n   * The default is to include data-* attributes where the name ends with \"id\" or \"name\".\n   *\n   * Use an empty array to exclude all data attributes.\n   *\n   */\n  tags?: TagMappings;\n}\n"]}