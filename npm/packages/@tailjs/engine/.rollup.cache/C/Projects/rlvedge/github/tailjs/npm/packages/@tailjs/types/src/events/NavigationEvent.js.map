{"version":3,"file":"NavigationEvent.js","sourceRoot":"","sources":["NavigationEvent.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AA8B7C,MAAM,CAAC,MAAM,iBAAiB,GAAG,QAAQ,CAAkB,YAAY,CAAC,CAAC","sourcesContent":["import { Domain, LocalID, TrackedEvent, UserInteractionEvent } from \"..\";\nimport { typeTest } from \"../util/type-test\";\n\nexport interface NavigationEvent extends UserInteractionEvent {\n  type: \"NAVIGATION\";\n  /**\n   * The ID of the navigation event. This will be added as {@link TrackedEvent.related} to view event that followed after the navigation.\n   */\n  id: LocalID;\n\n  /** The destination URL of the navigation */\n  href: string;\n\n  /** Indicates that the user went away from the site to an external URL. */\n  exit?: boolean;\n\n  /** The anchor specified in the href if any. */\n  anchor?: string;\n\n  /** Indicates that the navigation is to an external domain  */\n  external?: boolean;\n\n  /** The domain of the destination */\n  domain?: Domain;\n\n  /**\n   * Whether the navigation happened in the current view or a new tab/window was opened.\n   */\n  self: boolean;\n}\n\nexport const isNavigationEvent = typeTest<NavigationEvent>(\"NAVIGATION\");\n"]}