{"version":3,"file":"PaymentEvent.js","sourceRoot":"","sources":["PaymentEvent.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AA4C7C,MAAM,CAAC,MAAM,sBAAsB,GACjC,QAAQ,CAAuB,kBAAkB,CAAC,CAAC;AACrD,MAAM,CAAC,MAAM,sBAAsB,GACjC,QAAQ,CAAuB,kBAAkB,CAAC,CAAC","sourcesContent":["import type { CommerceEvent, Decimal, Order } from \"..\";\nimport { typeTest } from \"../util/type-test\";\n\n/**\n * Events related to order payments.\n */\nexport interface PaymentEvent extends CommerceEvent {\n  /**\n   * The reference to order for which payment was made, either {@link Order.orderId} or {@link Order.internalId}.\n   */\n  orderReference: string;\n  /**\n   * The amount paid.\n   */\n  amount: Decimal;\n\n  /**\n   * A domain specific value for the payment method.\n   */\n  paymentMethod?: string;\n\n  /** The currency of the payment. */\n  currency?: string;\n}\n\n/**\n * The payment for an order was accepted.\n */\nexport interface PaymentAcceptedEvent extends PaymentEvent {\n  type: \"PAYMENT_ACCEPTED\";\n\n  /**\n   * The payment was the final payment, hence completed the order.\n   * @default true;\n   */\n  finalPayment?: boolean;\n}\n\n/**\n * A payment for the order was rejected.\n */\nexport interface PaymentRejectedEvent extends PaymentEvent {\n  type: \"PAYMENT_REJECTED\";\n}\n\nexport const isPaymentAcceptedEvent =\n  typeTest<PaymentAcceptedEvent>(\"PAYMENT_ACCEPTED\");\nexport const isPaymentRejectedEvent =\n  typeTest<PaymentRejectedEvent>(\"PAYMENT_REJECTED\");\n"]}