{"version":3,"file":"RequestHandler.js","sourceRoot":"","sources":["RequestHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import clientScripts from \"@tailjs/client/script\";\nimport {\n  dataPurposes,\n  PostRequest,\n  PostResponse,\n  TrackedEvent,\n  VariableScope,\n} from \"@tailjs/types\";\nimport queryString from \"query-string\";\nimport { Lock } from \"semaphore-async-await\";\nimport urlParse from \"url-parse\";\nimport { CommerceExtension } from \"./extensions\";\nimport {\n  any,\n  DefaultCryptoProvider,\n  map,\n  merge,\n  TrackerVariableStorage,\n} from \"./lib\";\n\nimport {\n  CallbackResponse,\n  ClientRequest,\n  ClientResponseCookie,\n  ClientScript,\n  CookieMonster,\n  DEFAULT,\n  DefaultStorageMappings,\n  EventParser,\n  InMemoryStorage,\n  isValidationError,\n  ParseResult,\n  PostError,\n  PrefixMappings,\n  ReadOnlyVariableStorage,\n  RequestHandlerConfiguration,\n  SessionEvents,\n  StorageMappings,\n  Timestamps,\n  TrackedEventBatch,\n  Tracker,\n  TrackerEnvironment,\n  TrackerExtension,\n  TrackerPostOptions,\n  ValidationError,\n  VariableStorageCoordinator,\n} from \"./shared\";\n\nimport { CONTEXT_MENU_COOKIE, MUTEX_REQUEST_COOKIE } from \"@constants\";\nimport { TrackerConfiguration } from \"@tailjs/client\";\nimport { forEach, obj } from \"@tailjs/util\";\nimport { from64u } from \"@tailjs/util/transport\";\nimport {\n  DefaultSessionReferenceMapper,\n  SessionReferenceMapper,\n} from \"./ClientIdGenerator\";\nimport { generateClientConfigScript } from \"./lib/clientConfigScript\";\n\nconst scripts = {\n  main: {\n    text: clientScripts.main.text,\n    gzip: from64u(clientScripts.main.gzip),\n    br: from64u(clientScripts.main.br),\n  },\n  debug: clientScripts.debug,\n};\n\nexport let SCRIPT_CACHE_CONTROL: string = \"private, max-age=604800\"; // A week\n\nexport class RequestHandler {\n  private readonly _allowUnknownEventTypes: boolean;\n  private readonly _cookies: CookieMonster;\n  private readonly _debugScript: boolean | string;\n  private readonly _endpoint: string;\n  private readonly _extensionFactories: (() => Promise<TrackerExtension>)[];\n  private readonly _lock = new Lock();\n  private readonly _parser: EventParser;\n  private readonly _trackerName: string;\n  private readonly _useSession: boolean;\n\n  private _extensions: TrackerExtension[];\n  private _initialized = false;\n  private _script: null | string;\n\n  /** @internal */\n  public readonly _cookieNames: {\n    consent: string;\n    session: string;\n    device: Record<keyof typeof dataPurposes, string> & {\n      all: string;\n    };\n  };\n  public readonly environment: TrackerEnvironment;\n\n  /** @internal */\n  public _sessionTimeout: number;\n\n  private readonly _clientKeySeed: string;\n  private readonly _clientConfig: TrackerConfiguration;\n\n  /** @internal */\n  public readonly _sessionReferenceMapper: SessionReferenceMapper;\n\n  constructor(config: RequestHandlerConfiguration) {\n    let {\n      trackerName,\n      endpoint,\n      host,\n      extensions,\n      parser,\n      crypto,\n      cookies,\n      allowUnknownEventTypes,\n      debugScript,\n      useSession,\n      environmentTags,\n      manageConsents,\n      sessionTimeout,\n      deviceSessionTimeout,\n      clientKeySeed,\n      encryptionKeys,\n      client,\n      storage,\n      sessionReferenceMapper,\n    } = merge({}, DEFAULT, config);\n\n    this._trackerName = trackerName;\n    this._endpoint = !endpoint.startsWith(\"/\") ? \"/\" + endpoint : endpoint;\n    this._extensionFactories = map(extensions);\n\n    this._parser = parser;\n\n    if (!storage) {\n      storage = {\n        mappings: {\n          default: new InMemoryStorage(),\n        },\n      };\n    }\n\n    const storageMappings: PrefixMappings = [];\n    const mapPrefix = (\n      scope: VariableScope,\n      prefix: string,\n      storage: ReadOnlyVariableStorage | undefined\n    ) => storage && (storageMappings[scope] ??= new Map()).set(prefix, storage);\n\n    const mapStorages = (\n      prefix: string,\n      mappings: StorageMappings<ReadOnlyVariableStorage>\n    ) => {\n      (\n        [\n          [VariableScope.Global, \"global\"],\n          [VariableScope.User, \"user\"],\n          [VariableScope.Device, \"device\"],\n          [VariableScope.Session, \"session\"],\n          [VariableScope.Entity, \"entity\"],\n        ] as [VariableScope, keyof StorageMappings][]\n      ).forEach(([scope, key]) =>\n        mapPrefix(scope, prefix, mappings[key] ?? mappings.default)\n      );\n\n      forEach(\n        (mappings as DefaultStorageMappings)?.prefixes,\n        ([prefix, mappings]) => mapStorages(prefix, mappings)\n      );\n    };\n\n    this.environment = new TrackerEnvironment(\n      host,\n      crypto ?? new DefaultCryptoProvider(encryptionKeys),\n      parser,\n      manageConsents,\n      new TrackerVariableStorage(\n        new VariableStorageCoordinator({ mappings: storageMappings })\n      ),\n      environmentTags\n    );\n\n    this._cookies = new CookieMonster(cookies);\n    this._allowUnknownEventTypes = allowUnknownEventTypes;\n    this._useSession = useSession;\n    this._debugScript = debugScript;\n    this._sessionReferenceMapper =\n      sessionReferenceMapper ?? new DefaultSessionReferenceMapper();\n\n    this._sessionTimeout = sessionTimeout;\n    this._cookieNames = {\n      consent: `${cookies.namePrefix}.consent`,\n      session: `${cookies.namePrefix}.s`,\n      device: obj(\n        dataPurposes.entries.map(([name, flag]) => [\n          name,\n          // Necessary device data is just \".d\" (no suffix)\n          `${cookies.namePrefix}.d${\n            flag !== dataPurposes.necessary ? `.${name[0]}` : \"\"\n          }`,\n        ])\n      ),\n    };\n\n    this._clientKeySeed = clientKeySeed;\n    this._clientConfig = client;\n    this._clientConfig.src = this._endpoint;\n  }\n\n  public async applyExtensions(tracker: Tracker) {\n    //console.log(`EXT.IN: ${++this._activeExtensionRequests}`);\n    for (const extension of this._extensions) {\n      // Call the apply method in post context to let extension do whatever they need before events are processed (e.g. initialize session).\n      try {\n        await extension.apply?.(tracker);\n      } catch (e) {\n        this._logExtensionError(extension, \"apply\", e);\n      }\n    }\n  }\n\n  /** @internal */\n  public async _validateLoginEvent(userId: string, evidence: string) {\n    //TODO\n    return true;\n  }\n\n  public getClientCookies(tracker: Tracker): ClientResponseCookie[] {\n    return this._cookies.mapResponseCookies(tracker.cookies as any);\n  }\n\n  public getClientScripts(tracker: Tracker, nonce?: string) {\n    return this._getClientScripts(tracker, true, nonce);\n  }\n\n  public async initialize() {\n    if (this._initialized) return;\n\n    await this._lock.acquire();\n    try {\n      if (this._initialized) return;\n\n      if (typeof this._debugScript === \"string\") {\n        this._script = await this.environment.readText(\n          this._debugScript,\n          async (_, newText) => {\n            const updated = await newText();\n            if (updated) {\n              this._script = updated;\n            }\n            return true;\n          }\n        );\n      }\n\n      await this.environment.storage.initialize?.(this.environment);\n\n      this._extensions = [\n        Timestamps,\n        this._useSession ? new SessionEvents() : null,\n        new CommerceExtension(),\n        ...(await Promise.all(\n          this._extensionFactories.map(async (factory) => {\n            let extension: TrackerExtension | null = null;\n            try {\n              extension = await factory();\n              if (extension?.initialize) {\n                await extension.initialize?.(this.environment);\n                this.environment.log(\n                  extension,\n                  `The extension ${extension.id} was initialized.`\n                );\n              }\n              return extension;\n            } catch (e) {\n              this._logExtensionError(\n                extension,\n                extension ? \"update\" : \"factory\",\n                e\n              );\n              return null;\n            }\n          })\n        )),\n      ].filter((item) => item != null) as TrackerExtension[];\n      this._initialized = true;\n    } finally {\n      this._lock.release();\n    }\n  }\n\n  public async post(\n    tracker: Tracker,\n    eventBatch: TrackedEventBatch,\n    { deviceSessionId, deviceId, routeToClient }: TrackerPostOptions\n  ): Promise<PostResponse> {\n    let events = eventBatch.add;\n    await this.initialize();\n    let parsed = this._parser.parseAndValidate(\n      events,\n      !this._allowUnknownEventTypes\n    );\n\n    const sourceIndices = new Map<{}, number>();\n\n    parsed.forEach((item, i) => {\n      sourceIndices.set(item, i);\n    });\n\n    await tracker._applyExtensions(deviceSessionId, deviceId);\n\n    const validationErrors: (ValidationError & { sourceIndex?: number })[] = [];\n\n    function collectValidationErrors(parsed: ParseResult[]) {\n      const events: TrackedEvent[] = [];\n      for (const item of parsed) {\n        if (isValidationError(item)) {\n          validationErrors.push({\n            // The key for the source index of a validation error may be the error itself during the initial validation.\n            sourceIndex:\n              sourceIndices.get(item.source) ?? sourceIndices.get(item),\n            source: item.source,\n            error: item.error,\n          });\n        } else {\n          events.push(item);\n        }\n      }\n      return events;\n    }\n\n    const patchExtensions = this._extensions.filter((ext) => ext.patch);\n    const callPatch = async (\n      index: number,\n      results: ParseResult[]\n    ): Promise<TrackedEvent[]> => {\n      const extension = patchExtensions[index];\n      const events = collectValidationErrors(this._parser.validate(results));\n      if (!extension) return events;\n      try {\n        return collectValidationErrors(\n          this._parser.validate(\n            await extension.patch!(\n              events,\n              async (events) => {\n                return await callPatch(index + 1, events);\n              },\n              tracker\n            )\n          )\n        );\n      } catch (e) {\n        this._logExtensionError(extension, \"update\", e);\n        return events;\n      }\n    };\n\n    eventBatch.add = await callPatch(0, parsed);\n    const extensionErrors: Record<string, Error> = {};\n    if (routeToClient) {\n      tracker._clientEvents.push(...events);\n    } else {\n      await Promise.all(\n        this._extensions.map(async (extension) => {\n          try {\n            (await extension.post?.(eventBatch, tracker)) ?? Promise.resolve();\n          } catch (e) {\n            extensionErrors[extension.id] =\n              e instanceof Error ? e : new Error(e?.toString());\n          }\n        })\n      );\n    }\n\n    if (validationErrors.length || any(extensionErrors)) {\n      throw new PostError(validationErrors, extensionErrors);\n    }\n\n    return {};\n  }\n\n  public async processRequest({\n    method,\n    url,\n    headers: sourceHeaders,\n    payload,\n    clientIp,\n  }: ClientRequest): Promise<{\n    tracker: Tracker;\n    response: CallbackResponse | null;\n  } | null> {\n    //const requestTimer = timer(\"Request\").start();\n\n    if (!url) return null;\n\n    await this.initialize();\n\n    const { host, pathname: path, query } = urlParse(url);\n    const parsedQuery = queryString.parse(query);\n\n    const headers = Object.fromEntries(\n      Object.entries(sourceHeaders)\n        .filter(([k, v]) => !!v)\n        .map(\n          ([k, v]) =>\n            [k.toLowerCase(), Array.isArray(v) ? v.join(\",\") : v] as [\n              string,\n              string\n            ]\n        )\n    );\n\n    const tracker = new Tracker({\n      headers,\n      host,\n      path,\n      url,\n      queryString: Object.fromEntries(\n        Object.entries(parsedQuery ?? {}).map(([key, value]) => [\n          key,\n          !value\n            ? []\n            : Array.isArray(value)\n            ? value.map((value) => value || \"\")\n            : [value],\n        ])\n      ),\n      clientIp,\n      requestHandler: this,\n      cookies: this._cookies.parseCookieHeader(headers[\"cookie\"]),\n      clientKeySeed: this._clientKeySeed,\n    });\n\n    try {\n      let extensionRequestType: null | \"post\" | \"usr\" = null;\n      const result = async (\n        response: Partial<CallbackResponse> | null,\n        discardTrackerCookies = false\n      ) => {\n        if (extensionRequestType) {\n          !discardTrackerCookies && (await tracker._persist());\n\n          console.log(\n            tracker.httpClientDecrypt(\n              tracker.cookies[MUTEX_REQUEST_COOKIE]?.value\n            )\n          );\n        }\n        if (response) {\n          response.headers ??= {};\n          response.cookies = this.getClientCookies(tracker);\n        }\n\n        return {\n          tracker,\n          response: response as CallbackResponse,\n        };\n      };\n\n      let requestPath = path;\n\n      if (requestPath.startsWith(this._endpoint)) {\n        requestPath = requestPath.substring(this._endpoint.length);\n\n        if (\"init\" in parsedQuery) {\n          // This is set by most modern browsers.\n          // It prevents external scripts to try to get a hold of the storage key via XHR.\n          const secDest = headers[\"sec-fetch-dest\"];\n          if (secDest && secDest !== \"script\") {\n            return await result({\n              status: 400,\n              body: \"This script can only be loaded from a script tag.\",\n              headers: {\n                \"content-type\": \"text/plain\",\n                \"cache-control\": SCRIPT_CACHE_CONTROL,\n                vary: \"sec-fetch-dest\",\n              },\n            });\n          }\n          return await result({\n            status: 200,\n            body: generateClientConfigScript(tracker, {\n              ...this._clientConfig,\n              clientKey: tracker.clientKey,\n            }),\n            headers: {\n              \"content-type\": \"application/javascript\",\n              \"cache-control\": SCRIPT_CACHE_CONTROL,\n              vary: \"sec-fetch-dest\",\n            },\n          });\n        }\n\n        switch (method.toUpperCase()) {\n          case \"GET\": {\n            if (\"opt\" in parsedQuery) {\n              return await result({\n                status: 200,\n                body: this._getClientScripts(tracker, false),\n\n                cacheKey: \"external-script\",\n                headers: {\n                  \"cache-control\": SCRIPT_CACHE_CONTROL,\n                  \"content-type\": \"application/javascript\",\n                },\n              });\n            }\n            if (\"mnt\" in parsedQuery) {\n              const mnt = Array.isArray(parsedQuery[\"mnt\"])\n                ? parsedQuery[\"mnt\"].join(\"\")\n                : parsedQuery[\"mnt\"];\n\n              const contextMenuCookie =\n                tracker.cookies[CONTEXT_MENU_COOKIE]?.value;\n\n              // Don't write any other cookies (that is, clear those we have).\n              // If for any reason this redirect is considered \"link decoration\" or similar\n              // we don't want the browser to store the rest of our cookies in a restrictive way.\n              (tracker.cookies as any) = {};\n              // This cookie is used to signal that external navigation happened from the \"open in new tab\" context menu.\n              // We do not want the server to echo this cookie.\n\n              if (contextMenuCookie) {\n                tracker.cookies[CONTEXT_MENU_COOKIE] = {\n                  essential: true,\n                  httpOnly: false,\n                  maxAge: 30,\n                  value: \"\" + (+contextMenuCookie + 1),\n                  sameSitePolicy: \"Lax\",\n                };\n              }\n              return await result({\n                status: 301,\n                headers: {\n                  location: mnt + \"\",\n                  \"cache-control\": \"no-cache, no-store, must-revalidate\",\n                  pragma: \"no-cache\",\n                  expires: \"0\",\n                },\n              });\n            }\n\n            if (\"$types\" in parsedQuery) {\n              return await result({\n                status: 200,\n                body: JSON.stringify(this._parser.events, null, 2),\n                headers: {\n                  \"content-type\": \"application/json\",\n                },\n                cacheKey: \"types\",\n              });\n            }\n\n            const scriptHeaders = {\n              \"content-type\": \"application/javascript\",\n              \"cache-control\": SCRIPT_CACHE_CONTROL,\n            };\n\n            let script: string | Uint8Array | null = this._script;\n            if (!script) {\n              if (this._debugScript) {\n                script = scripts.debug;\n              } else {\n                const accept =\n                  tracker.headers[\"accept-encoding\"]\n                    ?.split(\",\")\n                    .map((value) => value.toLowerCase().trim()) ?? [];\n                if (accept.includes(\"br\")) {\n                  script = scripts.main.br;\n                  scriptHeaders[\"content-encoding\"] = \"br\";\n                } else if (accept.includes(\"gzip\")) {\n                  script = scripts.main.gzip;\n                  scriptHeaders[\"content-encoding\"] = \"gzip\";\n                } else {\n                  script = scripts.main.text;\n                }\n              }\n            }\n            return await result({\n              status: 200,\n              body: script,\n              cacheKey: \"script\",\n              headers: scriptHeaders,\n            });\n          }\n\n          case \"POST\": {\n            const payloadString = payload ? await payload() : null;\n\n            if (payloadString == null || payloadString === \"\") {\n              return await result({\n                status: 400,\n                body: \"No data.\",\n                headers: {\n                  \"content-type\": \"text/plain\",\n                },\n              });\n            }\n\n            const postRequest: PostRequest =\n              this.environment.httpDecode(payloadString);\n\n            try {\n              extensionRequestType = \"post\";\n              const response: PostResponse = {};\n\n              if (postRequest.add || postRequest.patch) {\n                //requestTimer.print(\"post start\");\n                await tracker.post(\n                  {\n                    add: postRequest.add ?? [],\n                    patch: postRequest.patch ?? [],\n                  },\n                  {\n                    deviceSessionId: postRequest.deviceSessionId,\n                    deviceId: postRequest.deviceId,\n                  }\n                );\n              }\n\n              return await result(\n                response.eventIds || response.variables\n                  ? { status: 200, body: tracker.httpClientEncrypt(response) }\n                  : { status: 202 }\n              );\n            } catch (error) {\n              this.environment.log(\n                {\n                  group: \"system/request-handler\",\n                  source: \"post\",\n                },\n                error\n              );\n              if (error instanceof PostError) {\n                return result({\n                  status: Object.keys(error.extensions).length ? 500 : 400,\n                  body: error.message,\n                  headers: {\n                    \"content-type\": \"text/plain\",\n                  },\n                  error,\n                });\n              }\n              throw error;\n            }\n          }\n        }\n\n        return result({\n          status: 400,\n          body: `Bad request.`,\n          headers: {\n            \"content-type\": \"text/plain\",\n          },\n        });\n      }\n    } catch (ex) {\n      console.error(ex.stack);\n      throw ex;\n    }\n\n    return { tracker, response: null };\n  }\n\n  private _getClientScripts(\n    tracker: Tracker,\n    html: boolean,\n    nonce?: string\n  ): string | undefined {\n    if (!this._initialized) {\n      return undefined;\n    }\n\n    const trackerScript: string[] = [];\n    const wrapTryCatch = (s: string) => `try{${s}}catch(e){console.error(e);}`;\n\n    const trackerRef = this._trackerName;\n    if (html) {\n      trackerScript.push(`window.${trackerRef}||(${trackerRef}=[]);`);\n    }\n\n    const inlineScripts: string[] = [trackerScript.join(\"\")];\n    const otherScripts: ClientScript[] = [];\n\n    this._extensions\n      .map((extension) => extension.getClientScripts?.(tracker))\n      .flatMap((item) => item ?? [])\n      .forEach((script) => {\n        if (\"inline\" in script) {\n          // Prevent errors from preempting other scripts.\n          script.inline = wrapTryCatch(script.inline);\n\n          if (script.allowReorder !== false) {\n            inlineScripts.push(script.inline);\n            return;\n          }\n        }\n        otherScripts.push(script);\n      });\n\n    if (html) {\n      const variables = this._getClientVariables(tracker);\n\n      if (Object.keys(variables).length) {\n        inlineScripts.push(\n          `${trackerRef}.push(${JSON.stringify({ set: variables })});`\n        );\n      }\n      const pendingEvents = tracker.clientEvents;\n      if (pendingEvents.length) {\n        inlineScripts.push(\n          `${trackerRef}.push(${pendingEvents\n            .map((event) =>\n              typeof event === \"string\" ? event : JSON.stringify(event)\n            )\n            .join(\", \")});`\n        );\n      }\n\n      otherScripts.push({\n        src: `${this._endpoint}${\n          this._trackerName && this._trackerName !== DEFAULT.trackerName\n            ? `#${this._trackerName}`\n            : \"\"\n        }`,\n        defer: true,\n      });\n    }\n\n    const js = [{ inline: inlineScripts.join(\"\") }, ...otherScripts]\n      .map((script, i) => {\n        if (\"inline\" in script) {\n          return html\n            ? `<script${nonce ? ` nonce=\"${nonce}\"` : \"\"}>${\n                script.inline\n              }</script>`\n            : script.inline;\n        } else {\n          return html\n            ? `<script src='${script.src}?init'${\n                script.defer !== false ? \" defer\" : \"\"\n              }></script>`\n            : `try{document.body.appendChild(Object.assign(document.createElement(\"script\"),${JSON.stringify(\n                { src: script.src, async: script.defer }\n              )}))}catch(e){console.error(e);}`;\n        }\n      })\n      .join(\"\");\n\n    return js;\n  }\n\n  private _getClientVariables(tracker: Tracker) {\n    return {\n      ...tracker.transient,\n      consent: tracker.consent,\n    };\n  }\n\n  private _logExtensionError(\n    extension: TrackerExtension | null,\n    method: string,\n    error: any\n  ) {\n    this.environment.log(\n      {\n        group: \"extensions\",\n        source: extension ? `${extension.id}.${method}` : method,\n      },\n      error\n    );\n  }\n}\n"]}