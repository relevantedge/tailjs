{"version":3,"file":"ScrollEvent.js","sourceRoot":"","sources":["ScrollEvent.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAsB7C,MAAM,CAAC,MAAM,aAAa,GAAG,QAAQ,CAAc,QAAQ,CAAC,CAAC","sourcesContent":["import type { ScreenPosition, TrackedEvent, UserInteractionEvent } from \"..\";\nimport { typeTest } from \"../util/type-test\";\n\nexport interface ScrollEvent extends UserInteractionEvent {\n  type: \"SCROLL\";\n\n  /**\n   * The offset relative to the page size (100 % is bottom, 0 % is top)\n   */\n  offset: ScreenPosition;\n\n  /**\n   * The type of scrolling.\n   */\n  scrollType?:\n    | \"fold\" // The user scrolled more than 200 pixels past the fold.\n    | \"article-end\" // Not yet implemented. Needs a notion of special components that are defined as the main \"article\".\n    | \"page-middle\" // The user scrolled past the middle of the page.\n    | \"page-end\" // The user scrolled to the end of the page.\n    | \"reading\" // Not yet implemented. Will be fun to come up with some kind of heuristic, like \"At least x amount of smaller scrolls duration y apart for at least z seconds.\"\n    | \"offset\"; // Not yet implemend. A pre-configured percentage.\n}\n\nexport const isScrollEvent = typeTest<ScrollEvent>(\"SCROLL\");\n"]}