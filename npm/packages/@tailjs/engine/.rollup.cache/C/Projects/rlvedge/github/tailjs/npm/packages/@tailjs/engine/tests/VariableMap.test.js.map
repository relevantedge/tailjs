{"version":3,"file":"VariableMap.test.js","sourceRoot":"","sources":["VariableMap.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { map } from \"@tailjs/util\";\r\nimport { VariableMap } from \"../src/storage/VariableMap\";\r\nimport { VariableScope } from \"@tailjs/types\";\r\n\r\ndescribe(\"VariableMap\", () => {\r\n  it(\"Can get items, and add items if an initializer is provided..\", () => {\r\n    const variables = new VariableMap<number>();\r\n\r\n    expect(variables.get(\"device\", \"test\")).toBeUndefined();\r\n    expect(variables.get(\"device\", \"test\", () => 10)).toBe(10);\r\n    expect(variables.get(\"device\", \"test\")).toBe(10);\r\n    expect(variables.get(\"device\", \"test2\")).toBeUndefined();\r\n    expect(variables.get(\"session\", \"test\")).toBeUndefined();\r\n    expect(variables.get(\"global\", \"test\", () => 3)).toBe(3);\r\n\r\n    expect(variables.get({ scope: \"global\", key: \"test\" })).toBe(3);\r\n    expect(variables.get({ scope: \"device\", key: \"test\" })).toBe(10);\r\n    expect(variables.get({ scope: \"session\", key: \"test\" })).toBeUndefined();\r\n\r\n    expect(variables.size).toBe(2);\r\n\r\n    expect(variables.has(\"global\")).toBe(true);\r\n    expect(variables.has(\"entity\")).toBe(false);\r\n    expect(variables.has(\"global\", \"test2\")).toBe(false);\r\n    expect(variables.has(\"global\", \"test\")).toBe(true);\r\n    expect(variables.has({ scope: \"global\", key: \"test\" })).toBe(true);\r\n\r\n    expect(map(variables)).toEqual([\r\n      [[VariableScope.Device, \"test\"], 10],\r\n      [[VariableScope.Global, \"test\"], 3],\r\n    ]);\r\n  });\r\n\r\n  it(\"Sets\", () => {\r\n    const variables = new VariableMap<number>();\r\n\r\n    expect(variables.get(\"entity\", \"abc\")).toBeUndefined();\r\n    variables.set(\"entity\", \"abc\", 10);\r\n    expect(variables.get(\"entity\", \"abc\")).toBe(10);\r\n    variables.set(\"entity\", \"abc\", 15);\r\n    expect(variables.get(\"entity\", \"abc\")).toBe(15);\r\n    expect(variables.size).toBe(1);\r\n    let captured: any;\r\n    variables.update(\"device\", \"abc\", (current) => ((captured = current), 11));\r\n    expect(captured).toBeUndefined();\r\n    expect(variables.get(\"device\", \"abc\")).toBe(11);\r\n    variables.update(\r\n      { scope: \"device\", key: \"abc\" },\r\n      (current) => ((captured = current), 12)\r\n    );\r\n    expect(captured).toBe(11);\r\n    expect(variables.get(\"device\", \"abc\")).toBe(12);\r\n    expect(variables.size).toBe(2);\r\n    variables.set(\"entity\", \"abc\", undefined);\r\n    expect(variables.size).toBe(1);\r\n    expect(variables.get(\"entity\", \"abc\")).toBeUndefined();\r\n\r\n    variables.set([\r\n      [{ scope: \"session\", key: \"test1\" }, 1],\r\n      [[\"session\", \"test2\"], 2],\r\n    ] as const);\r\n\r\n    expect(variables.size).toBe(3);\r\n    expect(variables.get(\"session\", \"test1\")).toBe(1);\r\n    expect(variables.get(\"session\", \"test2\")).toBe(2);\r\n\r\n    expect(variables.delete(\"session\")).toBe(true);\r\n    expect(variables.get(\"session\", \"test1\")).toBeUndefined();\r\n    expect(variables.get(\"device\", \"abc\")).toBe(12);\r\n\r\n    expect(variables.size).toBe(1);\r\n    variables.clear();\r\n    expect(variables.get(\"device\", \"abc\")).toBeUndefined();\r\n\r\n    expect(variables.size).toBe(0);\r\n  });\r\n});\r\n"]}