{"version":3,"file":"TrackerCoreEvents.js","sourceRoot":"","sources":["TrackerCoreEvents.ts"],"names":[],"mappings":"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","sourcesContent":["import { QUERY_DEVICE } from \"@constants\";\nimport {\n  DataClassification,\n  DataPurposes,\n  SessionStartedEvent,\n  SignInEvent,\n  SignOutEvent,\n  Timestamp,\n  TrackedEvent,\n  Variable,\n  VariableScope,\n  cast,\n  dataClassification,\n  dataPurposes,\n  isConsentEvent,\n  isResetEvent,\n  isSignInEvent,\n  isSignOutEvent,\n  isUserAgentEvent,\n  isViewEvent,\n} from \"@tailjs/types\";\nimport { now } from \"@tailjs/util\";\nimport {\n  DeviceData,\n  InternalSessionData,\n  NextPatchExtension,\n  ScopeData,\n  Tracker,\n  TrackerExtension,\n} from \"../shared\";\nimport { session } from \"packages/@tailjs/client/src/lib\";\n\nexport type SessionConfiguration = {\n  /**\n   * The session timeout in minutes.\n   *\n   * @default 30\n   */\n  timeout?: number;\n\n  /**\n   * The device session timeout in minutes.\n   *\n   * @default 10\n   */\n  deviceTimeout?: number;\n\n  /**\n   * Include the client's IP address.\n   *\n   * @default true\n   */\n  includeIp?: boolean;\n};\n\nconst applyDefaults = (\n  configuration: SessionConfiguration\n): Required<SessionConfiguration> => {\n  configuration.timeout ??= 30;\n  configuration.deviceTimeout ??= 10;\n  configuration.includeIp ??= true;\n\n  return configuration as any;\n};\n\nexport class TrackerCoreEvents implements TrackerExtension {\n  public readonly id = \"session\";\n\n  constructor(configuration: SessionConfiguration = {}) {}\n\n  public async patch(\n    events: TrackedEvent[],\n    next: NextPatchExtension,\n    tracker: Tracker\n  ) {\n    events = await next(events);\n    if (!tracker.sessionId) {\n      return events;\n    }\n\n    let timestamp = now();\n    events.forEach(\n      (ev) => ev.timestamp! < timestamp && (timestamp = ev.timestamp!)\n    );\n\n    // Apply data updates to a copy of the scope data so the logic gets the updated values.\n    let sessionData: InternalSessionData;\n    let deviceData: DeviceData | undefined;\n\n    type ScopeDataPatch<T extends ScopeData> = (current: T) => void;\n\n    let sessionDataUpdates: ScopeDataPatch<InternalSessionData>[];\n    let deviceDataUpdates: ScopeDataPatch<DeviceData>[];\n\n    const updateSnapshot = () => {\n      sessionDataUpdates = [];\n      deviceDataUpdates = [];\n      [sessionData, deviceData] = [\n        tracker._session.value,\n        tracker._device?.value,\n      ];\n      updateData(false, (current) => (current.lastSeen = timestamp));\n      updateData(true, (current) => (current.lastSeen = timestamp));\n    };\n    updateSnapshot();\n\n    const updateData = <\n      D extends boolean,\n      T extends DeviceData | InternalSessionData = D extends true\n        ? DeviceData\n        : InternalSessionData\n    >(\n      device: D,\n      patch: ScopeDataPatch<T>\n    ) => {\n      if (device && !deviceData) {\n        return;\n      }\n      patch((device ? deviceData : sessionData) as T);\n      (\n        (device ? deviceDataUpdates : sessionDataUpdates) as ScopeDataPatch<T>[]\n      ).push(patch);\n    };\n\n    const flushUpdates = async () => {\n      await tracker.set([\n        sessionDataUpdates.length\n          ? {\n              ...tracker._session,\n              patch: (current) => ({\n                value:\n                  current &&\n                  sessionDataUpdates.reduce(\n                    (data, update) => update(data),\n                    current.value\n                  ),\n              }),\n            }\n          : undefined,\n        tracker._device && deviceDataUpdates.length\n          ? {\n              ...tracker._device,\n              patch: (current) => ({\n                value:\n                  current &&\n                  deviceDataUpdates.reduce(\n                    (data, update) => update(data),\n                    current.value\n                  ),\n              }),\n            }\n          : undefined,\n      ]);\n      updateSnapshot();\n    };\n\n    const updatedEvents: TrackedEvent[] = [];\n    for (let event of events) {\n      if (isConsentEvent(event)) {\n        await tracker.updateConsent(\n          dataClassification.tryParse(event.level),\n          dataPurposes.tryParse(event.purposes)\n        );\n      }\n\n      if (isResetEvent(event)) {\n        if (tracker.session.userId) {\n          // Fake a sign out event if the user is currently authenticated.\n          events.push(event);\n          event = {\n            type: \"SIGN_OUT\",\n            userId: tracker.authenticatedUserId,\n            timestamp: event.timestamp,\n          } as SignOutEvent;\n        } else {\n          await flushUpdates();\n          await tracker.reset(\n            true,\n            event.includeDevice,\n            event.includeConsent,\n            event.timestamp\n          );\n          updateSnapshot();\n        }\n      }\n\n      updatedEvents.push(event);\n\n      if (tracker.session.isNew) {\n        updatedEvents.push({\n          type: \"SESSION_STARTED\",\n          url: tracker.url,\n          sessionNumber: tracker.device?.sessions ?? 1,\n          timeSinceLastSession: tracker.session.previousSession\n            ? tracker.session.firstSeen - tracker.session.previousSession\n            : undefined,\n          tags: tracker.env.tags,\n          timestamp,\n        } as SessionStartedEvent);\n      }\n\n      event.session = {\n        sessionId: tracker.sessionId,\n        deviceSessionId: tracker.deviceSessionId,\n        deviceId: tracker.deviceId,\n        userId: tracker.authenticatedUserId,\n        consent: {\n          level: dataClassification.lookup(tracker.consent.level),\n          purposes: dataPurposes.lookup(tracker.consent.purposes),\n        },\n        expiredDeviceSessionId: tracker._expiredDeviceSessionId,\n      };\n\n      if (isUserAgentEvent(event)) {\n        updateData(false, (data) => (data.hasUserAgent = true));\n      } else if (isViewEvent(event)) {\n        updateData(false, (data) => ++data.views);\n        updateData(true, (data) => ++data.views);\n      } else if (isSignInEvent(event)) {\n        const changed =\n          tracker.authenticatedUserId &&\n          tracker.authenticatedUserId != event.userId;\n\n        if (\n          changed &&\n          (await tracker._requestHandler._validateLoginEvent(\n            event.userId,\n            event.evidence\n          ))\n        ) {\n          event.session.userId = event.userId;\n          updateData(\n            false,\n            (data) => (data.userId = (event as SignInEvent).userId)\n          );\n        }\n      } else if (isSignOutEvent(event)) {\n        updateData(false, (data) => (data.userId = undefined));\n      }\n    }\n\n    await flushUpdates();\n\n    return updatedEvents;\n  }\n}\n"]}