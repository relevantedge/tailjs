{"version":3,"file":"updateMinClassifications.js","sourceRoot":"","sources":["updateMinClassifications.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAGzC,MAAM,CAAC,MAAM,wBAAwB,GAAG,CACtC,IAAyC,EACzC,eAAoD,EACpD,EAAE;IACF,IAAI,SAAS,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC;QAC9C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,CAC5B,IAAI,CAAC,cAAc,IAAI,eAAe,CAAC,cAAc,EACrD,eAAe,CAAC,cAAc,CAC/B,CAAC;IACJ,CAAC;IACD,IAAI,SAAS,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,GAAG,eAAe,CAAC,QAAQ,CAAC;IAClE,CAAC;IACD,IAAI,CAAC,YAAY,KAAK,eAAe,CAAC,YAAY,CAAC;AACrD,CAAC,CAAC","sourcesContent":["import { isDefined } from \"@tailjs/util\";\r\nimport { ParsedSchemaClassification } from \".\";\r\n\r\nexport const updateMinClassifications = (\r\n  type: Partial<ParsedSchemaClassification>,\r\n  classifications: Partial<ParsedSchemaClassification>\r\n) => {\r\n  if (isDefined(classifications.classification)) {\r\n    type.classification = Math.min(\r\n      type.classification ?? classifications.classification,\r\n      classifications.classification\r\n    );\r\n  }\r\n  if (isDefined(classifications.purposes)) {\r\n    type.purposes = (type.purposes ?? 0) | classifications.purposes;\r\n  }\r\n  type.censorIgnore ??= classifications.censorIgnore;\r\n};\r\n"]}