{"version":3,"file":"VariableGetter.js","sourceRoot":"","sources":["VariableGetter.ts"],"names":[],"mappings":"","sourcesContent":["import {\r\n  DataPurposeValue,\r\n  SingleDataPurposeValue,\r\n  VariableClassification,\r\n  VersionedVariableKey,\r\n} from \"..\";\r\n\r\nexport type VariableInitializer<T = any> = () =>\r\n  | (VariableClassification & { value: T })\r\n  | undefined\r\n  | Promise<(VariableClassification<boolean> & { value: T }) | undefined>;\r\n\r\n/**\r\n * Uniquely addresses a variable by scope, target and key name, optionally with the purpose(s) it will be used for.\r\n *\r\n * - If a version is specified and the stored version matches this, a result will not be returned.\r\n * - If a purpose is specified and the variable is only stored for other purposes, a result will also not be returned. (best practice)\r\n */\r\nexport interface VariableGetter<T = any, NumericEnums extends boolean = boolean>\r\n  extends VersionedVariableKey<NumericEnums> {\r\n  /**\r\n   * If the variable does not exist, it will be created with the value returned from this function.\r\n   * Since another value from another process may have been used at the same time,\r\n   * you cannot trust that just because the function was called, its value was used.\r\n   *\r\n   * However, it is guaranteed that the returned value is the most current at the time the request was made.\r\n   */\r\n  initializer?: VariableInitializer<T>;\r\n\r\n  /**\r\n   * Optionally, the purpose the variable will be used for in the context it is requested.\r\n   *\r\n   * A variable may be used for multiple purposes but only stored for the purpose a user has consented to.\r\n   * For example, a user's country may be used both in analytics and for personalization purposes.\r\n   * However, if the user has only consented to \"Performance\", but not \"Functionality\", the value must not be used for personalization.\r\n   *\r\n   * It should be considered best practice always to include the intended purpose when requesting data about the user\r\n   * to be sure their consent is respected.\r\n   *\r\n   * It is currently not mandatory to specify the purpose but this requirement may change in the future.\r\n   */\r\n  purpose?: SingleDataPurposeValue<NumericEnums>;\r\n\r\n  /**\r\n   * Indicates that the value must be re-read from the source storage if a caching layer is used on top.\r\n   */\r\n  refresh?: boolean;\r\n}\r\n"]}