{"version":3,"file":"channel.js","sourceRoot":"","sources":["channel.ts"],"names":[],"mappings":"AACA,OAAO,EACL,CAAC,EAED,CAAC,EACD,MAAM,EACN,KAAK,EACL,MAAM,EACN,GAAG,EACH,GAAG,EACH,WAAW,EACX,GAAG,EACH,MAAM,EACN,KAAK,EACL,IAAI,GACL,MAAM,GAAG,CAAC;AA8BX,MAAM,CAAC,MAAM,aAAa,GAYtB,CAAC,EAAO,EAAE,QAAc,EAAE,IAAU,EAAO,EAAE;IAC/C,EAAE,GAAG,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IAC5B,MAAM,UAAU,GAAG,EAAE,CAAC;IAEtB,MAAM,YAAY,GAAG,CAAC,QAAgB,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,QAAQ,EAAE,CAAC;IAC/D,MAAM,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;IAEpC,MAAM,OAAO,GAAG,CAAC,IAAS,EAAE,GAAG,IAAW,EAAO,EAAE;QACjD,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;YACd,gBAAgB;YAChB,OAAO,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAE;gBACxC,IACE,KAAK,IAAI,GAAG;oBACZ,QAAQ;oBACR,CAAC,GAAG,KAAK,UAAU,IAAI,GAAG,KAAK,MAAM,CAAC,EACtC,CAAC;oBACD,MAAM,MAAM,GAAI,IAAuB,CACrC,KAAK,EACL,QAAQ,EACR,GAAG,KAAK,MAAM,CACf,CAAC;oBAEF,OAAO,MAAM,KAAK,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9B,CAAC;QACD,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QAEpB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,cAAc,EAAE,EAAE;YAClE,OAAO,GAAG,CAAC,CAAC;YACZ,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YAC7B,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,QAAQ,EAAE,CAAC;QACb,OAAO,CAAC,CAAC,KAAU,EAAE,QAAgB,EAAE,MAAe,EAAE,EAAE,CACxD,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAQ,CAAC,EAAE,CAC7B,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,KAAK,MAAM,CAAC,EACvC,GAAG,KAAK,CACT,CACF,CAAC;IACJ,CAAC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC","sourcesContent":["import type { Nullish } from \"@tailjs/util\";\nimport {\n  F,\n  Json,\n  T,\n  TAB_ID,\n  defer,\n  filter,\n  fun,\n  map,\n  mapSharedId,\n  nil,\n  shared,\n  shift,\n  size,\n} from \".\";\n\nexport interface MessageHandler<T extends Json = Json> {\n  (value: Exclude<T, null>, sourceId: string, direct: boolean): boolean | void;\n}\n\nexport type MessageSource = [sourceId: string, direct: boolean, self: string];\n\ntype HandlerArgs<F> = F extends (\n  source: MessageSource,\n  ...args: infer A\n) => void\n  ? A\n  : never;\n\ntype ExtractMessageTypes<T> = T extends {\n  [key in infer K]: (...args: any[]) => void;\n}\n  ? K extends string | number\n    ? [K, ...HandlerArgs<T[K]>]\n    : never\n  : never;\n\nexport interface Channel<Default extends Json = Json> {\n  <T extends Default>(handler: MessageHandler<T>, self?: boolean): () =>\n    | void\n    | boolean;\n  <T extends Default>(data: T, ...targetIds: (string | Nullish)[]): void;\n}\n\nexport const createChannel: {\n  <T extends Json = Json>(id: string): Channel<T>;\n  <\n    Handlers extends Record<\n      string | number,\n      (source: MessageSource, ...args: any[]) => void\n    >\n  >(\n    id: string,\n    handlers: Handlers,\n    self?: boolean\n  ): Channel<ExtractMessageTypes<Handlers>>;\n} = (id: any, handlers?: any, self?: any): any => {\n  id = mapSharedId(`c_${id}`);\n  const channelKey = id;\n\n  const getTargetKey = (targetId: string) => `${id}!${targetId}`;\n  const ownKey = getTargetKey(TAB_ID);\n\n  const channel = (arg0: any, ...rest: any[]): any => {\n    let cleared = T;\n    if (fun(arg0)) {\n      // Add listener.\n      return shared((key, value, _, sourceId) => {\n        if (\n          value != nil &&\n          sourceId &&\n          (key === channelKey || key === ownKey)\n        ) {\n          const result = (arg0 as MessageHandler)(\n            value,\n            sourceId,\n            key === ownKey\n          );\n\n          return result !== F;\n        }\n      }, (rest[0] ?? self) === T);\n    }\n    rest = filter(rest);\n\n    map(size(rest) ? map(rest, getTargetKey) : [id], (destinationKey) => {\n      cleared = F;\n      shared(destinationKey, arg0);\n      defer(() => cleared !== (cleared = T) && shared(destinationKey, nil));\n    });\n  };\n\n  if (handlers) {\n    channel((value: any, sourceId: string, direct: boolean) =>\n      handlers[shift(value) as any]?.(\n        [sourceId, direct, sourceId === TAB_ID],\n        ...value\n      )\n    );\n  }\n\n  return channel;\n};\n"]}