{"version":3,"file":"strings.js","sourceRoot":"","sources":["strings.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,UAAU,GAAG,CACxB,CAAI,EACJ,KAAc,EACX,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAM,CAAC;AAEzE,MAAM,CAAC,MAAM,yBAAyB,GAAG,CACvC,UAAkB,EAClB,IAA4C,EAC5C,EAAE,CACF,UAAU,CAAC,OAAO,CAChB,0CAA0C,EAC1C,CAAC,CAAC,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CACvC,CAAC,WAAW,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,KAAK,OAAO,IAAI,IAAI,KAAK,OAAO,CAAC;IAC9D,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;IACzD,CAAC,CAAC,EAAE,CAAC;IACP,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC,WAAW;QAC/D,CAAC,CAAC,IAAI,KAAK,OAAO;YAChB,CAAC,CAAC,GAAG;YACL,CAAC,CAAC,GAAG;QACP,CAAC,CAAC,EAAE,CAAC;QACL,UAAU,CAAC,OAAO,EAAE,IAAI,KAAK,QAAQ,IAAI,CAAC,IAAI,KAAK,OAAO,IAAI,KAAK,CAAC,CAAC;QACrE,UAAU,CACR,IAAI,KAAK,OAAO,IAAI,IAAI,KAAK,OAAO;YAClC,CAAC,CAAC,IAAI,CAAC,OAAO,CACV,sBAAsB,EACtB,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CACjC;YACH,CAAC,CAAC,IAAI,EACR,KAAK,CACN,CAAC,CACP,CAAC","sourcesContent":["export const changeCase = <S extends string | null | undefined>(\r\n  s: S,\r\n  upper: boolean\r\n): S => (s == null ? s : upper ? s.toUpperCase() : s.toLowerCase()) as S;\r\n\r\nexport const changeIdentifierCaseStyle = (\r\n  identifier: string,\r\n  type: \"camel\" | \"pascal\" | \"kebab\" | \"snake\"\r\n) =>\r\n  identifier.replace(\r\n    /([_-]*)(\\$*(?:[A-Z]+|[a-z]))([a-z0-9]*)/g,\r\n    (_, underscores, initial, rest, index) =>\r\n      (underscores && (!index || type === \"kebab\" || type === \"snake\")\r\n        ? underscores.replace(/./g, type === \"snake\" ? \"-\" : \"_\")\r\n        : \"\") +\r\n      ((index && (type === \"kebab\" || type === \"snake\") && !underscores\r\n        ? type === \"snake\"\r\n          ? \"-\"\r\n          : \"_\"\r\n        : \"\") +\r\n        changeCase(initial, type === \"pascal\" || (type === \"camel\" && index)) +\r\n        changeCase(\r\n          type === \"kebab\" || type === \"snake\"\r\n            ? rest.replace(\r\n                /(?<=\\D)\\d|(?<=\\d)\\D/g,\r\n                type === \"kebab\" ? \"_$&\" : \"-$&\"\r\n              )\r\n            : rest,\r\n          false\r\n        ))\r\n  );\r\n"]}