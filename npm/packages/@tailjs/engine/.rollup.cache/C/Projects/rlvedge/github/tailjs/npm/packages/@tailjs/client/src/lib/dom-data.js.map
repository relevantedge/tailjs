{"version":3,"file":"dom-data.js","sourceRoot":"","sources":["dom-data.ts"],"names":[],"mappings":"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","sourcesContent":["import { parseTagString, type Tag } from \"@tailjs/types\";\nimport type { Nullish } from \"@tailjs/util\";\nimport {\n  attr,\n  attrs,\n  bool,\n  concat2,\n  createElement,\n  cssProperty,\n  F,\n  filter,\n  flatMap,\n  forAncestorsOrSelf,\n  forEach,\n  fun,\n  get,\n  hashSet,\n  iterable,\n  map,\n  match,\n  matches,\n  nil,\n  NodeWithParentElement,\n  obj,\n  regex,\n  replace,\n  size,\n  str,\n  T,\n  test,\n  trackerConfig,\n  values,\n  weakMap,\n} from \".\";\nimport type { BoundaryData, TagMappings } from \"..\";\n\nexport const boundaryData = weakMap<Node, BoundaryData>();\nexport const getBoundaryData = (el: Node) => get(boundaryData, el);\n\nexport const trackerPropertyName = (name: string, css = F) =>\n  (css ? \"--track-\" : \"track-\") + name;\n\n// const trackerProperty = (\n//   el: Element,\n//   name: string,\n//   value = attr(el, trackerPropertyName(name)),\n//   css = cssProperty(el as Element, trackerPropertyName(name, T))\n// ) => (value ? (css ? value + \" \" + css : value) : css);\n\ntype MatchAttributeRule = readonly [\n  match: RegExp,\n  selector?: string,\n  baseRank?: string\n];\n\ntype CacheMatchRules = [\n  eligibleCache: { [name: string]: boolean },\n  rules: MatchAttributeRule[] | Nullish\n];\n\n/**\n * Extracts an element's tags given an attribute name, and a list of rules about how to match..\n * Since this function is external, its local variables are added as local parameters. Don't tamper.\n *\n * An optional `eligibleCache` can be passed along to speed up rejecting attribute names that definitely don't match anything.\n */\nconst matchAttributeNames = (\n  el: Element | Nullish,\n  cached: CacheMatchRules | Nullish,\n  tags: Set<string>,\n  prefix?: string | boolean,\n  value?: string,\n  eligible?: boolean\n) =>\n  cached?.[1] &&\n  forEach(\n    attrs(el),\n    (name) =>\n      (cached[0][name] ??=\n        ((eligible = F),\n        str(\n          (prefix =\n            // Grrr.. we did not. Let's loop through them then.\n            forEach(\n              cached[1],\n              ([match, selector, prefix], _, stop) =>\n                test(name, match) &&\n                // Sneakily we \"delete\" the eligible flag, so the skipNameCache's `??=` assignment will always be reevaluated.\n                // If this code branch is never hit, we return the initial value `false`, and this check will never be performed again.\n                // We do this check before the selector check, since this result is not generally cacheable.\n                ((eligible = undefined), !selector || matches(el, selector)) &&\n                stop(prefix ?? name)\n            ))\n        ) && // The empty string is also \"true\" since it means precense of the attribute without a value (as in `<div tag-yes />).\n          (!(value = el!.getAttribute(name)!) || bool(value, false)) &&\n          parseTagString(value, replace(prefix, /\\-/g, \":\"), tags),\n        eligible))\n  );\n\n// We cache the tracker configuration's rules for tag mappings.\nlet cachedTagMapper: (el: Element, tags: Set<string>) => void = () => {};\nlet cachedMappings: TagMappings | undefined;\nconst parseTagAttributes = (el: Element, tags: Set<string>) => {\n  if (cachedMappings === (cachedMappings = trackerConfig.tags)) {\n    return cachedTagMapper(el, tags);\n  }\n\n  const parse = (rule: TagMappings[string]): MatchAttributeRule[] =>\n      !rule\n        ? []\n        : regex(rule)\n        ? [[rule]]\n        : iterable(rule)\n        ? flatMap(rule, parse)\n        : [\n            obj(rule)\n              ? [regex(rule.match, false), rule.selector, rule.prefix]\n              : [regex(rule, false)],\n          ],\n    cache: CacheMatchRules = [\n      {},\n      // Start by checking whether we have any of the good ol', documented, \"tail.js official\" tag attributes.\n      [[/^(?:track\\-)?tags?(?:$|\\-)(.*)/], ...parse(values(cachedMappings))],\n    ];\n\n  (cachedTagMapper = (el: Element, tags: Set<string>) =>\n    matchAttributeNames(el, cache, tags))(el, tags);\n};\n\nconst cssPropertyWithBase = (el: Element, name: string) =>\n  concat2(\n    cssProperty(el, trackerPropertyName(name, T)),\n    cssProperty(el, trackerPropertyName(\"base-\" + name, T)),\n    \"\"\n  );\n\n// We cannot cache as broadly for CSS based rules, so we cache per selector instead.\nconst parsedCssRules: {\n  [rule: string]: CacheMatchRules;\n} = {};\n\nconst parseCssMappingRules = (\n  el: Element,\n  tags: Set<string>,\n  rulesString = cssPropertyWithBase(el, \"attributes\")\n) => {\n  matchAttributeNames(\n    el,\n    (parsedCssRules[rulesString] ??= [\n      {},\n      filter(\n        match(\n          rulesString,\n          /(?:(\\S+)\\:\\s*)?(?:\\((\\S+)\\)|([^\\s,:]+))\\s*(?!\\S*\\:)/g,\n          (_, prefix, rule1, rule2) =>\n            [regex(rule1 || rule2, false), , prefix] as const,\n          []\n        ),\n        T\n      ),\n    ]),\n    tags\n  );\n  parseTagString(cssPropertyWithBase(el, \"tags\"), undefined, tags);\n};\n\nlet currentBoundaryData: BoundaryData | Nullish;\nexport const trackerProperty = (\n  el: Element,\n  name: string,\n  inherit:\n    | boolean\n    | ((el: NodeWithParentElement, distance: number) => boolean) = F,\n  boundaryData?: (el: BoundaryData) => string | Nullish\n): string | null =>\n  (inherit\n    ? forAncestorsOrSelf(\n        el,\n        (el, r) => r(trackerProperty(el, name, F)),\n        fun(inherit, F)\n      )\n    : concat2(\n        attr(el, trackerPropertyName(name)),\n        cssProperty(el, trackerPropertyName(name, T))\n      )) ??\n  (boundaryData &&\n    (currentBoundaryData = getBoundaryData(el)) &&\n    boundaryData(currentBoundaryData)) ??\n  nil;\n\nlet propertyValue: string | Nullish;\nexport const trackerFlag = (\n  el: Element,\n  name: string,\n  inherit:\n    | boolean\n    | ((el: NodeWithParentElement, distance: number) => boolean) = F,\n  boundaryData?: (data: BoundaryData) => boolean | Nullish\n) =>\n  (propertyValue = trackerProperty(el, name, inherit, boundaryData as any)) ===\n    \"\" || (propertyValue == nil ? propertyValue : bool(propertyValue, T));\n\nexport type ParsedTags = { tags?: Tag[] };\n\nexport const parseTags = (\n  sourceEl: Element | Nullish,\n  stoppingCriterion?: (el: Element, distance: number) => boolean,\n  elementTagData?: (el: Element) => Iterable<Tag> | Nullish,\n  tags?: Set<string>\n): ParsedTags =>\n  !sourceEl\n    ? {}\n    : ((tags ??= hashSet<string>()),\n      parseCssMappingRules(sourceEl, tags),\n      forAncestorsOrSelf(\n        sourceEl,\n        (el) => {\n          parseTagAttributes(el, tags!);\n          parseTagString(map(elementTagData?.(el)), undefined, tags!);\n        },\n        stoppingCriterion\n      ),\n      size(tags) ? { tags: [...tags] } : {});\n\nlet styleElement: Node;\nexport const injectCssDefaults = (document: Document) => {\n  document.body.appendChild(\n    (((styleElement =\n      // --track-base-attributes and --track-base-tags are not set, since they are supposed to be inherited.\n      createElement(\"style\")).innerText = `* { ${trackerPropertyName(\n      \"tags\",\n      T\n    )}:; ${trackerPropertyName(\"attributes\", T)}:;}`),\n    styleElement)\n  );\n};\n"]}