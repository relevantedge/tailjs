{"version":3,"file":"UserConsent.js","sourceRoot":"","sources":["UserConsent.ts"],"names":[],"mappings":"AAAA,OAAO,EAML,kBAAkB,EAClB,YAAY,GACb,MAAM,GAAG,CAAC;AAeX,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC;AAEhE,MAAM,CAAC,MAAM,eAAe,GAAG,CAC7B,MAEa,EACb,OAE2E,EAC3E,EAAE,CACF,MAAM;IACN,kBAAkB,CAAC,KAAK,CAAC,MAAM,CAAC,cAAc,CAAE;QAC9C,kBAAkB,CAAC,KAAK,CACtB,OAAO,CAAC,gBAAgB,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,EAC7C,KAAK,CACN;IACH,CAAC,MAAM,CAAC,cAAc,KAAK,CAAC;QAC1B,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;YAChD,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC","sourcesContent":["import {\r\n  DataClassification,\r\n  DataClassificationValue,\r\n  DataPurposeValue,\r\n  DataPurposes,\r\n  SingleDataPurposeValue,\r\n  dataClassification,\r\n  dataPurposes,\r\n} from \".\";\r\n\r\n/** A user's consent choices.  */\r\nexport interface UserConsent {\r\n  /**\r\n   * The highest level of data classification the user has consented to be stored.\r\n   */\r\n  level: DataClassificationValue;\r\n\r\n  /**\r\n   * The purposes the user has consented their data to be used for.\r\n   */\r\n  purposes: DataPurposeValue;\r\n}\r\n\r\nexport const isUserConsent = (value: any) => !!value?.[\"level\"];\r\n\r\nexport const validateConsent = (\r\n  source:\r\n    | { classification?: DataClassificationValue; purposes?: DataPurposeValue }\r\n    | undefined,\r\n  consent:\r\n    | UserConsent\r\n    | { classification: DataClassificationValue; purposes: DataPurposeValue }\r\n) =>\r\n  source &&\r\n  dataClassification.parse(source.classification)! <=\r\n    dataClassification.parse(\r\n      consent[\"classification\"] ?? consent[\"level\"],\r\n      false\r\n    ) &&\r\n  (source.classification === 0 ||\r\n    ((dataPurposes.parse(source.purposes, false) ?? 0) &\r\n      dataPurposes.parse(consent.purposes, false)) >\r\n      0);\r\n"]}