{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"AAAA,cAAc,qBAAqB,CAAC;AACpC,cAAc,kBAAkB,CAAC;AAEjC;;;GAGG;AACH,MAAM,CAAC,MAAM,IAAI,GAGb,CAAC,IAAS,EAAE,EAAE,CAAC,IAAW,CAAC","sourcesContent":["export * from \"./transformLocalIds\";\nexport * from \"./parseTagString\";\n\n/**\n *  No-op function to validate event types in TypeScript. Because function parameters are contravariant, passing an event that does not match on all properties will get red wiggly lines)\n *\n */\nexport const cast: {\n  <T extends any[] | undefined>(item: T extends (infer T)[] ? T : never);\n  <T>(item: T): T;\n} = (item: any) => item as any;\n"]}