{"version":3,"file":"ExternalReference.js","sourceRoot":"","sources":["ExternalReference.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Represent a reference to externally defined data.\n *\n * Have in mind that the reference does not need to point to an external system or database.\n * It can just as well be a named reference to a React component, the value of a MV test variable or event just some hard-coded value.\n *\n * The tailjs model generally prefers using external references rather than simple strings for most properties\n * since that gives you the option to collect structured data that integrates well in, say, BI scenarios.\n *\n * The tenent is that if you only use an URL from a web page, or the name of a campaign you will lose the ability to easily track these historically if/when they change.\n * Even when correctly referencing a immutable ID you might still want to include the name to make it possible to add labels in your analytics reporting without integrating additional data sources.\n * The names may then still be wrong after some time, but at least then you have the IDs data does not get lost, and you have a path for correcting it.\n *\n * Again, if you only have some hard-coded value, you can just make an external reference and use its {@link id} property for the value.\n * Hopefully, you will find that a little bit annoying every time you do it and make you start thinking about that you might in fact reference some external information that has an immutable ID.\n *\n */\nexport interface ExternalReference {\n  /**\n   * The ID as defined by some external source, e.g. CMS.\n   *\n   * The property is required but an empty string is permitted.\n   * The library itself uses the empty string to indicate an \"empty\" root component if a page has content that is not wrapped in a component.\n   */\n  id: string;\n\n  /**\n   * Optionally, the version of the item in case the external source supports versioning.\n   */\n  version?: string;\n\n  /**\n   * Optionally, the language of the item in case the external source supports localization.\n   */\n  language?: string;\n\n  /**\n   * Optionally, the ID of the external system referenced.\n   */\n  source?: string;\n\n  /**\n   * Optionally, how the item is referenced in case the external source supports multiple kinds of references, e.g. \"parent\" or \"pointer\".\n   */\n  referenceType?: string;\n\n  /**\n   * Flag to indicate that this data comes from an external system that you do not control.\n   */\n  isExternal?: boolean;\n\n  /**\n   *   Optionally, the name of the item at the time an event was recorded.\n   *   Ideally, this should be retrieved from the source system when doing reporting to avoid inconsistent data and wasting space.\n   */\n  name?: string;\n\n  /**\n   * Optionally, the type of item referenced. In CMS context this corresponds to \"template\".\n   * Ideally, this should be retrieved from the source system when doing reporting to avoid inconsistent data and wasting space.\n   */\n  itemType?: string;\n\n  /**\n   *  Optionally, the path of the item at the time the event was recorded.\n   *  Ideally, this should be retrieved from the source system when doing reporting to avoid inconsistent data and wasting space.\n   */\n  path?: string;\n}\n"]}