{"version":3,"file":"OrderStatusEvent.js","sourceRoot":"","sources":["OrderStatusEvent.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AA4C7C,MAAM,CAAC,MAAM,qBAAqB,GAChC,QAAQ,CAAsB,iBAAiB,CAAC,CAAC;AAEnD,MAAM,CAAC,MAAM,qBAAqB,GAChC,QAAQ,CAAsB,iBAAiB,CAAC,CAAC","sourcesContent":["import type { TrackedEvent } from \"..\";\nimport { typeTest } from \"../util/type-test\";\n\n/**\n * Base event for events that related to an order changing status.\n */\nexport interface OrderStatusEvent extends TrackedEvent {\n  /**\n   * A reference to the order that changed status.\n   */\n  order: string;\n}\n\n/**\n * An order was accepted.\n *\n * This may be useful to track if some backend system needs to validate if the order submitted by the user is possible,\n * or just for monitoring whether your site is healthy and actually processes the orders that come in.\n *\n * This event should also imply that the user got a confirmation.\n */\nexport interface OrderConfirmedEvent extends TrackedEvent {\n  type: \"ORDER_CONFIRMED\";\n}\n\n/**\n * An order was cancelled.\n */\nexport interface OrderCancelledEvent extends TrackedEvent {\n  type: \"ORDER_CANCELLED\";\n\n  /**\n   * Indicates if the user cancelled the order or it happended during a background process.\n   *\n   * @default false;\n   */\n  cancelledByUser?: boolean;\n}\n\n/**\n * An order was cancelled.\n */\nexport interface OrderCompletedEvent extends TrackedEvent {\n  type: \"ORDER_COMPLETED\";\n}\nexport const isOrderCancelledEvent =\n  typeTest<OrderCancelledEvent>(\"ORDER_CANCELLED\");\n\nexport const isOrderCompletedEvent =\n  typeTest<OrderCancelledEvent>(\"ORDER_COMPLETED\");\n"]}