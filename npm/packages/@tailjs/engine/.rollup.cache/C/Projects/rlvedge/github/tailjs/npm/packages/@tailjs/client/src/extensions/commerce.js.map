{"version":3,"file":"commerce.js","sourceRoot":"","sources":["commerce.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  type CartAction,\n  type CartEventData,\n  type CartUpdatedEvent,\n  type OrderEvent,\n} from \"@tailjs/types\";\nimport type { Nullish } from \"@tailjs/util\";\nimport { TrackerExtensionFactory, isCartCommand, isOrderCommand } from \"..\";\nimport {\n  F,\n  T,\n  equals,\n  forAncestorsOrSelf,\n  getBoundaryData,\n  item,\n  nil,\n  obj,\n  push,\n  str,\n  trackerProperty,\n  undefined,\n} from \"../lib\";\n\nexport const parseCartEventData = (\n  data: boolean | string | CartEventData | Nullish\n): CartEventData | undefined => (\n  data == nil ? undefined : (data === T || data === \"\") && (data = \"add\"),\n  str(data) && equals(data, \"add\", \"remove\", \"update\", \"clear\")\n    ? { action: data as CartAction }\n    : obj(data)\n    ? data\n    : undefined\n);\n\nfunction normalizeCartEventData(data: CartEventData | Nullish) {\n  if (!data) return undefined;\n\n  if (data.units != nil && equals(data.action, nil, \"add\", \"remove\")) {\n    if (data.units === 0) return undefined;\n    data.action = data.units > 0 ? \"add\" : \"remove\";\n  }\n  return data;\n}\n\nexport function tryGetCartEventData(sourceElement: Element) {\n  // Find cart. Look for cart attributes and/or data until the first content is met.\n  let contextCart: CartEventData | Nullish;\n  forAncestorsOrSelf(\n    sourceElement,\n    (el, r) =>\n      !!(contextCart ??= parseCartEventData(\n        getBoundaryData(el)?.cart ?? trackerProperty(el, \"cart\")\n      )) &&\n      !contextCart.item &&\n      (contextCart.item = item(getBoundaryData(el)?.content, -1)) &&\n      r(contextCart)\n  );\n\n  return normalizeCartEventData(contextCart);\n}\n\nexport const commerce: TrackerExtensionFactory = {\n  id: \"cart\",\n  setup(tracker) {\n    return {\n      processCommand(command) {\n        if (isCartCommand(command)) {\n          let cart = command.cart;\n          cart === \"clear\"\n            ? push(tracker, {\n                type: \"CART_UPDATED\",\n                action: \"clear\",\n              } as CartUpdatedEvent)\n            : (cart = normalizeCartEventData(cart)!) &&\n              push(tracker, {\n                ...cart,\n                type: \"CART_UPDATED\",\n              } as CartUpdatedEvent);\n\n          return T;\n        }\n        if (isOrderCommand(command)) {\n          push(tracker, {\n            type: \"ORDER\",\n            ...command.order,\n          } as OrderEvent);\n\n          return T;\n        }\n        return F;\n      },\n    };\n  },\n};\n"]}