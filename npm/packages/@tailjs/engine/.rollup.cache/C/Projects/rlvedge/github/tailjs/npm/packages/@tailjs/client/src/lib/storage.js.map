{"version":3,"file":"storage.js","sourceRoot":"","sources":["storage.ts"],"names":[],"mappings":"AACA,OAAO,EACL,CAAC,EACD,CAAC,EACD,MAAM,EAEN,MAAM,EACN,MAAM,EACN,MAAM,EACN,GAAG,EACH,UAAU,EACV,WAAW,EACX,UAAU,EACV,WAAW,EACX,GAAG,EACH,WAAW,EACX,GAAG,EACH,GAAG,EACH,IAAI,EACJ,KAAK,EACL,OAAO,EACP,SAAS,GACV,MAAM,GAAG,CAAC;AA6CX,MAAM,aAAa,GAAG,GAAkB,EAAE;IACxC,MAAM,MAAM,GAA2B,EAAE,CAAC;IAC1C,OAAO;QACL,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAQ;QACpC,OAAO,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QAC9C,UAAU,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,MAAM,CAAC,GAAG,CAAC;KACxC,CAAC;AACJ,CAAC,CAAC;AAQF,MAAM,SAAS,GAAG,CAChB,KAAQ,EACR,OAAgB,EAChB,QAAwB,EACxB,MAAM,GAAG,KAAK,EACkB,EAAE,CAClC,KAAK,IAAI,GAAG;IACV,CAAC,CAAC,GAAG;IACL,CAAC,CAAE,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,CAClC,QAAQ,IAAI,OAAO;QACjB,CAAC,CAAC;YACE,CAAC,EAAE;gBACD,KAAY;gBACZ,OAAO,EAAE,oEAAoE;gBAC7E,QAAQ;aACT;SACF;QACH,CAAC,CAAC,KAAK,CACF,CAAC;AAEhB,IAAI,OAAY,EAAE,OAAe,CAAC;AAClC,MAAM,WAAW,GAAG,CAClB,KAAoB,EACpB,aAA0B,EAC1B,MAAM,GAAG,KAAK,EACU,EAAE,CAC1B,CAAC,KAAK,CAAC,4BAA4B;IACjC,CAAC,CAAC,GAAG;IACL,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC;QACvD,OAAO,CAAC,CAAC;YACP,CAAC,CAAE,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC9C,OAAO,GAAG,CAAC,IAAI,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC;oBAC7B,CAAC,CAAC,CAAC,aAAa,EAAE,EAAE,EAAE,GAAG,CAAC;oBAC1B,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAuB;YAC9D,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AAarB,IAAI,KAAqC,CAAC;AAC1C,IAAI,QAAwC,CAAC;AAC7C,MAAM,OAAO,GAOT,CACF,OAAsB,EACtB,QAA2B,EAC3B,MAAgB,EACS,EAAE;IAC3B,MAAM,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;IAC/C,MAAM,aAAa,GAAG,CAAC,GAAkB,EAAE,EAAE,CAAC,GAAG,EAAE,CACjD,GAAG,IAAI,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAEjC,MAAM,YAAY,GAAG,IAAI,GAAG,EAAuB,CAAC;IACpD,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,IAAS,EAAE,IAAU,EAAE,IAAU,EAAO,EAAE;QACxE,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;YACd,IAAI,CAAC,QAAQ;gBAAE,OAAO;YACtB,YAAY;YACZ,MAAM,CAAC,YAAY,EAAE,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAGlD,CAAC;YAEF,MAAM,OAAO,GAAwB,CAAC,GAAG,IAAI,EAAE,EAAE;gBAC/C,IAAI,GAAG,GAAG,YAAY,CAAC,GAAG,IAAI,CAAC,CAAC;gBAChC,OAAO,GAAG,KAAK,CAAC,IAAI,QAAQ,EAAE,EAAE,CAAC;YACnC,CAAC,CAAC;YAEF,MAAM,QAAQ,GAAG,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAgB,EAAO,EAAE,CAAC,CACnE,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC,QAAQ,EAAE,aAAa,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;gBAC5D,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;gBACtD,GAAG;oBACD,OAAO,CACL,GAAG,EACH,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,EACjB,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,EACpB,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAClB,CACJ,CAAC;YAEF,IAAI,QAAQ,GAAG,GAAG,EAAE,CAAC,CACnB,CAAC,QAAQ,GAAG,GAAI,CAAC,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CACvE,CAAC;YAEF,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAEnB,WAAW,IAAI,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACzC,OAAO,QAAQ,CAAC;QAClB,CAAC;QACD,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAIhD,CAAC;QAEF,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;YACxB,MAAM;YACN,OAAO,CACL,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,aAAa,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;gBAClE,GAAG,CACJ,CAAC;QACJ,CAAC;QAED,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YACf,QAAQ;YACR,OAAO,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;QACtD,CAAC;QAED,MAAM;QACN,MAAM,IAAI,GACR,KAAK,IAAI,GAAG,IAAI,OAAO,GAAG,CAAC;YACzB,CAAC,CAAC,GAAG;YACL,CAAC,CAAC,SAAS,CACP,KAAK,EACL,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,SAAS,EACjE,QAAQ,EACR,MAAM,CACP,CAAC;QAER,IAAI,IAAI,GAAG;YACT,CAAC,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,CAAC;YAC1B,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QAEnE,YAAY,CAAC,IAAI;YACf,CAAC,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;gBAChD,CAAC,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;gBAClE,YAAY,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAC/B,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CACzE,CAAC,CAAC;QACL,OAAO,KAAK,CAAC;IACf,CAAC,CAAC,CAAC;IACH,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAkB;IAC1C,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAChB,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QACnB,MAAM,CACJ,QAAQ,CAAC,MAAM;aACZ,KAAK,CAAC,GAAG,CAAC;aACV,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC1B,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAClD,CACF;IACD,OAAO,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,CAC9B,CAAC,QAAQ,CAAC,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CACzC,KAAK,IAAI,EAAE,CACZ,yBACC,CAAC,KAAK,IAAI,MAAM,IAAI,GAAG;QACrB,CAAC,CAAC,aAAa,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE;QACjD,CAAC,CAAC,EACN,EAAE,CAAC;IAEL,UAAU,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;IAEtD,cAAc,EAAE,IAAI;CACrB,CAAC;AAEF,MAAM,CAAC,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;AAC/C,MAAM,CAAC,MAAM,OAAO,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC9C,MAAM,CAAC,MAAM,aAAa,GAAG,OAAO,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;AACrE,MAAM,CAAC,MAAM,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC/C,MAAM,CAAC,MAAM,MAAM,GAAG,OAAO,CAC3B,YAAY,EACZ,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE,CACnB,MAAM;IACJ,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,QAAQ,CAAC;IACjD,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,QAAQ,CAAC,EAClD,IAAI,CACL,CAAC;AACF,MAAM,CAAC,MAAM,IAAI,GAAG,CAClB,OAAsB,EACtB,GAAW,EACX,WAAW,GAAG,CAAC,EACS,EAAE;IAC1B,WAAW,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;IACxC,OAAO,CAAC,GAAG,IAAW,EAAE,EAAE,CAAE,OAAe,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;AAC5D,CAAC,CAAC;AAMF,MAAM,CAAC,MAAM,WAAW,GAAG,CACzB,GAAW,EACX,SAAS,GAAG,IAAI,EAChB,WAAW,GAAG,CAAC,EACC,EAAE;IAClB,MAAM,KAAK,GAAG,IAAI,CAA+B,MAAM,EAAE,GAAG,EAAE,WAAW,CAAC,CAAC;IAC3E,OAAO,CAAC,IAAQ,EAAE,OAAO,GAAG,CAAC,EAAO,EAAE;QACpC,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;YACvB,MAAM;YACN,IAAI,KAAK,GAAa,GAAG,CAAC;YAC1B,KAAK,CAAC,CAAC,OAAO,EAAE,EAAE;gBAChB,OAAO,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;gBACrD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;gBACnC,OAAO,OAAO,CAAC;YACjB,CAAC,CAAC,CAAC;YAEH,OAAO,KAAK,CAAC;QACf,CAAC;QAED,IAAI,MAAM,GAAG,CAAC,CAAC;QAEf,MAAM,WAAW,GAAG,CAAC,OAAgB,EAAE,EAAE,CACvC,KAAK,CAAC,CAAC,OAAO,EAAE,EAAE,CAChB,OAAO;YACL,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CACrB,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI;gBACf,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;gBAC3C,CAAC,CAAE,KAAa,CACnB;YACH,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,SAAS,CAAC,CAAE,CACpD,CAAC;QAEJ,WAAW,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,SAAS,EAAE,CAAC;YACd,IAAI,IAAI,GAAG,OAAO,EAAE,CAAC;YACrB,MAAM,UAAU,GAAG,GAAG,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,IAAI,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC;YAErE,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QACnC,CAAC;QACD,OAAO,GAAG,EAAE,CAAC,MAAM,CAAC;IACtB,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { Encodable } from \"@tailjs/util/transport\";\nimport {\n  F,\n  T,\n  TAB_ID,\n  array,\n  decode,\n  encode,\n  filter,\n  fun,\n  httpDecode,\n  httpDecrypt,\n  httpEncode,\n  httpEncrypt,\n  map,\n  mapSharedId,\n  nil,\n  now,\n  push,\n  shift,\n  timeout,\n  undefined,\n} from \".\";\n\nexport interface SimpleStorage {\n  getItem: (key: string) => string | null;\n  setItem: (key: string, value: string, timeout?: number) => void;\n  removeItem: (key: string) => void;\n\n  /**\n   * A flag whether the storage natively supports expiry of stale value. In that case, the timestamp for expiry will not be serialized.\n   * This is the case for cookies, so no need to bloat the scarce data capacity more than necessary.\n   */\n  supportsExpiry?: boolean;\n}\n\nexport interface StorageAccess {\n  <T extends Encodable = Encodable>(key: string): T | null;\n  <T extends Encodable>(key: string, value: T, timeout?: number): T;\n\n  <T extends Encodable>(\n    key: string,\n    value: (current: T) => T,\n    timeout?: number\n  ): T;\n}\n\nexport interface MappedStorageAccess<T extends Encodable> {\n  (): T | null;\n  (value: T, timeout?: number): T;\n  (value: (current: T) => T, timeout?: number): T;\n}\n\nexport interface ObservableStorageAccess extends StorageAccess {\n  <T extends Encodable | null>(\n    handler: StorageItemListener<T>,\n    self: boolean\n  ): () => boolean | void;\n}\n\nexport type StorageItemListener<T extends Encodable = Encodable> = (\n  key: string,\n  value: T | null,\n  oldValue: T | null,\n  sourceId: string | null\n) => boolean | void;\n\nconst memoryStorage = (): SimpleStorage => {\n  const values: Record<string, string> = {};\n  return {\n    getItem: (key) => values[key] as any,\n    setItem: (key, value) => (values[key] = value),\n    removeItem: (key) => delete values[key],\n  };\n};\n\ntype StorageEntry<T extends Encodable = Encodable> = [\n  value: T,\n  expires?: number,\n  source?: string\n];\n\nconst serialize = <T extends Encodable = Encodable>(\n  value: T,\n  expires?: number,\n  sourceId?: string | null,\n  secure = false\n): T extends null ? null : string =>\n  value == nil\n    ? nil\n    : ((secure ? httpEncrypt : httpEncode)(\n        sourceId || expires\n          ? {\n              $: [\n                value as any,\n                expires, // If there is a source ID we need a value to keep the array length.\n                sourceId,\n              ],\n            }\n          : value\n      ) as any);\n\nlet decoded: any, expires: number;\nconst deserialize = <T extends Encodable = Encodable>(\n  value: string | null,\n  removeExpired?: () => void,\n  secure = false\n): StorageEntry<T> | null =>\n  !value /* including empty string */\n    ? nil\n    : ((decoded = (secure ? httpDecrypt : httpDecode)(value)),\n      decoded.$\n        ? (((expires = +((decoded = decoded.$)[1] ?? 0)),\n          expires > 0 && expires < now(F)\n            ? (removeExpired?.(), nil)\n            : [decoded[0], expires, decoded[2]]) as StorageEntry<any>)\n        : [decoded]);\n\ntype StorageDelta = {\n  key: string | null;\n  newValue: string | null;\n  oldValue: string | null;\n};\n\ntype DeltaEventMapper = (\n  listener: (delta: StorageDelta) => void,\n  remove?: boolean\n) => void;\n\nlet entry: StorageEntry<Encodable> | null;\nlet oldEntry: StorageEntry<Encodable> | null;\nconst storage: {\n  (storage: SimpleStorage): StorageAccess;\n  (\n    storage: SimpleStorage,\n    register?: DeltaEventMapper,\n    secure?: boolean\n  ): ObservableStorageAccess;\n} = (\n  storage: SimpleStorage,\n  register?: DeltaEventMapper,\n  secure?: boolean\n): ObservableStorageAccess => {\n  const sourceId = register ? TAB_ID : undefined;\n  const removeExpired = (key: string | null) => () =>\n    key && storage.removeItem(key);\n\n  const ownListeners = new Set<StorageItemListener>();\n  const accessor = Object.assign((arg0: any, arg1?: any, arg2?: any): any => {\n    if (fun(arg0)) {\n      if (!register) return;\n      // Listener.\n      const [innerHandler, triggerSelf = F] = [arg0, arg1] as [\n        StorageItemListener,\n        boolean\n      ];\n\n      const handler: StorageItemListener = (...args) => {\n        let res = innerHandler(...args);\n        return res === F && unlisten?.();\n      };\n\n      const listener = ({ key, newValue, oldValue }: StorageEvent): any => (\n        ((entry = deserialize(newValue, removeExpired(key), secure)),\n        (oldEntry = deserialize(oldValue, undefined, secure))),\n        key &&\n          handler(\n            key,\n            entry?.[0] ?? nil,\n            oldEntry?.[0] ?? nil,\n            entry?.[2] ?? nil\n          )\n      );\n\n      let unlisten = () => (\n        (unlisten = nil!), register(listener, T), ownListeners.delete(handler)\n      );\n\n      register(listener);\n\n      triggerSelf && ownListeners.add(handler);\n      return unlisten;\n    }\n    let [key, value, timeout = 0] = [arg0, arg1, arg2] as [\n      string,\n      Encodable | ((current: any) => any) | undefined,\n      number\n    ];\n\n    if (value === undefined) {\n      // get\n      return (\n        deserialize(storage.getItem(key), removeExpired(key), secure)?.[0] ??\n        nil\n      );\n    }\n\n    if (fun(value)) {\n      //update\n      return accessor(key, value(accessor(key)), timeout);\n    }\n\n    // set\n    const data =\n      value == nil || timeout < 0\n        ? nil\n        : serialize(\n            value,\n            timeout && !storage.supportsExpiry ? now(T) + timeout : undefined,\n            sourceId,\n            secure\n          );\n\n    data == nil\n      ? storage?.removeItem(key)\n      : storage?.setItem(key, data, timeout > 0 ? timeout : undefined);\n\n    ownListeners.size &&\n      (((entry = deserialize(data, undefined, secure)),\n      (oldEntry = deserialize(storage.getItem(key), undefined, secure))),\n      ownListeners.forEach((handler) =>\n        handler(key, entry?.[0] ?? nil, oldEntry?.[0] ?? nil, entry?.[2] ?? nil)\n      ));\n    return value;\n  });\n  return accessor;\n};\n\nexport const cookieStorage: SimpleStorage = {\n  getItem: (key) => (\n    (key = encode(key)),\n    decode(\n      document.cookie\n        .split(\";\")\n        .map((kv) => kv.split(\"=\"))\n        .find((kv) => kv[0].trim() === key)?.[1] || nil\n    )\n  ),\n  setItem: (key, value, maxAge) =>\n    (document.cookie = `${encode(key)}=${encode(\n      value ?? \"\"\n    )}; Path=/; SameSite=Lax${\n      !value || maxAge != nil\n        ? `; Max-Age=${Math.round((maxAge ?? 0) / 1000)}`\n        : \"\"\n    }`),\n\n  removeItem: (key) => cookieStorage.setItem(key, \"\", 0),\n\n  supportsExpiry: true,\n};\n\nexport const memory = storage(memoryStorage());\nexport const cookies = storage(cookieStorage);\nexport const secureCookies = storage(cookieStorage, undefined, true);\nexport const session = storage(sessionStorage);\nexport const shared = storage(\n  localStorage,\n  (listener, remove) =>\n    remove\n      ? window.removeEventListener(\"storage\", listener)\n      : window.addEventListener(\"storage\", listener),\n  true\n);\nexport const bind = <T extends Encodable = Encodable>(\n  storage: StorageAccess,\n  key: string,\n  useSharedId = T\n): MappedStorageAccess<T> => {\n  useSharedId && (key = mapSharedId(key));\n  return (...args: any[]) => (storage as any)(key, ...args);\n};\n\nexport type SharedQueue<T extends Encodable = Encodable> = {\n  (item: T, replace?: boolean): () => boolean;\n  (): T | null;\n};\nexport const sharedQueue = <T extends Encodable>(\n  key: string,\n  keyExpiry = 2000,\n  useSharedId = T\n): SharedQueue<T> => {\n  const queue = bind<[item: T, expires: number][]>(shared, key, useSharedId);\n  return (item?: T, replace = F): any => {\n    if (item === undefined) {\n      // Get\n      let match: T | null = nil;\n      queue((current) => {\n        current = filter(current, (item) => item[1] > now());\n        match = shift(current)?.[0] ?? nil;\n        return current;\n      });\n\n      return match;\n    }\n\n    let exists = T;\n\n    const updateQueue = (replace: boolean) =>\n      queue((current) =>\n        replace\n          ? map(current, (other) =>\n              other[0] === item\n                ? ((exists = T), [item, now() + keyExpiry])\n                : (other as any)\n            )\n          : push(current ?? [], [item, now() + keyExpiry])!\n      );\n\n    updateQueue(replace);\n    if (keyExpiry) {\n      let poll = timeout();\n      const refreshKey = () => (updateQueue(T), !exists && poll(), exists);\n\n      poll(refreshKey, -keyExpiry / 2);\n    }\n    return () => exists;\n  };\n};\n"]}