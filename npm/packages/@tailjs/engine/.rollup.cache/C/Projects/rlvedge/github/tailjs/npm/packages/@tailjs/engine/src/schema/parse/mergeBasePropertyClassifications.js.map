{"version":3,"file":"mergeBasePropertyClassifications.js","sourceRoot":"","sources":["mergeBasePropertyClassifications.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAG9C,MAAM,CAAC,MAAM,gCAAgC,GAAG,CAC9C,aAAyB,EACzB,IAAY,EACZ,MAAsB,EACtB,IAAsB,EACtB,EAAE;IACF,IACE,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC;QAC/B,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC;QAC1B,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACjC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,GAAG,EAAE,CAAC,EAAE,aAAa,CAAC,EACzC,CAAC;QACD,OAAO;IACT,CAAC;IAED,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;QAC1C,MAAM,YAAY,GAAG,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,YAAY,EAAE,CAAC;YACjB,MAAM,CAAC,cAAc,KAAK,YAAY,CAAC,cAAc,CAAC;YACtD,MAAM,CAAC,QAAQ,KAAK,YAAY,CAAC,QAAQ,CAAC;YAC1C,MAAM,CAAC,YAAY,KAAK,YAAY,CAAC,YAAY,CAAC;QACpD,CAAC;QACD,gCAAgC,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { add, isDefined } from \"@tailjs/util\";\r\nimport { ParsedProperty, ParsedType } from \".\";\r\n\r\nexport const mergeBasePropertyClassifications = (\r\n  declaringType: ParsedType,\r\n  name: string,\r\n  target: ParsedProperty,\r\n  seen?: Set<ParsedType>\r\n) => {\r\n  if (\r\n    (isDefined(target.classification) &&\r\n      isDefined(target.purposes) &&\r\n      isDefined(target.censorIgnore)) ||\r\n    !add((seen ??= new Set()), declaringType)\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  declaringType.extends?.forEach((baseType) => {\r\n    const baseProperty = baseType.properties.get(name);\r\n    if (baseProperty) {\r\n      target.classification ??= baseProperty.classification;\r\n      target.purposes ??= baseProperty.purposes;\r\n      target.censorIgnore ??= baseProperty.censorIgnore;\r\n    }\r\n    mergeBasePropertyClassifications(baseType, name, target, seen);\r\n  });\r\n};\r\n"]}