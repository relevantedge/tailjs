{"version":3,"file":"mergeBaseProperties.js","sourceRoot":"","sources":["mergeBaseProperties.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAC;AAGpD,MAAM,CAAC,MAAM,mBAAmB,GAAG,CACjC,IAAgB,EAChB,IAAqB,EACrB,EAAE;IACF,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;QAAE,OAAO,IAAI,CAAC;IAElC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,CACjC,OAAO,CACL,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,UAAU,EAC9C,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE;IACnB,+DAA+D;IAC/D,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAC1C,GAAG,QAAQ;QACX,GAAG,OAAO;KACX,CAAC,CAAC,CACN,CACF,CAAC;IAEF,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;QACjC,CAAC,QAAQ,CAAC,QAAQ,KAAK,IAAI,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;AACd,CAAC,CAAC","sourcesContent":["import { add, forEach, update } from \"@tailjs/util\";\r\nimport { ParsedType } from \".\";\r\n\r\nexport const mergeBaseProperties = (\r\n  type: ParsedType,\r\n  seen: Set<ParsedType>\r\n) => {\r\n  if (!add(seen, type)) return type;\r\n\r\n  type.extends?.forEach((baseType) =>\r\n    forEach(\r\n      mergeBaseProperties(baseType, seen).properties,\r\n      ([name, property]) =>\r\n        // Merge base property's settings on current if not overridden.\r\n        update(type.properties, name, (current) => ({\r\n          ...property,\r\n          ...current,\r\n        }))\r\n    )\r\n  );\r\n\r\n  type.extends?.forEach((baseType) => {\r\n    (baseType.subtypes ??= new Set()).add(type);\r\n  });\r\n\r\n  return type;\r\n};\r\n"]}