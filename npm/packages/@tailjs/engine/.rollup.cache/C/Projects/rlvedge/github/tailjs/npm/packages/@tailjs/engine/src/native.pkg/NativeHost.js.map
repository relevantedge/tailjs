{"version":3,"file":"NativeHost.js","sourceRoot":"","sources":["NativeHost.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from \"fs\";\nimport http from \"http\";\nimport https from \"https\";\nimport * as p from \"path\";\nimport { v4 as uuid } from \"uuid\";\nimport zlib from \"zlib\";\nimport type {\n  ChangeHandler,\n  EngineHost,\n  HostResponse,\n  HttpRequest,\n  LogMessage,\n  ResourceEntry,\n} from \"../shared\";\n\nexport class NativeHost implements EngineHost {\n  private readonly _rootPath: string;\n  private readonly _console: boolean;\n\n  constructor(rootPath: string, console = true) {\n    this._rootPath = p.resolve(rootPath);\n    this._console = console;\n  }\n  async ls(\n    path: string,\n    rercursively?: boolean | undefined\n  ): Promise<ResourceEntry[] | null> {\n    path = p.join(this._rootPath, path);\n    if (!path.startsWith(this._rootPath)) {\n      throw new Error(`Invalid path (it is outside the root scope).`);\n    }\n    if (!fs.existsSync(path)) {\n      return null;\n    }\n\n    const filePaths = await fs.promises.readdir(path);\n    const resources: ResourceEntry[] = [];\n    for (const path in filePaths) {\n      if (!path.startsWith(this._rootPath)) {\n        continue;\n      }\n      const stat = fs.statSync(path);\n      const type = stat.isFile()\n        ? \"file\"\n        : stat.isDirectory()\n        ? \"dir\"\n        : undefined;\n      if (!type) {\n        continue;\n      }\n\n      resources.push({\n        created: stat.birthtimeMs,\n        modified: stat.mtimeMs,\n        path: path.substring(this._rootPath.length),\n        type,\n        name: p.basename(path),\n      });\n      if (rercursively && stat.isDirectory()) {\n        const children = await this.ls(path, true);\n        if (children) {\n          resources.push(...children);\n        }\n      }\n    }\n    return resources;\n  }\n\n  public async compress(\n    data: string | Uint8Array,\n    algorithm: string\n  ): Promise<Uint8Array | null> {\n    if (algorithm === \"br\") {\n      return await new Promise((resolve, reject) => {\n        zlib.brotliCompress(\n          typeof data === \"string\" ? data : Buffer.from(data).toString(\"utf-8\"),\n          {\n            params: {\n              [zlib.constants.BROTLI_PARAM_QUALITY]:\n                zlib.constants.BROTLI_MAX_QUALITY,\n            },\n          },\n          (error, result) => {\n            if (error) reject(error);\n            resolve(new Uint8Array(result));\n          }\n        );\n      });\n    }\n    if (algorithm === \"gzip\") {\n      return await new Promise((resolve, reject) => {\n        zlib.gzip(\n          typeof data === \"string\" ? data : Buffer.from(data).toString(\"utf-8\"),\n          {\n            level: 9,\n          },\n          (error, result) => {\n            if (error) reject(error);\n            resolve(new Uint8Array(result));\n          }\n        );\n      });\n    }\n    return null;\n  }\n\n  async log<T extends string | Record<string, any>>({\n    group = \"console\",\n    message: data,\n    level = \"info\",\n    source,\n  }: LogMessage<T>) {\n    const msg = JSON.stringify({\n      timestamp: new Date().toISOString(),\n      source,\n      level,\n      data,\n    });\n    if (group === \"console\" || this._console) {\n      switch (level) {\n        case \"debug\":\n          console.debug(msg);\n          break;\n        case \"warn\":\n          console.warn(msg);\n          break;\n        case \"error\":\n          console.error(msg);\n          break;\n        default:\n          console.log(msg);\n      }\n      return;\n    }\n\n    let dir = p.join(this._rootPath, \"logs\");\n    const parts = group.split(\"/\");\n    if (parts.length > 1) {\n      const newDir = p.join(dir, ...parts.slice(0, parts.length - 1));\n      if (!newDir.startsWith(dir)) {\n        throw new Error(`Invalid group name '${group}'.`);\n      }\n    }\n    await fs.promises.mkdir(dir, { recursive: true });\n    await fs.promises.appendFile(\n      p.join(dir, `${parts[parts.length - 1]}.json`),\n      `${msg}\\n`,\n      \"utf-8\"\n    );\n  }\n\n  readText(\n    path: string,\n    changeHandler?: ChangeHandler<string>\n  ): Promise<string | null> {\n    return this._read(path, true, changeHandler);\n  }\n\n  read(\n    path: string,\n    changeHandler?: ChangeHandler<Uint8Array>\n  ): Promise<Uint8Array | null> {\n    return this._read(path, false, changeHandler);\n  }\n\n  private async _read(\n    path: string,\n    text: boolean,\n    changeHandler?: ChangeHandler<any>\n  ) {\n    const fullPath = p.resolve(p.join(this._rootPath, path));\n\n    if (!fullPath.startsWith(this._rootPath)) {\n      throw new Error(\"The requested path is outside the root.\");\n    }\n    if (!fs.existsSync(fullPath)) {\n      return null;\n    }\n    if (changeHandler) {\n      fs.watchFile(fullPath, async function listener() {\n        try {\n          if ((await changeHandler(path, read)) !== true) {\n            fs.unwatchFile(fullPath, listener);\n            return;\n          }\n        } catch (e) {\n          console.error(e);\n          // Don't crash the host with an unhandled async exception.\n        }\n      });\n    }\n\n    return await read();\n    async function read() {\n      if (text) {\n        return (await fs.promises.readFile(fullPath, \"utf-8\")) as any;\n      } else {\n        return new Uint8Array(\n          (await fs.promises.readFile(fullPath)).buffer\n        ) as any;\n      }\n    }\n  }\n\n  public request<Binary extends boolean = false>(\n    request: HttpRequest<Binary>\n  ): Promise<HostResponse<Binary extends true ? Uint8Array : string>> {\n    request.method ??= request.body ? \"POST\" : \"GET\";\n\n    return new Promise((resolve, reject) => {\n      const tryCatch = <T>(action: () => T) => {\n        try {\n          return action();\n        } catch (e) {\n          reject(e);\n        }\n      };\n      tryCatch(() => {\n        if (!request) return;\n        const req = (request.url.startsWith(\"https:\") ? https : http).request(\n          request.url,\n          {\n            headers: request.headers,\n            method: request.method,\n            cert: request.x509?.cert\n              ? typeof request.x509.cert === \"string\"\n                ? request.x509.cert\n                : Buffer.from(request.x509.cert.buffer)\n              : void 0,\n            key: request.x509?.key,\n          },\n          (res) => {\n            if (!res?.statusCode) {\n              reject(new Error(\"The server did not reply with a status code.\"));\n              return;\n            }\n\n            const body: any[] = [];\n            res.on(\"data\", (chunk) => tryCatch(() => body.push(chunk)));\n            res.on(\"end\", () =>\n              tryCatch(() => {\n                if (!request) return;\n                const response = Buffer.concat(body);\n\n                const headers: Record<string, string> = {};\n                const cookies: string[] = [];\n\n                for (let [name, value] of Object.entries(res.headers)) {\n                  if (value == null) continue;\n                  name = name.toLowerCase();\n                  if (name === \"set-cookie\") {\n                    cookies.push(...(Array.isArray(value) ? value : [value]));\n                    continue;\n                  }\n                  headers[name] = Array.isArray(value)\n                    ? value.join(\", \")\n                    : value;\n                }\n\n                resolve({\n                  status: res.statusCode ?? 502,\n                  headers,\n                  cookies,\n                  body: (request.binary\n                    ? new Uint8Array(response)\n                    : response.toString(\"utf-8\")) as any,\n                });\n              })\n            );\n          }\n        );\n\n        req.on(\"error\", (err) => {\n          reject(err);\n        });\n\n        req.on(\"timeout\", () => {\n          req.destroy();\n          reject(new Error(\"Request time out\"));\n        });\n\n        if (request.body) {\n          req.end(request!.body, \"utf-8\");\n        }\n      });\n    });\n  }\n\n  nextId(scope: string): Promise<string> | string {\n    // UUID v4, remove hyphens, reencode as if radix 16 with radix 36 to reduce number of characters further.\n    return uuid()\n      .replaceAll(\"-\", \"\")\n      .match(/[0-9a-fA-F]{1,13}/g)!\n      .map((value) => parseInt(value, 16).toString(36))\n      .join(\"\");\n  }\n}\n"]}