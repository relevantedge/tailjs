{"version":3,"file":"context.js","sourceRoot":"","sources":["context.ts"],"names":[],"mappings":"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","sourcesContent":["import { QUERY_DEVICE } from \"@constants\";\nimport {\n  HeartbeatEvent,\n  LocalID,\n  Timestamp,\n  UserAgentEvent,\n  UserInteractionEvent,\n  ViewEndedEvent,\n  ViewEvent,\n  ViewTimingEvent,\n  cast,\n  isViewEvent,\n} from \"@tailjs/types\";\nimport {\n  TrackerExtensionFactory,\n  detectDeviceType,\n  isChangeUserCommand,\n} from \"..\";\nimport {\n  F,\n  noopAction as NO_OP,\n  T,\n  addDependency,\n  assign,\n  debug,\n  del,\n  document,\n  eventSet,\n  forEach,\n  getViewportSize,\n  isForegroundTab,\n  isInternalUrl,\n  listen,\n  location,\n  map,\n  mark,\n  matchExHash,\n  navigator,\n  nextId,\n  nil,\n  now,\n  parseDomain,\n  parseParameters,\n  push,\n  registerSharedState,\n  registerViewEndAction,\n  replace,\n  session,\n  sharedQueue,\n  split,\n  timeout,\n  timer,\n  trackerConfig,\n  transpose,\n  undefined,\n  window,\n} from \"../lib\";\n\ntype TabInfo = [\n  id: LocalID,\n  created: Timestamp,\n  navigated: Timestamp,\n  views: number\n];\n\nlet currentViewEvent: ViewEvent | undefined;\n\nexport const getCurrentViewId = () => currentViewEvent?.id;\nconst [addViewChangedListener, viewChanged] = eventSet<[viewId: string]>();\nexport { addViewChangedListener };\n\nexport type ViewMessage = {\n  view?: { id: string; timing: UserInteractionEvent[\"timing\"] };\n  who?: LocalID;\n  vars?: [key: string, value: any, source: string][];\n};\n\nlet pushPopNavigation: ViewEvent[\"navigationType\"] | undefined;\n\nexport type ReferringViewData = [\n  viewId: LocalID,\n  relatedEventId: LocalID | undefined\n];\n\nconst referrers = sharedQueue<ReferringViewData>(\"ref\", 10000);\nexport const pushNavigationSource = (navigationEventId: LocalID) =>\n  referrers([currentViewEvent!.id, navigationEventId]);\n\nconst totalDuration = timer();\nconst visibleDuration = timer();\nconst interactiveDuration = timer();\n\nexport const getVisibleDuration = () => visibleDuration();\n\nconst [onFrame, callOnFrame] = eventSet<[frame: HTMLIFrameElement]>();\nexport { onFrame };\n\nconst knownFrames = new WeakSet<any>();\nconst frames = document.getElementsByTagName(\"iframe\");\n\nexport const context: TrackerExtensionFactory = {\n  id: \"context\",\n  setup(tracker) {\n    timeout(\n      () =>\n        forEach(\n          frames,\n          (frame) => mark(knownFrames, frame) && callOnFrame(frame)\n        ),\n      -1000\n    ).pulse();\n\n    let isNewTab = T;\n\n    let activations = 1;\n    let viewPosted = F; // Don't post heartbeats on hide before the view has been posted.\n\n    const tab = session<TabInfo>(\"t\", (current) => {\n      if ((isNewTab = !current)) {\n        return [nextId(), now(), now(), 0];\n      }\n      current[2] = now();\n      return current;\n    });\n    let firstTab = T;\n    registerSharedState(\n      \"first\",\n      () => F,\n      (first) => {\n        if (!first) {\n          firstTab = F;\n          currentViewEvent &&\n            del(currentViewEvent, [\"firstTab\", \"landingPage\"]);\n        }\n      }\n    );\n\n    let pendingViewEvent = NO_OP;\n    let pendingViewEndEvent = NO_OP;\n\n    let currentLocation: string | null = nil;\n    const postView = (force = F) => {\n      if (\n        matchExHash(\"\" + currentLocation, (currentLocation = location.href)) &&\n        !force\n      ) {\n        return;\n      }\n\n      pendingViewEvent();\n      pendingViewEndEvent();\n\n      totalDuration.reset();\n      visibleDuration.reset();\n      interactiveDuration.reset();\n\n      session<TabInfo>(\"t\", () => {\n        tab[2] = now();\n        ++tab[3];\n        return tab;\n      });\n\n      const { href, domain } = parseDomain(location.href) ?? {};\n      currentViewEvent = {\n        type: \"VIEW\",\n        timestamp: now(),\n        id: nextId(),\n        tab: tab[0],\n        href,\n        path: location.pathname,\n        hash: location.hash || undefined,\n        domain,\n        tabIndex: tab[3],\n        viewport: getViewportSize(),\n      };\n      viewChanged(currentViewEvent.id);\n\n      currentViewEvent.firstTab = firstTab;\n      firstTab && tab[3] === 1 && (currentViewEvent.landingPage = T);\n\n      // Query string\n      const trySplit = (s: string, sep: string, parts = split(s, sep)) =>\n        parts.length > 1 ? parts : nil;\n\n      const ps = parseParameters(replace(location.href, /^[^?]*\\??/, \"\"));\n      if (ps) {\n        const qs = (currentViewEvent!.queryString = transpose(ps, ([k, v]) => [\n          k.toLowerCase(),\n          v.length > 1\n            ? v\n            : trySplit(v[0], \"|\") ||\n              trySplit(v[0], \";\") ||\n              trySplit(v[0], \",\") ||\n              v,\n        ]));\n        map(\n          [\"source\", \"medium\", \"campaign\", \"term\", \"content\"],\n          (p, _) => ((currentViewEvent!.utm ??= {})[p] = qs[`utm_${p}`]?.[0])\n        );\n      }\n\n      !(currentViewEvent.navigationType = pushPopNavigation) &&\n        performance &&\n        map(\n          performance.getEntriesByType(\"navigation\"),\n          (entry: PerformanceNavigationTiming) => {\n            currentViewEvent!.redirects = entry.redirectCount;\n            currentViewEvent!.navigationType = replace(\n              entry.type,\n              /\\_/g,\n              \"-\"\n            ) as any;\n          }\n        );\n\n      pushPopNavigation = undefined;\n\n      if ((currentViewEvent.navigationType ??= \"navigate\") === \"navigate\") {\n        // Try find related event and parent tab context if any.\n        // And only if navigating (not back/forward/refresh)\n\n        if (isNewTab && isInternalUrl(document.referrer)) {\n          const referrer = referrers();\n\n          currentViewEvent.view = referrer?.[0];\n          currentViewEvent.related = referrer?.[1];\n        }\n      }\n\n      // Referrer\n      const referrer = document.referrer || nil;\n      referrer &&\n        !isInternalUrl(referrer) &&\n        (currentViewEvent!.externalReferrer = {\n          href: referrer,\n          domain: parseDomain(referrer)?.domain,\n        });\n\n      viewPosted = F;\n      pendingViewEvent = registerViewEndAction(\n        () => (\n          (viewPosted = T),\n          push(tracker, currentViewEvent),\n          currentViewEvent?.firstTab && push(tracker, { flush: T })\n        )\n      );\n      pendingViewEndEvent = registerViewEndAction(() => {\n        push(\n          tracker,\n\n          { type: \"VIEW_ENDED\", timing: {} } as ViewEndedEvent,\n\n          {\n            set: { view: undefined },\n          }\n        );\n        isNewTab = F;\n      });\n\n      push(tracker, {\n        get: {\n          view: (view: any) => (currentViewEvent!.definition = view),\n          rendered: () => {\n            // Allow some extra time for gossiping to figure out if we are the only tab.\n            // This will also ensure that the view is set on the event if both `view` and `rendered` are set in the same `set` command.\n            timeout(pendingViewEvent, 100);\n          },\n        },\n      });\n\n      tracker.push({\n        get: {\n          [QUERY_DEVICE]: (value) => {\n            if (!value || !isForegroundTab()) return;\n            push(\n              tracker,\n              cast<UserAgentEvent>({\n                type: \"USER_AGENT\",\n                hasTouch: navigator.maxTouchPoints > 0,\n                userAgent: navigator.userAgent,\n                view: currentViewEvent?.id,\n                languages: map(\n                  navigator.languages,\n                  (id, i, parts = split(id, \"-\")) =>\n                    cast<UserAgentEvent[\"languages\"]>({\n                      id,\n                      language: parts[0],\n                      region: parts[1],\n                      primary: i === 0,\n                      preference: i + 1,\n                    })\n                ),\n                timezone: {\n                  iana: Intl.DateTimeFormat().resolvedOptions().timeZone,\n                  offset: new Date().getTimezoneOffset(),\n                },\n                ...detectDeviceType(),\n              })\n            );\n          },\n        },\n      });\n    };\n\n    const interactiveTimeout = timeout();\n    listen(\n      document,\n      [\"pointermove\", \"scroll\", \"pointerdown\", \"keydown\"],\n      () => {\n        interactiveDuration(T);\n        interactiveTimeout(() => interactiveDuration(F), 10000);\n      }\n    );\n\n    listen(document, \"visibilitychange\", () => {\n      if (document.visibilityState === \"hidden\") {\n        visibleDuration(F);\n        interactiveDuration(F);\n      } else {\n        visibleDuration(T);\n        ++activations;\n      }\n    });\n\n    listen(\n      window,\n      \"popstate\",\n      () => ((pushPopNavigation = \"back-forward\"), postView())\n    );\n    map([\"push\", \"replace\"], (name) => {\n      const inner = history[(name += \"State\")];\n      history[name] = (...args: any) => {\n        inner.apply(history, args);\n        pushPopNavigation = \"navigate\";\n        postView();\n      };\n    });\n\n    postView();\n\n    const heartbeat = timeout();\n    const resetHeartbeat = () =>\n      viewPosted &&\n      trackerConfig.heartbeatFrequency > 0 &&\n      heartbeat(\n        () =>\n          isForegroundTab() &&\n          tracker.push(cast<HeartbeatEvent>({ type: \"HEARTBEAT\", timing: {} })),\n        -trackerConfig.heartbeatFrequency\n      );\n\n    resetHeartbeat();\n\n    return {\n      processCommand(command) {\n        if (isChangeUserCommand(command)) {\n          tracker.push(\n            command.username\n              ? { type: \"LOGIN\", username: command.username }\n              : { type: \"LOGOUT\" }\n          );\n          return T;\n        }\n        return F;\n      },\n      decorate(event) {\n        resetHeartbeat();\n\n        if (!currentViewEvent || isViewEvent(event)) return;\n        const view = currentViewEvent?.id,\n          ctx = {\n            view,\n            timing: (event as ViewTimingEvent)?.timing && {\n              activations,\n              totalTime: totalDuration(),\n              visibleTime: visibleDuration(),\n              interactiveTime: interactiveDuration(),\n            },\n          };\n\n        ctx && (assign(event, ctx), addDependency(event, currentViewEvent));\n      },\n    };\n  },\n};\n"]}